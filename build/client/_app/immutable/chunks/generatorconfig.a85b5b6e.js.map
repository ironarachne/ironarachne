{"version":3,"file":"generatorconfig.a85b5b6e.js","sources":["../../../../../../node_modules/@ironarachne/made-up-names/dist/cultures/fantasy.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/dragonborn.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/gnome.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/halfelf.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/halforc.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/tiefling.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/goblin.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/orc.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/troll.js","../../../../../../src/lib/gender.ts","../../../../../../src/lib/physicaltraits/physicaltrait.ts","../../../../../../src/lib/physicaltraits/generator.ts","../../../../../../src/lib/species/human.ts","../../../../../../src/lib/characters/personality/personalitytrait.ts","../../../../../../src/lib/characters/character.ts","../../../../../../src/lib/characters/personality/alltraits.ts","../../../../../../src/lib/characters/personality/generatorconfig.ts","../../../../../../src/lib/characters/personality/generator.ts","../../../../../../src/lib/characters/generator.ts","../../../../../../src/lib/species/aarakocra.ts","../../../../../../src/lib/species/aasimar.ts","../../../../../../src/lib/species/bugbear.ts","../../../../../../src/lib/species/centaur.ts","../../../../../../src/lib/species/darkelf.ts","../../../../../../src/lib/species/deepgnome.ts","../../../../../../src/lib/species/dragonborn.ts","../../../../../../src/lib/species/duergar.ts","../../../../../../src/lib/species/dwarf.ts","../../../../../../src/lib/species/elf.ts","../../../../../../src/lib/species/firbolg.ts","../../../../../../src/lib/species/gnome.ts","../../../../../../src/lib/species/goblin.ts","../../../../../../src/lib/species/half-elf.ts","../../../../../../src/lib/species/half-orc.ts","../../../../../../src/lib/species/halfling.ts","../../../../../../src/lib/species/highelf.ts","../../../../../../src/lib/species/hobgoblin.ts","../../../../../../src/lib/species/orc.ts","../../../../../../src/lib/species/tiefling.ts","../../../../../../src/lib/species/troll.ts","../../../../../../src/lib/species/fantasy.ts","../../../../../../src/lib/characters/generatorconfig.ts"],"sourcesContent":["\"use strict\";\nimport GenericNameGenerator from \"../generators/generic.js\";\nimport GeneratorSet from \"../generatorset.js\";\nexport default class FantasySet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"fantasy\";\n        this.country = country();\n        this.culture = culture();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n        this.town = town();\n    }\n}\nfunction culture() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"pmlMyNmN\", \"kmlMyNm\", \"kyTHmkI\", \"pOhRAkI\"];\n    return gen;\n}\nfunction country() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"pvlvlIA\", \"lvpvpIA\", \"vnvlvpA\", \"vpvlY\", \"flvnv\", \"vfpvlION\", \"vlxRIA\"];\n    return gen;\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"kyPER\",\n        \"sLvTCHER\",\n        \"sv(RR,R)IER\",\n        \"pvn(D,T)ElS(E,O)N\",\n        \"pvnDElS\",\n        \"ypSBURG\",\n        \"ypSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vkLAND\",\n        \"yfpLmND\",\n        \"vcfFORD\",\n        \"vSnFvRD\",\n    ];\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vnvlA\", \"ynA\", \"vbvlyN\", \"vlvnA\", \"vcnvA\", \"pvlvNIA\", \"tvlvNA\", \"pvSSvkA\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"jmB\",\n        \"vFFlvn\",\n        \"evplvn\",\n        \"vpylvn\",\n        \"fvLLyn\",\n        \"fvlvpml\",\n        \"vppvl\",\n        \"pmspvn\",\n        \"pv+lvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n    ];\n    return gen;\n}\nfunction town() {\n    let gen = new GenericNameGenerator();\n    const first = [\n        \"Two\",\n        \"Three\",\n        \"Four\",\n        \"Five\",\n        \"Six\",\n        \"Seven\",\n        \"Eight\",\n        \"Nine\",\n        \"Ten\",\n        \"Twin\",\n        \"Triple\",\n        \"Black\",\n        \"White\",\n        \"Blue\",\n        \"Grey\",\n        \"Green\",\n        \"Purple\",\n        \"Red\",\n        \"Yellow\",\n    ];\n    const second = [\n        \"Barrows\",\n        \"Cliffs\",\n        \"Falls\",\n        \"Hills\",\n        \"Hollows\",\n        \"Mountains\",\n        \"Peaks\",\n        \"Ridges\",\n        \"Rivers\",\n        \"Rocks\",\n        \"Streams\",\n        \"Towers\",\n        \"Trees\",\n        \"Valleys\",\n        \"Waters\",\n    ];\n    for (let i = 0; i < first.length; i++) {\n        for (let j = 0; j < second.length; j++) {\n            gen.patterns.push(first[i].toUpperCase() + \" \" + second[j].toUpperCase());\n        }\n    }\n    let firstNameGenerator = male();\n    let firstNames = firstNameGenerator.patterns;\n    firstNameGenerator = female();\n    firstNames = firstNames.concat(firstNameGenerator.patterns);\n    const suffixes = [\n        \"Folly\",\n        \"Boon\",\n        \"Rest\",\n        \"Bequest\",\n        \"Garden\",\n        \"Repose\",\n        \"Haven\",\n        \"End\",\n        \"Pass\",\n        \"Forge\",\n        \"Bulwark\",\n    ];\n    for (let i = 0; i < firstNames.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(firstNames[i] + \"'S \" + suffixes[j].toUpperCase());\n        }\n    }\n    let patterns = [\"vlpvl\", \"tvnv\", \"lvpcv\"];\n    let additions = [\n        \"arm\",\n        \"bend\",\n        \"borough\",\n        \"bury\",\n        \"don\",\n        \"end\",\n        \"ford\",\n        \"forge\",\n        \"gale\",\n        \"glade\",\n        \"haven\",\n        \"keep\",\n        \"meet\",\n        \"rock\",\n        \"stead\",\n        \"stone\",\n        \"ton\",\n        \"town\",\n        \"vale\",\n        \"ville\",\n    ];\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < additions.length; j++) {\n            gen.patterns.push(patterns[i] + additions[j].toUpperCase());\n        }\n    }\n    patterns = [\n        \"Lake\",\n        \"River\",\n        \"Fire\",\n        \"Mountain\",\n        \"Stream\",\n        \"Hill\",\n        \"White\",\n        \"Winter\",\n        \"Fall\",\n        \"Gold\",\n        \"Silver\",\n        \"Copper\",\n        \"Iron\",\n        \"Field\",\n        \"Sky\",\n        \"Summer\",\n        \"Autumn\",\n        \"Spring\",\n        \"Night\",\n    ];\n    additions = [\n        \"stead\",\n        \"town\",\n        \"bend\",\n        \"bury\",\n        \"ton\",\n        \"vale\",\n        \"borough\",\n        \"haven\",\n        \"keep\",\n        \"meet\",\n        \"forge\",\n        \"gale\",\n        \"stone\",\n        \"rock\",\n        \"glade\",\n        \"ford\",\n    ];\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < additions.length; j++) {\n            gen.patterns.push(patterns[i].toUpperCase() + additions[j].toUpperCase());\n        }\n    }\n    return gen;\n}\n","\"use strict\";\nimport GenericNameGenerator from \"../generators/generic.js\";\nimport GeneratorSet from \"../generatorset.js\";\nexport default class DragonbornSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vlpvlvn\", \"ovlMvRvV\", \"pvRRcYlION\", \"pvRRcYlIvN\", \"pvdcYlIvN\", \"cvRvXIUS\"];\n    let prefixes = [\n        \"WHITE\",\n        \"GREEN\",\n        \"BLUE\",\n        \"WILD\",\n        \"SUMMER\",\n        \"WINTER\",\n        \"WIND\",\n        \"DAWN\",\n        \"DUSK\",\n        \"SKY\",\n        \"NIGHT\",\n        \"FIRE\",\n        \"FLAME\",\n        \"RAGE\",\n        \"HAMMER\",\n        \"RED\",\n        \"DARK\",\n        \"SPELL\",\n        \"WAR\",\n    ];\n    let suffixes = [\"BLADE\", \"BROW\", \"SCALE\", \"SPEAR\", \"RIDER\", \"WALKER\", \"RUNNER\", \"TALON\"];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"tvMvt\", \"cv+l\", \"cvlv\", \"ovRRv\", \"lAIvNN\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vlKvSIA\", \"cvLvSAR\", \"cvlvt\", \"ovnv+R\"];\n    return gen;\n}\n","\"use strict\";\nimport GenericNameGenerator from \"../generators/generic.js\";\nimport GeneratorSet from \"../generatorset.js\";\nexport default class GnomeSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vPSpvMS\", \"cvnKLER\", \"cvdLER\", \"cvdER\", \"pvpLOp\"];\n    const prefixes = [\n        \"AGATE\",\n        \"ALLOY\",\n        \"COPPER\",\n        \"CRYSTAL\",\n        \"DIAMOND\",\n        \"DUST\",\n        \"GEM\",\n        \"GOLD\",\n        \"IRON\",\n        \"JADE\",\n        \"JET\",\n        \"JEWEL\",\n        \"ONYX\",\n        \"OPAL\",\n        \"PELLET\",\n        \"RUBY\",\n        \"SAPPHIRE\",\n        \"SILVER\",\n        \"WIRE\",\n    ];\n    const suffixes = [\n        \"BITER\",\n        \"BOPPER\",\n        \"BRANDER\",\n        \"CHARMER\",\n        \"CHEST\",\n        \"DROPPER\",\n        \"HAMMER\",\n        \"MALLET\",\n        \"POPPER\",\n        \"SEEDER\",\n        \"SENDER\",\n        \"SHAPER\",\n        \"SWEEPER\",\n        \"TINKER\",\n        \"TRADER\",\n        \"WATCHER\",\n        \"WEAVER\",\n        \"WINKER\",\n        \"WOOSHER\",\n        \"WORKER\",\n    ];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"avNNA\",\n        \"SHvNvDDI\",\n        \"MvoLI\",\n        \"voAnA\",\n        \"voAnI\",\n        \"vvTHNE\",\n        \"ovpv\",\n        \"SNvflvnv\",\n        \"pvdvnv\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"Blvocvf\", \"oOdvp\", \"pvnlv\", \"pvnp\", \"cvlVER\", \"wvlVER\", \"pvlwvl\", \"pvlwv\"];\n    return gen;\n}\n","\"use strict\";\nimport GenericNameGenerator from \"../generators/generic.js\";\nimport GeneratorSet from \"../generatorset.js\";\nexport default class HalfElfSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"pv+PER\",\n        \"sLvTCHER\",\n        \"svRRIER\",\n        \"pvnDElSON\",\n        \"pvnDElS\",\n        \"vvpSBURG\",\n        \"vvpSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vcpLAND\",\n        \"vcpLvND\",\n        \"vcfFORD\",\n        \"vcnFvRD\",\n    ];\n    let prefixes = [\n        \"WHITE\",\n        \"GREEN\",\n        \"BLUE\",\n        \"WILD\",\n        \"SUMMER\",\n        \"WINTER\",\n        \"WIND\",\n        \"BEACH\",\n        \"DAWN\",\n        \"DUSK\",\n        \"SKY\",\n        \"NIGHT\",\n    ];\n    let suffixes = [\n        \"FLOWER\",\n        \"WALKER\",\n        \"SONG\",\n        \"RUNNER\",\n        \"CROWN\",\n        \"BLOSSOM\",\n        \"BELL\",\n        \"WATCHER\",\n        \"GUARD\",\n        \"STAR\",\n        \"GROVE\",\n    ];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vnvlA\", \"vnv\", \"vdvlvN\", \"vlvnA\", \"vcnvA\", \"cvlvNIA\", \"cvlvNA\", \"pvSSvpa\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vFFlvn\",\n        \"cvclvn\",\n        \"vpvlvn\",\n        \"cvLLvvn\",\n        \"cvlvpul\",\n        \"vppvl\",\n        \"pvspvn\",\n        \"pv+lvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport GenericNameGenerator from \"../generators/generic.js\";\nimport GeneratorSet from \"../generatorset.js\";\nexport default class HalfOrcSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"pv+PER\",\n        \"sLvTCHER\",\n        \"svRRIER\",\n        \"pvnDElSON\",\n        \"pvnDElS\",\n        \"vvpSBURG\",\n        \"vvpSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vcpLAND\",\n        \"vcpLvND\",\n        \"vcfFORD\",\n        \"vcnFvRD\",\n    ];\n    const prefixes = [\n        \"SMASH\",\n        \"BULL\",\n        \"RAGE\",\n        \"DEATH\",\n        \"MURDER\",\n        \"SKULL\",\n        \"FIGHT\",\n        \"BREAK\",\n        \"WAR\",\n        \"BATTLE\",\n        \"GROG\",\n        \"FEAR\",\n    ];\n    const suffixes = [\"FIST\", \"SMASH\", \"REND\", \"BLADE\", \"AXE\", \"CHOPPER\", \"CUTTER\", \"KILLER\"];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vnvlA\",\n        \"vnv\",\n        \"vdvlvN\",\n        \"vlvnA\",\n        \"vcnvA\",\n        \"cvlvNIA\",\n        \"cvlvNA\",\n        \"pvc+vpa\",\n        \"vpBvZA\",\n        \"vppvsA\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vFFlvn\",\n        \"cvclvn\",\n        \"vpvlvn\",\n        \"cvLLvvn\",\n        \"cvlvpv+l\",\n        \"vppvl\",\n        \"pvspvn\",\n        \"pv+lvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n        \"pvp\",\n        \"pvpvp\",\n        \"pvppvs\",\n        \"pAlpvs\",\n        \"pAlpvG\",\n        \"svRM\",\n        \"svRN\",\n        \"svRNpvK\",\n        \"pv+pvK\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport GenericNameGenerator from \"../generators/generic.js\";\nimport GeneratorSet from \"../generatorset.js\";\nexport default class TieflingSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"pv+PER\",\n        \"sLvTCHER\",\n        \"svRRIER\",\n        \"pvnDElSON\",\n        \"pvnDElS\",\n        \"vvpSBURG\",\n        \"vvpSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vcpLAND\",\n        \"vcpLvND\",\n        \"vcfFORD\",\n        \"vcnFvRD\",\n    ];\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vnvlA\", \"vnv\", \"vdvlvN\", \"vlvnA\", \"vcnvA\", \"cvlvNIA\", \"cvlvNA\", \"pySSvka\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vFFlvn\",\n        \"cvclvn\",\n        \"vpvlvn\",\n        \"cvLLvvn\",\n        \"cvlvpul\",\n        \"vppvl\",\n        \"pvspvn\",\n        \"pv+lvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport GenericNameGenerator from \"../generators/generic.js\";\nimport GeneratorSet from \"../generatorset.js\";\nexport default class GoblinSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"BvdvnS\", \"pvMpu\"];\n    const prefixes = [\n        \"BIG\",\n        \"CRAZE\",\n        \"FEATHER\",\n        \"FLEA\",\n        \"GREASE\",\n        \"HAIRY\",\n        \"HOG\",\n        \"HORN\",\n        \"LONG\",\n        \"OIL\",\n        \"OLD\",\n        \"PUDDING\",\n        \"SLUDGE\",\n        \"SMALL\",\n        \"UGLY\",\n        \"UNDER\",\n        \"WANDER\",\n    ];\n    const suffixes = [\n        \"BELLY\",\n        \"BOTTOM\",\n        \"BUCKET\",\n        \"DALE\",\n        \"FACE\",\n        \"FOOT\",\n        \"HOUSE\",\n        \"NOSE\",\n        \"STENCH\",\n        \"TOOTH\",\n        \"WART\",\n    ];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"oEOnY\", \"oEARL\", \"pELInDA\", \"mvlvnoA\", \"plvSovn\", \"Mvovlpvlo\", \"pvfvnA\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"BvlBvK\", \"svnwvsENK\", \"pvPPvnK\", \"pvlvplvS\", \"wvnflvo\", \"pvlnO\", \"vovlpvRT\"];\n    return gen;\n}\n","\"use strict\";\nimport GenericNameGenerator from \"../generators/generic.js\";\nimport GeneratorSet from \"../generatorset.js\";\nexport default class OrcSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"pv+PER\",\n        \"sLvTCHER\",\n        \"svRRIER\",\n        \"pvnDElSON\",\n        \"pvnDElS\",\n        \"vvpSBURG\",\n        \"vvpSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vcpLAND\",\n        \"vcpLvND\",\n        \"vcfFORD\",\n        \"vcnFvRD\",\n    ];\n    const prefixes = [\n        \"SMASH\",\n        \"BULL\",\n        \"RAGE\",\n        \"DEATH\",\n        \"MURDER\",\n        \"SKULL\",\n        \"FIGHT\",\n        \"BREAK\",\n        \"WAR\",\n        \"BATTLE\",\n        \"GROG\",\n        \"FEAR\",\n    ];\n    const suffixes = [\"FIST\", \"SMASH\", \"REND\", \"BLADE\", \"AXE\", \"CHOPPER\", \"CUTTER\", \"KILLER\"];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vnvlA\",\n        \"vnv\",\n        \"vdvlvN\",\n        \"vlvnA\",\n        \"vcnvA\",\n        \"cvlvNIA\",\n        \"cvlvNA\",\n        \"pvdvpa\",\n        \"vpBvZA\",\n        \"vp+vsA\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vFFlvn\",\n        \"cvclvn\",\n        \"vpvlvn\",\n        \"cvLLvvn\",\n        \"cvlvpul\",\n        \"vppvl\",\n        \"pvspvn\",\n        \"pv+lvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n        \"pvp\",\n        \"pvpvp\",\n        \"pvppvs\",\n        \"pAlpvs\",\n        \"pAlpvG\",\n        \"svRM\",\n        \"svRN\",\n        \"svRNpvK\",\n        \"pv+pvK\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport GenericNameGenerator from \"../generators/generic.js\";\nimport GeneratorSet from \"../generatorset.js\";\nexport default class TrollSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"pv+PER\",\n        \"sLvTCHER\",\n        \"svRRIER\",\n        \"pvnDElSON\",\n        \"pvnDElS\",\n        \"vvpSBURG\",\n        \"vvpSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vcpLAND\",\n        \"vcpLvND\",\n        \"vcfFORD\",\n        \"vcnFvRD\",\n    ];\n    const prefixes = [\n        \"SMASH\",\n        \"BULL\",\n        \"RAGE\",\n        \"DEATH\",\n        \"MURDER\",\n        \"SKULL\",\n        \"FIGHT\",\n        \"BREAK\",\n        \"WAR\",\n        \"BATTLE\",\n        \"GROG\",\n        \"FEAR\",\n    ];\n    const suffixes = [\"FIST\", \"SMASH\", \"REND\", \"BLADE\", \"AXE\", \"CHOPPER\", \"CUTTER\", \"KILLER\"];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vnvlA\",\n        \"vnv\",\n        \"vc+vlvN\",\n        \"vlvnA\",\n        \"vcnvA\",\n        \"cvlvNIA\",\n        \"cvlvNA\",\n        \"pvdvpa\",\n        \"vpBvZA\",\n        \"vppvsA\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vFFlvn\",\n        \"cvclvn\",\n        \"vpvlvn\",\n        \"cvLLvvn\",\n        \"cvlvpul\",\n        \"vppvl\",\n        \"pvspvn\",\n        \"pv+lvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n        \"pvp\",\n        \"pvpvp\",\n        \"pvppvs\",\n        \"pAlpvs\",\n        \"pAlpvG\",\n        \"svRM\",\n        \"svRN\",\n        \"svRNpvK\",\n        \"pv+pvK\",\n    ];\n    return gen;\n}\n","\"use strict\";\n\nimport type AgeCategory from \"./age/agecategory.js\";\n\nexport default class Gender {\n  name: string;\n  subjectivePronoun: string;\n  objectivePronoun: string;\n  possessivePronoun: string;\n  maxAge: number;\n  ageCategories: AgeCategory[];\n\n  constructor(\n    name: string,\n    subj: string,\n    obj: string,\n    pos: string,\n    maxAge: number,\n    ageCategories: AgeCategory[],\n  ) {\n    this.name = name;\n    this.subjectivePronoun = subj;\n    this.objectivePronoun = obj;\n    this.possessivePronoun = pos;\n    this.maxAge = maxAge;\n    this.ageCategories = ageCategories;\n  }\n}\n","\"use strict\";\n\nexport default class PhysicalTrait {\n  name: string;\n  description: string;\n  category: string;\n  tags: string[];\n\n  constructor(name: string, description: string, category: string, tags: string[]) {\n    this.name = name;\n    this.description = description;\n    this.category = category;\n    this.tags = tags;\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport PhysicalTrait from \"./physicaltrait.js\";\n\nexport default class PhysicalTraitGenerator {\n  name: string;\n  category: string;\n  options: string[];\n  tags: string[];\n\n  constructor(name: string, category: string, options: string[], tags: string[]) {\n    this.name = name;\n    this.category = category;\n    this.options = options;\n    this.tags = tags;\n  }\n\n  generate(): PhysicalTrait {\n    let description = RND.item(this.options) + \" \" + this.name;\n\n    return new PhysicalTrait(this.name, description, this.category, this.tags);\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Human implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"human\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"human\", \"martial\", \"magic\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.HumanSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"humans\";\n    this.adjective = \"human\";\n    this.commonality = 200;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"black\", \"bronzed\", \"ebony\", \"light\", \"pale\", \"tan\", \"white\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\"female\", \"she\", \"her\", \"her\", 100, AgeCategories.humanStandardFemale()),\n      new Gender(\"male\", \"he\", \"him\", \"his\", 100, AgeCategories.humanStandardMale()),\n    ];\n  }\n}\n","\"use strict\";\n\nexport default class PersonalityTrait {\n  name: string;\n  score: number;\n  descriptor: string;\n  positiveDescriptor: string;\n  negativeDescriptor: string;\n\n  constructor(name: string, negativeDescriptor: string, positiveDescriptor: string) {\n    this.name = name;\n    this.score = 0;\n    this.descriptor = \"\";\n    this.negativeDescriptor = negativeDescriptor;\n    this.positiveDescriptor = positiveDescriptor;\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport AgeCategory from \"../age/agecategory.js\";\nimport Archetype from \"../archetypes/archetype.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport Arms from \"../heraldry/arms.js\";\nimport PhysicalTrait from \"../physicaltraits/physicaltrait.js\";\nimport type Species from \"../species/species.js\";\nimport type StatBlock from \"../statblock.js\";\nimport PersonalityTrait from \"./personality/personalitytrait.js\";\nimport Title from \"./title.js\";\n\nexport default class Character {\n  titles: Title[];\n  heraldry: Arms | null;\n  archetype: Archetype;\n  species: Species;\n  description: string;\n  summary: string;\n  gender: Gender;\n  age: number;\n  ageCategory: AgeCategory;\n  height: number;\n  weight: number;\n  traits: string[];\n  personalityTraits: PersonalityTrait[];\n  physicalTraits: PhysicalTrait[];\n  name: string;\n  firstName: string;\n  lastName: string;\n  status: string;\n  statBlock: StatBlock | null;\n  abilities: string[];\n  carried: Item[];\n  threatLevel: number;\n  tags: string[];\n\n  constructor(species: Species) {\n    this.titles = [];\n    this.abilities = species.abilities;\n    this.tags = species.tags;\n    this.heraldry = null;\n    this.species = species;\n    this.description = \"\";\n    this.summary = \"\";\n    this.age = 0;\n    this.height = 0;\n    this.weight = 0;\n    this.traits = [];\n    this.physicalTraits = [];\n    this.name = \"\";\n    this.firstName = \"\";\n    this.lastName = \"\";\n    this.status = \"alive\";\n    this.carried = [];\n    this.threatLevel = species.threatLevel;\n  }\n\n  getHonorific(): string {\n    let primaryTitle = this.getPrimaryTitle();\n\n    if (primaryTitle) {\n      return primaryTitle.getHonorific(this.gender.name);\n    }\n\n    return \"\";\n  }\n\n  getPrimaryTitle(): Title | null {\n    let highestPrecedence = 100;\n    let primaryTitle = null;\n\n    for (let i = 0; i < this.titles.length; i++) {\n      if (this.titles[i].precedence < highestPrecedence) {\n        highestPrecedence = this.titles[i].precedence;\n\n        primaryTitle = this.titles[i];\n      }\n    }\n\n    return primaryTitle;\n  }\n\n  getRandomTrait(): string {\n    return RND.item(this.traits);\n  }\n\n  getTitle(): string {\n    let primaryTitle = this.getPrimaryTitle();\n\n    if (primaryTitle) {\n      return primaryTitle.getTitle(this.gender.name);\n    }\n\n    return \"\";\n  }\n}\n","\"use strict\";\n\nimport PersonalityTrait from \"./personalitytrait.js\";\n\nexport function all(): PersonalityTrait[] {\n  return [\n    new PersonalityTrait(\"aggressiveness\", \"passive\", \"belligerent\"),\n    new PersonalityTrait(\"altruism\", \"selfish\", \"selfless\"),\n    new PersonalityTrait(\"bravery\", \"cowardly\", \"brave\"),\n    new PersonalityTrait(\"competitiveness\", \"cooperative\", \"competitive\"),\n    new PersonalityTrait(\"confidence\", \"uncertain\", \"confident\"),\n    new PersonalityTrait(\"creativity\", \"unimaginative\", \"creative\"),\n    new PersonalityTrait(\"eloquence\", \"plain-spoken\", \"eloquent\"),\n    new PersonalityTrait(\"friendliness\", \"aloof\", \"friendly\"),\n    new PersonalityTrait(\"honesty\", \"dishonest\", \"honest\"),\n    new PersonalityTrait(\"industriousness\", \"lazy\", \"hard-working\"),\n    new PersonalityTrait(\"intelligence\", \"stupid\", \"smart\"),\n    new PersonalityTrait(\"kindness\", \"cruel\", \"kind\"),\n    new PersonalityTrait(\"loyalty\", \"disloyal\", \"loyal\"),\n    new PersonalityTrait(\"optimism\", \"pessimistic\", \"optimistic\"),\n    new PersonalityTrait(\"politeness\", \"rude\", \"polite\"),\n    new PersonalityTrait(\"thoughtfulness\", \"unthinking\", \"thoughtful\"),\n    new PersonalityTrait(\"tolerance\", \"intolerant\", \"tolerant\"),\n    new PersonalityTrait(\"wisdom\", \"foolish\", \"wise\"),\n  ];\n}\n","\"use strict\";\n\nimport * as PossibleTraits from \"./alltraits.js\";\nimport PersonalityTrait from \"./personalitytrait.js\";\n\nexport default class PersonalityGeneratorConfig {\n  numberOfPositiveTraits: number;\n  numberOfNegativeTraits: number;\n  traits: PersonalityTrait[];\n\n  constructor() {\n    this.numberOfNegativeTraits = 1;\n    this.numberOfPositiveTraits = 2;\n    this.traits = PossibleTraits.all();\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport PersonalityGeneratorConfig from \"./generatorconfig.js\";\nimport PersonalityTrait from \"./personalitytrait.js\";\n\nimport random from \"random\";\n\nexport default class PersonalityGenerator {\n  config: PersonalityGeneratorConfig;\n\n  constructor(config: PersonalityGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): PersonalityTrait[] {\n    let traits = [];\n\n    RND.shuffle(this.config.traits);\n\n    for (let i = 0; i < this.config.numberOfPositiveTraits; i++) {\n      let trait = this.config.traits.pop();\n      if (trait === undefined) {\n        throw new Error(\"Personality trait is undefined.\");\n      }\n      trait.score = random.int(1, 50);\n      trait.descriptor = trait.positiveDescriptor;\n      traits.push(trait);\n    }\n\n    for (let i = 0; i < this.config.numberOfNegativeTraits; i++) {\n      let trait = this.config.traits.pop();\n      if (trait === undefined) {\n        throw new Error(\"Personality trait is undefined.\");\n      }\n      trait.score = random.int(-50, -1);\n      trait.descriptor = trait.negativeDescriptor;\n      traits.push(trait);\n    }\n\n    return traits;\n  }\n}\n","\"use strict\";\n\nimport type AgeCategory from \"$lib/age/agecategory.js\";\nimport * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport * as Measurements from \"../measurements.js\";\nimport type PhysicalTrait from \"../physicaltraits/physicaltrait.js\";\nimport type Species from \"../species/species.js\";\nimport Character from \"./character.js\";\nimport type CharacterGeneratorConfig from \"./generatorconfig.js\";\nimport PersonalityGenerator from \"./personality/generator.js\";\nimport PersonalityGeneratorConfig from \"./personality/generatorconfig.js\";\nimport type PersonalityTrait from \"./personality/personalitytrait.js\";\n\nexport default class CharacterGenerator {\n  config: CharacterGeneratorConfig;\n\n  constructor(config: CharacterGeneratorConfig) {\n    this.config = config;\n  }\n\n  describe(character: Character): string {\n    let description = \"\";\n\n    const sbj = character.gender.subjectivePronoun;\n    const ucSbj = Words.capitalize(sbj);\n    const genderNoun = character.ageCategory.noun;\n\n    const height = character.height\n      + \" cm (\"\n      + Measurements.inchesToFeetExpression(Measurements.cmToInches(character.height))\n      + \")\";\n    const weight = character.weight + \" kg (\" + Math.round(Measurements.kgToPounds(character.weight)) + \" lb.)\";\n    const spPhrase = character.species.adjective + \" \" + genderNoun;\n    const traits = Words.arrayToPhrase(describeTraits(character));\n\n    description = RND.item([\n      `${character.firstName} ${character.lastName} is a ${height} tall ${spPhrase}. ${ucSbj} is ${character.age} years old. ${character.firstName} has ${traits}. `,\n      `${character.firstName} is ${\n        Words.article(spPhrase)\n      } ${spPhrase} of ${character.age} years. ${ucSbj} is ${height} tall and weighs ${weight}. ${ucSbj} has ${traits}. `,\n    ]);\n\n    description += describePersonality(character) + \".\";\n\n    return description;\n  }\n\n  generate(): Character {\n    const species = RND.weighted(this.config.speciesOptions);\n    const genderName = RND.item(this.config.genderNameOptions);\n\n    let gender;\n\n    for (let i = 0; i < species.genders.length; i++) {\n      if (species.genders[i].name === genderName) {\n        gender = species.genders[i];\n      }\n    }\n\n    let possibleAgeCategories: AgeCategory[] = [];\n\n    for (let i = 0; i < gender.ageCategories.length; i++) {\n      if (this.config.ageCategories.includes(gender.ageCategories[i].name)) {\n        possibleAgeCategories.push(gender.ageCategories[i]);\n      }\n    }\n\n    const ageCategory: AgeCategory = RND.weighted(possibleAgeCategories);\n\n    let familyNameGenerator = this.config.familyNameGenerator;\n    let femaleNameGenerator = this.config.femaleNameGenerator;\n    let maleNameGenerator = this.config.maleNameGenerator;\n\n    if (this.config.useAdaptiveNames) {\n      familyNameGenerator = species.nameGeneratorSet.family;\n      femaleNameGenerator = species.nameGeneratorSet.female;\n      maleNameGenerator = species.nameGeneratorSet.male;\n    }\n\n    let firstNames = [];\n    const lastNames = familyNameGenerator.generate(30);\n\n    if (gender.name === \"female\") {\n      firstNames = femaleNameGenerator.generate(30);\n    } else {\n      firstNames = maleNameGenerator.generate(30);\n    }\n\n    const character = new Character(species);\n\n    character.age = ageCategory.randomAge();\n    character.ageCategory = ageCategory;\n    character.gender = gender;\n    character.height = ageCategory.randomHeight();\n    character.weight = ageCategory.randomWeight();\n\n    character.personalityTraits = getRandomPersonality();\n    character.physicalTraits = getRandomTraits(species);\n\n    if (this.config.physicalTraitOverrides.length > 0) {\n      character.physicalTraits = this.config.physicalTraitOverrides;\n    }\n\n    character.firstName = RND.item(firstNames);\n    character.lastName = RND.item(lastNames);\n    character.name = `${character.firstName} ${character.lastName}`;\n\n    character.description = this.describe(character);\n\n    return character;\n  }\n}\n\nfunction describePersonality(character: Character): string {\n  let traits = [];\n\n  for (let i = 0; i < character.personalityTraits.length; i++) {\n    traits.push(character.personalityTraits[i].descriptor);\n  }\n\n  let description = Words.capitalize(character.gender.subjectivePronoun) + \" is \" + Words.arrayToPhrase(traits);\n\n  return description;\n}\n\nfunction describeTraits(character: Character): string[] {\n  let traits = [];\n\n  for (let i = 0; i < character.physicalTraits.length; i++) {\n    traits.push(character.physicalTraits[i].description);\n  }\n\n  return traits;\n}\n\nfunction getRandomPersonality(): PersonalityTrait[] {\n  const numberOfPositiveTraits = random.int(1, 2);\n  const numberOfNegativeTraits = random.int(0, 1);\n\n  const genConfig = new PersonalityGeneratorConfig();\n  genConfig.numberOfNegativeTraits = numberOfNegativeTraits;\n  genConfig.numberOfPositiveTraits = numberOfPositiveTraits;\n\n  let generator = new PersonalityGenerator(genConfig);\n\n  return generator.generate();\n}\n\nfunction getRandomTraits(species: Species): PhysicalTrait[] {\n  const traits = [];\n\n  for (let i = 0; i < species.physicalTraitGenerators.length; i++) {\n    const newTrait = species.physicalTraitGenerators[i].generate();\n    traits.push(newTrait);\n  }\n\n  return traits;\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Aarakocra implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"aarakocra\";\n    this.abilities = [\"flight\"];\n    this.description = \"\";\n    this.summary = \"\";\n    this.tags = [\"corruptible\", \"aarakocra\", \"flying\", \"martial\", \"magic\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.FantasySet();\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"aarakocras\";\n    this.adjective = \"aarakocra\";\n    this.commonality = 5;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    const wingLengths = [\"short\", \"long\"];\n    const wingTypes = [\"black-tipped\", \"sleek\", \"knife-edged\", \"graceful\", \"full\"];\n    let wingAppearances = [];\n    for (let j = 0; j < wingTypes.length; j++) {\n      for (let i = 0; i < wingLengths.length; i++) {\n        wingAppearances.push(`${wingLengths[i]} and ${wingTypes[j]}`);\n      }\n      wingAppearances.push(wingTypes[j]);\n    }\n\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\"wings\", \"wings\", wingAppearances, [\"wings\"]),\n      new PhysicalTraitGenerator(\n        \"feathers\",\n        \"feathers\",\n        [\"white\", \"mottled\", \"brown\", \"russet\", \"black\", \"grey\", \"red\", \"orange\"],\n        [\"feathers\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"yellow\", \"red\", \"white\", \"silver\", \"gold\", \"blue\", \"green\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        120,\n        AgeCategories.getHumanVariant(1.2, 0.7, 0.95, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        120,\n        AgeCategories.getHumanVariant(1.2, 0.8, 0.95, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Aasimar implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"aasimar\";\n    this.abilities = [\"healing touch\", \"summon light\"];\n    this.tags = [\"aasimar\", \"celestial\", \"human\", \"martial\", \"magic\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.FantasySet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"aasimar\";\n    this.adjective = \"aasimar\";\n    this.commonality = 5;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\", \"white\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\", \"black\", \"brown\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"blue\", \"brown\", \"dark\", \"green\", \"gold\", \"silver\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        160,\n        AgeCategories.getHumanVariant(1.6, 0.9, 0.95, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        160,\n        AgeCategories.getHumanVariant(1.6, 0.9, 0.95, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Bugbear implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"bugbear\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"bugbear\", \"greenskin\", \"martial\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.OrcSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"bugbears\";\n    this.adjective = \"bugbear\";\n    this.commonality = 5;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\", \"goblinoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"brown\", \"dark\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"black\", \"dark green\", \"dark grey\", \"grey\", \"light green\", \"green\", \"grey\", \"olive\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"red\", \"brown\", \"dark\", \"yellow\", \"orange\", \"grey\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 1.05, 1.1, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 1.1, 1.15, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Centaur implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"centaur\";\n    this.abilities = [];\n    this.tags = [\"centaur\", \"human\", \"martial\", \"magic\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.FantasySet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"centaurs\";\n    this.adjective = \"centaur\";\n    this.commonality = 5;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n    ];\n    this.creatureTypes = [\"fey\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n        [\"eyes\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"horse-hide\",\n        \"horse-hide\",\n        [\"black\", \"brown\", \"dark\", \"light\", \"white\"],\n        [\"horse-hide\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"hooves\",\n        \"hooves\",\n        [\"heavy\", \"small\", \"sharp\", \"black\", \"white\", \"hairy\"],\n        [\"hooves\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        185,\n        AgeCategories.getHumanVariant(1.85, 1.45, 1.25, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        185,\n        AgeCategories.getHumanVariant(1.85, 1.5, 1.3, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class DarkElf implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"dark elf\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"dark elf\", \"elf\", \"martial\", \"magic\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.ElfSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"dark elves\";\n    this.adjective = \"dark elven\";\n    this.commonality = 5;\n    this.environments = [\"forest\", \"mountain\", \"underdark\"];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\"hair\", \"hair\", [\"white\", \"light grey\"], [\"hair\"]),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"black\", \"jet black\", \"dark grey\", \"grey\", \"light grey\", \"blue-grey\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"blue\", \"purple\", \"brown\", \"dark\", \"amber\", \"grey\", \"red\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        700,\n        AgeCategories.getHumanVariant(7, 0.6, 0.9, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        700,\n        AgeCategories.getHumanVariant(7, 0.6, 0.95, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class DeepGnome implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"deep gnome\";\n    this.abilities = [\"can see in the dark\"];\n    this.tags = [\"corruptible\", \"deep gnome\", \"gnome\", \"sentient\", \"magic\"];\n    this.nameGeneratorSet = new MUN.GnomeSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"deep gnomes\";\n    this.adjective = \"deep gnomish\";\n    this.commonality = 5;\n    this.environments = [\"underdark\"];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\"hair\", \"hair\", [\"black\", \"dark\", \"light\", \"white\"], [\"hair\"]),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"grey\", \"dark grey\", \"pale\", \"light grey\", \"bone white\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"black\", \"brown\", \"dark\", \"white\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        500,\n        AgeCategories.getHumanVariant(5, 0.4, 0.4, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        500,\n        AgeCategories.getHumanVariant(5, 0.5, 0.5, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Dragonborn implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  description: string;\n  summary: string;\n  adjective: string;\n  commonality: number;\n  environments: string[];\n  carried: Item[];\n  statBlock: StatBlock | null;\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"dragonborn\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"dragonborn\", \"dragonkin\", \"martial\", \"sentient\", \"magic\"];\n    this.nameGeneratorSet = new MUN.DragonbornSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.pluralName = \"dragonborn\";\n    this.adjective = \"dragonborn\";\n    this.carried = [];\n    this.statBlock = null;\n    this.commonality = 10;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"blue\", \"dark\", \"green\", \"orange\", \"red\", \"turquoise\", \"white\", \"yellow\"],\n        [\"eyes\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"scales\",\n        \"skin\",\n        [\n          \"amethyst\",\n          \"black\",\n          \"blue\",\n          \"brass\",\n          \"bronze\",\n          \"copper\",\n          \"crystal\",\n          \"emerald\",\n          \"gold\",\n          \"green\",\n          \"red\",\n          \"sapphire\",\n          \"silver\",\n          \"topaz\",\n          \"white\",\n        ],\n        [\"scales\", \"skin\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 1.5, 1.05, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 1.7, 1.1, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Duergar implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  description: string;\n  summary: string;\n  adjective: string;\n  commonality: number;\n  environments: string[];\n  carried: Item[];\n  statBlock: StatBlock | null;\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"duergar\";\n    this.abilities = [\"can see in the dark\"];\n    this.tags = [\"corruptible\", \"duergar\", \"dwarf\", \"martial\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.DwarfSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"duergar\";\n    this.adjective = \"duergar\";\n    this.commonality = 5;\n    this.environments = [\"underdark\"];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"dark\", \"black\", \"russet\", \"brown\", \"red\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"grey\", \"blue-grey\", \"dark grey\", \"light grey\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\"eyes\", \"eyes\", [\"black\", \"red\", \"dark\", \"amber\"], [\"eyes\"]),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        300,\n        AgeCategories.getHumanVariant(3, 0.9, 0.75, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        300,\n        AgeCategories.getHumanVariant(3, 1, 0.75, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Dwarf implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  description: string;\n  summary: string;\n  adjective: string;\n  commonality: number;\n  environments: string[];\n  carried: Item[];\n  statBlock: StatBlock | null;\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"dwarf\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"dwarf\", \"martial\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.DwarfSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"dwarves\";\n    this.adjective = \"dwarven\";\n    this.commonality = 20;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"dark\", \"black\", \"russet\", \"brown\", \"red\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\"skin\", \"skin\", [\"tan\", \"bronzed\", \"ruddy\"], [\"skin\"]),\n      new PhysicalTraitGenerator(\"eyes\", \"eyes\", [\"green\", \"brown\", \"dark\", \"amber\"], [\"eyes\"]),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        300,\n        AgeCategories.getHumanVariant(3, 0.9, 0.75, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        300,\n        AgeCategories.getHumanVariant(3, 1, 0.75, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Elf implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"elf\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"elf\", \"martial\", \"magic\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.ElfSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"elves\";\n    this.adjective = \"elven\";\n    this.commonality = 30;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"tan\", \"light\", \"bronzed\", \"white\", \"pale\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"blue\", \"green\", \"brown\", \"dark\", \"amber\", \"grey\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        700,\n        AgeCategories.getHumanVariant(7, 0.6, 0.9, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        700,\n        AgeCategories.getHumanVariant(7, 0.6, 0.95, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Firbolg implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"firbolg\";\n    this.abilities = [\"can turn invisible when not attacking\"];\n    this.tags = [\"firbolg\", \"giant\", \"human\", \"martial\", \"magic\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.FantasySet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"firbolgs\";\n    this.adjective = \"firbolg\";\n    this.commonality = 5;\n    this.environments = [\"forest\", \"grassland\", \"hill\", \"mountain\"];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 2;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        500,\n        AgeCategories.getHumanVariant(5.0, 1.75, 1.75, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        500,\n        AgeCategories.getHumanVariant(5.0, 1.9, 1.8, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Gnome implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"gnome\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"gnome\", \"sentient\", \"magic\"];\n    this.nameGeneratorSet = new MUN.GnomeSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"gnomes\";\n    this.adjective = \"gnomish\";\n    this.commonality = 20;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        500,\n        AgeCategories.getHumanVariant(5, 0.4, 0.4, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        500,\n        AgeCategories.getHumanVariant(5, 0.5, 0.4, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Goblin implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"goblin\";\n    this.abilities = [];\n    this.tags = [\"goblin\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.GoblinSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"goblins\";\n    this.adjective = \"goblin\";\n    this.commonality = 20;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"goblinoid\", \"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"green\", \"grey\", \"pale\", \"dark green\", \"brown\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"red\", \"brown\", \"dark\", \"orange\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        150,\n        AgeCategories.getHumanVariant(1.5, 0.5, 0.6, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        150,\n        AgeCategories.getHumanVariant(1.5, 0.5, 0.6, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class HalfElf implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"half-elf\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"half-elf\", \"elf\", \"human\", \"martial\", \"magic\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.HalfElfSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"half-elves\";\n    this.adjective = \"half-elven\";\n    this.commonality = 15;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        185,\n        AgeCategories.getHumanVariant(1.85, 0.9, 0.95, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        185,\n        AgeCategories.getHumanVariant(1.85, 0.9, 0.95, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class HalfOrc implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"half-orc\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"half-orc\", \"orc\", \"human\", \"greenskin\", \"martial\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.HalfOrcSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"half-orcs\";\n    this.adjective = \"half-orc\";\n    this.commonality = 10;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"black\", \"bronzed\", \"ebony\", \"green\", \"grey\", \"light\", \"olive\", \"pale\", \"tan\", \"white\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 0.85, 0.9, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 0.9, 0.95, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Halfling implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"halfling\";\n    this.abilities = [];\n    this.tags = [\"halfling\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.HalflingSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"halflings\";\n    this.adjective = \"halfling\";\n    this.commonality = 20;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        150,\n        AgeCategories.getHumanVariant(1.5, 0.5, 0.6, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        150,\n        AgeCategories.getHumanVariant(1.5, 0.5, 0.6, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class HighElf implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"elf\";\n    this.abilities = [];\n    this.tags = [\"high elf\", \"elf\", \"martial\", \"magic\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.ElfSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"high elves\";\n    this.adjective = \"high elven\";\n    this.commonality = 30;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"tan\", \"light\", \"bronzed\", \"white\", \"pale\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"blue\", \"green\", \"brown\", \"dark\", \"amber\", \"grey\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        700,\n        AgeCategories.getHumanVariant(7, 0.6, 0.9, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        700,\n        AgeCategories.getHumanVariant(7, 0.6, 0.95, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Hobgoblin implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"hobgoblin\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"hobgoblin\", \"greenskin\", \"martial\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.OrcSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"hobgoblins\";\n    this.adjective = \"hobgoblin\";\n    this.commonality = 5;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\", \"goblinoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"brown\", \"dark\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"red\", \"dark grey\", \"grey\", \"russet\", \"bronze\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"red\", \"brown\", \"dark\", \"yellow\", \"orange\", \"grey\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 1.05, 1.1, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 1.1, 1.15, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Orc implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"orc\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"orc\", \"greenskin\", \"martial\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.OrcSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"orcs\";\n    this.adjective = \"orc\";\n    this.commonality = 10;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"brown\", \"dark\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"black\", \"dark green\", \"dark grey\", \"grey\", \"light green\", \"green\", \"grey\", \"olive\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"red\", \"brown\", \"dark\", \"yellow\", \"orange\", \"grey\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 1.05, 1.1, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 1.1, 1.15, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Tiefling implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"tiefling\";\n    this.abilities = [];\n    this.tags = [\"corruptible\", \"tiefling\", \"demonic\", \"martial\", \"magic\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.TieflingSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"tieflings\";\n    this.adjective = \"tiefling\";\n    this.commonality = 5;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 1;\n    const hornLengths = [\"short\", \"long\"];\n    const hornTypes = [\"curved\", \"straight\", \"curled\", \"spiraled\"];\n    let hornAppearances = [];\n    for (let j = 0; j < hornTypes.length; j++) {\n      for (let i = 0; i < hornLengths.length; i++) {\n        hornAppearances.push(`${hornLengths[i]} and ${hornTypes[j]}`);\n      }\n      hornAppearances.push(hornTypes[j]);\n    }\n\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\n          \"black\",\n          \"brown\",\n          \"dark\",\n          \"red\",\n          \"russet\",\n          \"blue\",\n          \"dark blue\",\n          \"dark red\",\n          \"dark purple\",\n          \"purple\",\n        ],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\"horns\", \"horns\", hornAppearances, [\"horns\"]),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\n          \"tan\",\n          \"light\",\n          \"bronzed\",\n          \"white\",\n          \"pale\",\n          \"red\",\n          \"purple\",\n          \"blue\",\n          \"ochre\",\n          \"yellow\",\n          \"brown\",\n          \"black\",\n        ],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"black\", \"red\", \"white\", \"silver\", \"gold\", \"blue\", \"green\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        120,\n        AgeCategories.getHumanVariant(1.2, 1.1, 1.0, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        120,\n        AgeCategories.getHumanVariant(1.2, 1.2, 1.0, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as AgeCategories from \"../age/agecategories.js\";\nimport type Item from \"../equipment/item.js\";\nimport Gender from \"../gender.js\";\nimport PhysicalTraitGenerator from \"../physicaltraits/generator.js\";\nimport type StatBlock from \"../statblock.js\";\nimport type Species from \"./species.js\";\n\nexport default class Troll implements Species {\n  name: string;\n  nameGeneratorSet: MUN.GeneratorSet;\n  pluralName: string;\n  adjective: string;\n  description: string;\n  summary: string;\n  commonality: number;\n  carried: Item[];\n  statBlock: StatBlock | null;\n  environments: string[];\n  creatureTypes: string[];\n  physicalTraitGenerators: PhysicalTraitGenerator[];\n  genders: Gender[];\n  abilities: string[];\n  tags: string[];\n  threatLevel: number;\n\n  constructor() {\n    this.name = \"troll\";\n    this.abilities = [\"regenerate slowly unless burned\"];\n    this.tags = [\"corruptible\", \"troll\", \"greenskin\", \"martial\", \"sentient\"];\n    this.nameGeneratorSet = new MUN.TrollSet();\n    this.description = \"\";\n    this.summary = \"\";\n    this.carried = [];\n    this.statBlock = null;\n    this.pluralName = \"trolls\";\n    this.adjective = \"troll\";\n    this.commonality = 10;\n    this.environments = [\n      \"arctic\",\n      \"coastal\",\n      \"desert\",\n      \"forest\",\n      \"grassland\",\n      \"hill\",\n      \"mountain\",\n      \"urban\",\n      \"underdark\",\n    ];\n    this.creatureTypes = [\"humanoid\"];\n    this.threatLevel = 2;\n    this.physicalTraitGenerators = [\n      new PhysicalTraitGenerator(\n        \"hair\",\n        \"hair\",\n        [\"black\", \"brown\", \"dark\", \"red\", \"russet\"],\n        [\"hair\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"skin\",\n        \"skin\",\n        [\"black\", \"dark green\", \"dark grey\", \"grey\", \"light green\", \"green\", \"grey\", \"olive\"],\n        [\"skin\"],\n      ),\n      new PhysicalTraitGenerator(\n        \"eyes\",\n        \"eyes\",\n        [\"amber\", \"red\", \"brown\", \"dark\", \"yellow\", \"orange\", \"grey\"],\n        [\"eyes\"],\n      ),\n    ];\n    this.genders = [\n      new Gender(\n        \"female\",\n        \"she\",\n        \"her\",\n        \"her\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 1.15, 1.2, \"female\"),\n      ),\n      new Gender(\n        \"male\",\n        \"he\",\n        \"him\",\n        \"his\",\n        80,\n        AgeCategories.getHumanVariant(0.8, 1.2, 1.25, \"male\"),\n      ),\n    ];\n  }\n}\n","\"use strict\";\n\nimport Aarakocra from \"./aarakocra.js\";\nimport Aasimar from \"./aasimar.js\";\nimport Bugbear from \"./bugbear.js\";\nimport Centaur from \"./centaur.js\";\nimport DarkElf from \"./darkelf.js\";\nimport DeepGnome from \"./deepgnome.js\";\nimport Dragonborn from \"./dragonborn.js\";\nimport Duergar from \"./duergar.js\";\nimport Dwarf from \"./dwarf.js\";\nimport Elf from \"./elf.js\";\nimport Firbolg from \"./firbolg.js\";\nimport Gnome from \"./gnome.js\";\nimport Goblin from \"./goblin.js\";\nimport HalfElf from \"./half-elf.js\";\nimport HalfOrc from \"./half-orc.js\";\nimport Halfling from \"./halfling.js\";\nimport HighElf from \"./highelf.js\";\nimport Hobgoblin from \"./hobgoblin.js\";\nimport Human from \"./human.js\";\nimport * as Skeleton from \"./modifiers/skeleton.js\";\nimport * as Vampire from \"./modifiers/vampire.js\";\nimport * as Zombie from \"./modifiers/zombie.js\";\nimport Orc from \"./orc.js\";\nimport type Species from \"./species.js\";\nimport Tiefling from \"./tiefling.js\";\nimport Troll from \"./troll.js\";\n\nexport function all(): Species[] {\n  let result: Species[] = [];\n\n  result = result.concat(goblinoids());\n  result = result.concat(fantastical());\n  result = result.concat(pc());\n\n  return result;\n}\n\nexport function goblinoids(): Species[] {\n  let result = [new Bugbear(), new Goblin(), new Hobgoblin(), new Orc(), new Troll()];\n\n  return result;\n}\n\nexport function fantastical(): Species[] {\n  let result = [\n    new Aarakocra(),\n    new Aasimar(),\n    new Centaur(),\n    new DarkElf(),\n    new DeepGnome(),\n    new Duergar(),\n    new Firbolg(),\n    new HighElf(),\n  ];\n\n  return result;\n}\n\nexport function undead(): Species[] {\n  let result = [];\n  let normal = pc();\n\n  for (let i = 0; i < normal.length; i++) {\n    let skeleton = Skeleton.modify(normal[i]);\n    let vampire = Vampire.modify(normal[i]);\n    let zombie = Zombie.modify(normal[i]);\n    result.push(skeleton);\n    result.push(vampire);\n    result.push(zombie);\n  }\n\n  return result;\n}\n\nexport function pc(): Species[] {\n  return [\n    new Dragonborn(),\n    new Dwarf(),\n    new Elf(),\n    new Gnome(),\n    new HalfElf(),\n    new Halfling(),\n    new HalfOrc(),\n    new Human(),\n    new Tiefling(),\n  ];\n}\n","\"use strict\";\n\nimport * as AgeCategories from \"$lib/age/agecategories.js\";\nimport type PhysicalTrait from \"$lib/physicaltraits/physicaltrait.js\";\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport type Species from \"../species/species.js\";\n\nexport default class CharacterGeneratorConfig {\n  ageCategories: string[];\n  familyNameGenerator: MUN.Generator;\n  femaleNameGenerator: MUN.Generator;\n  maleNameGenerator: MUN.Generator;\n  speciesOptions: Species[];\n  physicalTraitOverrides: PhysicalTrait[];\n  useAdaptiveNames: boolean;\n  genderNameOptions: string[];\n\n  constructor() {\n    this.ageCategories = AgeCategories.getCategoryList();\n    let genSet = new MUN.HumanSet();\n    if (genSet.family === null) {\n      throw new Error(\"Family name generator not found\");\n    }\n    if (genSet.female === null) {\n      throw new Error(\"Female name generator not found\");\n    }\n    if (genSet.male === null) {\n      throw new Error(\"Male name generator not found\");\n    }\n    this.familyNameGenerator = genSet.family;\n    this.femaleNameGenerator = genSet.female;\n    this.maleNameGenerator = genSet.male;\n    this.speciesOptions = [];\n\n    this.genderNameOptions = [\"male\", \"female\"];\n    this.useAdaptiveNames = false;\n    this.physicalTraitOverrides = [];\n  }\n}\n"],"names":["FantasySet","GeneratorSet","country","culture","family","female","male","town","gen","GenericNameGenerator","first","second","i","j","firstNameGenerator","firstNames","suffixes","patterns","additions","DragonbornSet","prefixes","GnomeSet","HalfElfSet","HalfOrcSet","TieflingSet","GoblinSet","OrcSet","TrollSet","Gender","name","subj","obj","pos","maxAge","ageCategories","__publicField","PhysicalTrait","description","category","tags","PhysicalTraitGenerator","options","RND.item","Human","MUN.HumanSet","AgeCategories.humanStandardFemale","AgeCategories.humanStandardMale","PersonalityTrait","negativeDescriptor","positiveDescriptor","Character","species","primaryTitle","highestPrecedence","all","PersonalityGeneratorConfig","PossibleTraits.all","PersonalityGenerator","config","traits","RND.shuffle","trait","random","CharacterGenerator","character","sbj","ucSbj","Words.capitalize","genderNoun","height","Measurements.inchesToFeetExpression","Measurements.cmToInches","weight","Measurements.kgToPounds","spPhrase","Words.arrayToPhrase","describeTraits","Words.article","describePersonality","RND.weighted","genderName","gender","possibleAgeCategories","ageCategory","familyNameGenerator","femaleNameGenerator","maleNameGenerator","lastNames","getRandomPersonality","getRandomTraits","numberOfPositiveTraits","numberOfNegativeTraits","genConfig","newTrait","Aarakocra","MUN.FantasySet","wingLengths","wingTypes","wingAppearances","AgeCategories.getHumanVariant","Aasimar","Bugbear","MUN.OrcSet","Centaur","DarkElf","MUN.ElfSet","DeepGnome","MUN.GnomeSet","Dragonborn","MUN.DragonbornSet","Duergar","MUN.DwarfSet","Dwarf","Elf","Firbolg","Gnome","Goblin","MUN.GoblinSet","HalfElf","MUN.HalfElfSet","HalfOrc","MUN.HalfOrcSet","Halfling","MUN.HalflingSet","HighElf","Hobgoblin","Orc","Tiefling","MUN.TieflingSet","hornLengths","hornTypes","hornAppearances","Troll","MUN.TrollSet","result","goblinoids","fantastical","pc","CharacterGeneratorConfig","AgeCategories.getCategoryList","genSet"],"mappings":"iiBAGe,MAAMA,UAAmBC,CAAa,CACjD,aAAc,CACV,QACA,KAAK,KAAO,UACZ,KAAK,QAAUC,IACf,KAAK,QAAUC,IACf,KAAK,OAASC,IACd,KAAK,OAASC,IACd,KAAK,KAAOC,IACZ,KAAK,KAAOC,GACf,CACL,CACA,SAASJ,GAAU,CACf,IAAIK,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,WAAY,UAAW,UAAW,SAAS,EACpDA,CACX,CACA,SAASN,GAAU,CACf,IAAIM,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,UAAW,UAAW,UAAW,QAAS,QAAS,WAAY,QAAQ,EAChFA,CACX,CACA,SAASJ,GAAS,CACd,IAAII,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,UACA,UACA,UACA,QACA,SACA,QACA,WACA,cACA,oBACA,UACA,UACA,UACA,YACA,UACA,SACA,UACA,UACA,SACR,EACWA,CACX,CACA,SAASH,GAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,QAAS,MAAO,SAAU,QAAS,QAAS,UAAW,SAAU,SAAS,EACnFA,CACX,CACA,SAASF,GAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,MACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,QACR,EACWA,CACX,CACA,SAASD,GAAO,CACZ,IAAIC,EAAM,IAAIC,EACd,MAAMC,EAAQ,CACV,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,OACA,SACA,QACA,QACA,OACA,OACA,QACA,SACA,MACA,QACR,EACUC,EAAS,CACX,UACA,SACA,QACA,QACA,UACA,YACA,QACA,SACA,SACA,QACA,UACA,SACA,QACA,UACA,QACR,EACI,QAASC,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAC9B,QAASC,EAAI,EAAGA,EAAIF,EAAO,OAAQE,IAC/BL,EAAI,SAAS,KAAKE,EAAME,CAAC,EAAE,cAAgB,IAAMD,EAAOE,CAAC,EAAE,YAAa,CAAA,EAGhF,IAAIC,EAAqBR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IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,UAAW,QAAS,QAAS,OAAQ,SAAU,SAAU,SAAU,OAAO,EACnFA,CACX,CChFe,MAAMc,WAAmBrB,CAAa,CACjD,aAAc,CACV,QACA,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,IAAIC,EACdD,EAAI,SAAW,CACX,UACA,UACA,UACA,QACA,SACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,UACA,UACA,UACA,UACA,SACR,EACI,IAAIY,EAAW,CACX,QACA,QACA,OACA,OACA,SACA,SACA,OACA,QACA,OACA,OACA,MACA,OACR,EACQJ,EAAW,CACX,SACA,SACA,OACA,SACA,QACA,UACA,OACA,UACA,QACA,OACA,OACR,EACI,QAASJ,EAAI,EAAGA,EAAIQ,EAAS,OAAQR,IACjC,QAASC,EAAI,EAAGA,EAAIG,EAAS,OAAQH,IACjCL,EAAI,SAAS,KAAKY,EAASR,CAAC,EAAII,EAASH,CAAC,CAAC,EAGnD,OAAOL,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,QAAS,MAAO,SAAU,QAAS,QAAS,UAAW,SAAU,SAAS,EACnFA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,SACA,SACA,SACA,UACA,UACA,QACA,SACA,SACA,SACA,QACR,EACWA,CACX,CCpFe,MAAMe,WAAmBtB,CAAa,CACjD,aAAc,CACV,QACA,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,IAAIC,EACdD,EAAI,SAAW,CACX,UACA,UACA,UACA,QACA,SACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,UACA,UACA,UACA,UACA,SACR,EACI,MAAMY,EAAW,CACb,QACA,OACA,OACA,QACA,SACA,QACA,QACA,QACA,MACA,SACA,OACA,MACR,EACUJ,EAAW,CAAC,OAAQ,QAAS,OAAQ,QAAS,MAAO,UAAW,SAAU,QAAQ,EACxF,QAASJ,EAAI,EAAGA,EAAIQ,EAAS,OAAQR,IACjC,QAASC,EAAI,EAAGA,EAAIG,EAAS,OAAQH,IACjCL,EAAI,SAAS,KAAKY,EAASR,CAAC,EAAII,EAASH,CAAC,CAAC,EAGnD,OAAOL,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,QACA,MACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,QACR,EACWA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,SACA,SACA,SACA,UACA,WACA,QACA,SACA,SACA,SACA,SACA,MACA,QACA,SACA,SACA,SACA,OACA,OACA,UACA,QACR,EACWA,CACX,CC5Fe,MAAMgB,WAAoBvB,CAAa,CAClD,aAAc,CACV,QACA,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,UACA,UACA,UACA,QACA,SACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,UACA,UACA,UACA,UACA,SACR,EACWA,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,QAAS,MAAO,SAAU,QAAS,QAAS,UAAW,SAAU,SAAS,EACnFA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,SACA,SACA,SACA,UACA,UACA,QACA,SACA,SACA,SACA,QACR,EACWA,CACX,CCpDe,MAAMiB,WAAkBxB,CAAa,CAChD,aAAc,CACV,QACA,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,IAAIC,EACdD,EAAI,SAAW,CAAC,SAAU,OAAO,EACjC,MAAMY,EAAW,CACb,MACA,QACA,UACA,OACA,SACA,QACA,MACA,OACA,OACA,MACA,MACA,UACA,SACA,QACA,OACA,QACA,QACR,EACUJ,EAAW,CACb,QACA,SACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,MACR,EACI,QAASJ,EAAI,EAAGA,EAAIQ,EAAS,OAAQR,IACjC,QAASC,EAAI,EAAGA,EAAIG,EAAS,OAAQH,IACjCL,EAAI,SAAS,KAAKY,EAASR,CAAC,EAAII,EAASH,CAAC,CAAC,EAGnD,OAAOL,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,QAAS,QAAS,UAAW,UAAW,UAAW,YAAa,QAAQ,EACjFA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,SAAU,YAAa,UAAW,WAAY,UAAW,QAAS,UAAU,EACrFA,CACX,CC3De,MAAMkB,UAAezB,CAAa,CAC7C,aAAc,CACV,QACA,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,IAAIC,EACdD,EAAI,SAAW,CACX,UACA,UACA,UACA,QACA,SACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,UACA,UACA,UACA,UACA,SACR,EACI,MAAMY,EAAW,CACb,QACA,OACA,OACA,QACA,SACA,QACA,QACA,QACA,MACA,SACA,OACA,MACR,EACUJ,EAAW,CAAC,OAAQ,QAAS,OAAQ,QAAS,MAAO,UAAW,SAAU,QAAQ,EACxF,QAASJ,EAAI,EAAGA,EAAIQ,EAAS,OAAQR,IACjC,QAASC,EAAI,EAAGA,EAAIG,EAAS,OAAQH,IACjCL,EAAI,SAAS,KAAKY,EAASR,CAAC,EAAII,EAASH,CAAC,CAAC,EAGnD,OAAOL,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,QACA,MACA,SACA,QACA,QACA,UACA,SACA,SACA,SACA,QACR,EACWA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,SACA,SACA,SACA,UACA,UACA,QACA,SACA,SACA,SACA,SACA,MACA,QACA,SACA,SACA,SACA,OACA,OACA,UACA,QACR,EACWA,CACX,CC5Fe,MAAMmB,WAAiB1B,CAAa,CAC/C,aAAc,CACV,QACA,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,IAAIC,EACdD,EAAI,SAAW,CACX,UACA,UACA,UACA,QACA,SACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,UACA,UACA,UACA,UACA,SACR,EACI,MAAMY,EAAW,CACb,QACA,OACA,OACA,QACA,SACA,QACA,QACA,QACA,MACA,SACA,OACA,MACR,EACUJ,EAAW,CAAC,OAAQ,QAAS,OAAQ,QAAS,MAAO,UAAW,SAAU,QAAQ,EACxF,QAASJ,EAAI,EAAGA,EAAIQ,EAAS,OAAQR,IACjC,QAASC,EAAI,EAAGA,EAAIG,EAAS,OAAQH,IACjCL,EAAI,SAAS,KAAKY,EAASR,CAAC,EAAII,EAASH,CAAC,CAAC,EAGnD,OAAOL,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,QACA,MACA,UACA,QACA,QACA,UACA,SACA,SACA,SACA,QACR,EACWA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,SACA,SACA,SACA,UACA,UACA,QACA,SACA,SACA,SACA,SACA,MACA,QACA,SACA,SACA,SACA,OACA,OACA,UACA,QACR,EACWA,CACX,CC3FA,MAAAoB,CAAA,CAME,YAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,CAN0BC,EAAA,aAC1BA,EAAA,0BACAA,EAAA,yBACAA,EAAA,0BACAA,EAAA,eACAA,EAAA,sBAWE,KAAA,KAAAN,EACA,KAAA,kBAAAC,EACA,KAAA,iBAAAC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"}