{"version":3,"file":"8.1feca748.js","sources":["../../../../../../src/lib/adnd/adndarmor.ts","../../../../../../src/lib/adnd/spellfilter.ts","../../../../../../src/lib/adnd/adndclass.ts","../../../../../../src/lib/adnd/adndrace.ts","../../../../../../src/lib/adnd/adndspell.ts","../../../../../../src/lib/adnd/adndweapon.ts","../../../../../../src/lib/adnd/adndcharacter.ts","../../../../../../src/lib/adnd/spells.ts","../../../../../../src/lib/adnd/classes/abjurer.ts","../../../../../../src/lib/adnd/adndthiefskills.ts","../../../../../../src/lib/adnd/classes/bard.ts","../../../../../../src/lib/adnd/classes/cleric.ts","../../../../../../src/lib/adnd/classes/conjurer.ts","../../../../../../src/lib/adnd/classes/diviner.ts","../../../../../../src/lib/adnd/classes/druid.ts","../../../../../../src/lib/adnd/classes/enchanter.ts","../../../../../../src/lib/adnd/classes/fighter.ts","../../../../../../src/lib/adnd/classes/illusionist.ts","../../../../../../src/lib/adnd/classes/invoker.ts","../../../../../../src/lib/adnd/classes/mage.ts","../../../../../../src/lib/adnd/classes/necromancer.ts","../../../../../../src/lib/adnd/classes/paladin.ts","../../../../../../src/lib/adnd/classes/ranger.ts","../../../../../../src/lib/adnd/classes/thief.ts","../../../../../../src/lib/adnd/classes/transmuter.ts","../../../../../../src/lib/adnd/classes/classes.ts","../../../../../../src/lib/adnd/races/dwarf.ts","../../../../../../src/lib/adnd/races/elf.ts","../../../../../../src/lib/adnd/races/gnome.ts","../../../../../../src/lib/adnd/races/halfelf.ts","../../../../../../src/lib/adnd/races/halfling.ts","../../../../../../src/lib/adnd/races/human.ts","../../../../../../src/lib/adnd/races/races.ts","../../../../../../src/lib/adnd/adndcharactergeneratorconfig.ts","../../../../../../src/lib/adnd/equipment.ts","../../../../../../src/lib/adnd/adndcharactergenerator.ts","../../../../../../src/routes/fantasy/adnd/character/+page.svelte"],"sourcesContent":["\"use strict\";\n\nexport default class ADNDArmor {\n  name: string;\n  ac: number;\n  weight: number;\n  cost: number;\n\n  constructor(name: string, ac: number, weight: number, cost: number) {\n    this.name = name;\n    this.ac = ac;\n    this.weight = weight;\n    this.cost = cost;\n  }\n}\n","\"use strict\";\n\nexport default class SpellFilter {\n  name: string;\n  level: number;\n  casterClass: string;\n  requiredTags: string[];\n  bannedTags: string[];\n\n  constructor(\n    name: string = \"\",\n    level: number = -1,\n    casterClass: string = \"\",\n    requiredTags: string[] = [],\n    bannedTags: string[] = [],\n  ) {\n    this.name = name;\n    this.level = level;\n    this.casterClass = casterClass;\n    this.requiredTags = requiredTags;\n    this.bannedTags = bannedTags;\n  }\n}\n","\"use strict\";\n\nimport SpellFilter from \"./spellfilter.js\";\n\nexport default class ADNDClass {\n  name: string;\n  group: string;\n  hitDice: string; // dice expression\n  minStrength: number;\n  minDexterity: number;\n  minConstitution: number;\n  minIntelligence: number;\n  minWisdom: number;\n  minCharisma: number;\n  abilities: string[];\n  primeRequisites: string[];\n  allowedAlignments: string[];\n  hasSpells: boolean;\n  allowedSpellTypes: string[];\n  spellList: { filter: SpellFilter; count: number }[];\n  allowedWeapons: string[];\n  allowedArmor: string[];\n  initialWP: number;\n  initialNWP: number;\n  wpPenalty: number;\n  apply: Function;\n\n  constructor(\n    name: string,\n    group: string,\n    hitDice: string,\n    minStrength: number,\n    minDexterity: number,\n    minConstitution: number,\n    minIntelligence: number,\n    minWisdom: number,\n    minCharisma: number,\n    primeRequisites: string[],\n    abilities: string[],\n    allowedAlignments: string[],\n    hasSpells: boolean,\n    allowedSpellTypes: string[],\n    spellList: { filter: SpellFilter; count: number }[],\n    allowedWeapons: string[] = [],\n    allowedArmor: string[] = [],\n    initialWP: number,\n    initialNWP: number,\n    wpPenalty: number,\n    apply: Function,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.hitDice = hitDice;\n    this.minStrength = minStrength;\n    this.minDexterity = minDexterity;\n    this.minConstitution = minConstitution;\n    this.minIntelligence = minIntelligence;\n    this.minWisdom = minWisdom;\n    this.minCharisma = minCharisma;\n    this.abilities = abilities;\n    this.primeRequisites = primeRequisites;\n    this.allowedAlignments = allowedAlignments;\n    this.hasSpells = hasSpells;\n    this.allowedSpellTypes = allowedSpellTypes;\n    this.spellList = spellList;\n    this.allowedWeapons = allowedWeapons;\n    this.allowedArmor = allowedArmor;\n    this.initialWP = initialWP;\n    this.initialNWP = initialNWP;\n    this.wpPenalty = wpPenalty;\n    this.apply = apply;\n  }\n}\n","\"use strict\";\n\nexport default class ADNDRace {\n  name: string;\n  adjective: string;\n  apply: Function;\n  minStrength: number;\n  maxStrength: number;\n  minDexterity: number;\n  maxDexterity: number;\n  minConstitution: number;\n  maxConstitution: number;\n  minIntelligence: number;\n  maxIntelligence: number;\n  minWisdom: number;\n  maxWisdom: number;\n  minCharisma: number;\n  maxCharisma: number;\n  baseHeightMale: number;\n  baseHeightFemale: number;\n  baseWeightMale: number;\n  baseWeightFemale: number;\n  heightModifier: string; // dice expression\n  weightModifier: string; // dice expression\n  baseAge: number;\n  baseMovement: number;\n  ageModifier: string; // dice expression\n  availableInitialLanguages: string[];\n  allowedClasses: string[];\n\n  constructor(\n    name: string,\n    adjective: string,\n    apply: Function,\n    minStrength: number,\n    maxStrength: number,\n    minDexterity: number,\n    maxDexterity: number,\n    minConstitution: number,\n    maxConstitution: number,\n    minIntelligence: number,\n    maxIntelligence: number,\n    minWisdom: number,\n    maxWisdom: number,\n    minCharisma: number,\n    maxCharisma: number,\n    baseHeightMale: number,\n    baseHeightFemale: number,\n    baseWeightMale: number,\n    baseWeightFemale: number,\n    heightModifier: string,\n    weightModifier: string,\n    baseAge: number,\n    baseMovement: number,\n    ageModifier: string,\n    availableInitialLanguages: string[],\n    allowedClasses: string[],\n  ) {\n    this.name = name;\n    this.adjective = adjective;\n    this.apply = apply;\n    this.minCharisma = minCharisma;\n    this.maxCharisma = maxCharisma;\n    this.minConstitution = minConstitution;\n    this.maxConstitution = maxConstitution;\n    this.minDexterity = minDexterity;\n    this.maxDexterity = maxDexterity;\n    this.minIntelligence = minIntelligence;\n    this.maxIntelligence = maxIntelligence;\n    this.minStrength = minStrength;\n    this.maxStrength = maxStrength;\n    this.minWisdom = minWisdom;\n    this.maxWisdom = maxWisdom;\n    this.heightModifier = heightModifier;\n    this.baseHeightMale = baseHeightMale;\n    this.baseHeightFemale = baseHeightFemale;\n    this.baseWeightMale = baseWeightMale;\n    this.baseWeightFemale = baseWeightFemale;\n    this.heightModifier = heightModifier;\n    this.weightModifier = weightModifier;\n    this.baseAge = baseAge;\n    this.baseMovement = baseMovement;\n    this.ageModifier = ageModifier;\n    this.name = name;\n    this.availableInitialLanguages = availableInitialLanguages;\n    this.allowedClasses = allowedClasses;\n  }\n}\n","\"use strict\";\n\nexport default class ADNDSpell {\n  name: string;\n  casterClass: string;\n  level: number;\n  tags: string[];\n\n  constructor(name: string, casterClass: string, level: number, tags: string[]) {\n    this.name = name;\n    this.casterClass = casterClass;\n    this.level = level;\n    this.tags = tags;\n  }\n}\n","\"use strict\";\n\nexport default class ADNDWeapon {\n  name: string;\n  damageType: string; // bludgeoning, piercing, slashing\n  damageSM: string; // dice expression\n  damageL: string; // dice expression\n  cost: number; // in copper pieces\n  weight: number; // in pounds\n  size: string; // small, medium, large\n  speedFactor: number;\n  category: string;\n  usesAmmo: boolean;\n\n  constructor(\n    name: string,\n    cost: number,\n    weight: number,\n    size: string,\n    damageType: string,\n    speedFactor: number,\n    damageSM: string,\n    damageL: string,\n    category: string,\n    usesAmmo: boolean = false,\n  ) {\n    this.name = name;\n    this.damageType = damageType;\n    this.damageSM = damageSM;\n    this.damageL = damageL;\n    this.cost = cost;\n    this.weight = weight;\n    this.size = size;\n    this.speedFactor = speedFactor;\n    this.category = category;\n    this.usesAmmo = usesAmmo;\n  }\n}\n","\"use strict\";\n\nimport ADNDArmor from \"./adndarmor.js\";\nimport ADNDClass from \"./adndclass.js\";\nimport ADNDRace from \"./adndrace.js\";\nimport ADNDSpell from \"./adndspell.js\";\nimport ADNDWeapon from \"./adndweapon.js\";\n\nexport default class ADNDCharacter {\n  firstName: string;\n  lastName: string;\n  race: ADNDRace;\n  class: ADNDClass;\n  level: number;\n  strength: number;\n  exceptionalStrength: number;\n  dexterity: number;\n  constitution: number;\n  intelligence: number;\n  wisdom: number;\n  charisma: number;\n  age: number;\n  height: number;\n  weight: number;\n  xp: number;\n  hp: number;\n  thaco: number;\n  ac: number;\n  currency: number; // in copper pieces\n  hitProbability: string;\n  damageAdjustment: string;\n  weightAllowance: number;\n  maxPress: number;\n  openDoors: string;\n  bendBarsLiftGates: number;\n  reactionAdjustment: number;\n  missileAttackAdjustment: number;\n  defensiveAdjustment: number;\n  hitPointAdjustment: number;\n  warriorHitPointAdjustment: number;\n  systemShock: number;\n  resurrectionSurvival: number;\n  poisonSave: number;\n  regeneration: string;\n  numberOfLanguages: number;\n  spellLevel: number;\n  chanceToLearnSpell: number;\n  maximumNumberOfSpellsPerLevel: number;\n  illusionImmunity: number;\n  magicalDefenseAdjustment: number;\n  bonusSpells: number[];\n  chanceOfSpellFailure: number;\n  spellImmunity: string[];\n  maximumNumberOfHenchmen: number;\n  loyaltyBase: number;\n  npcReactionAdjustment: number;\n  abilities: string[];\n  alignment: string;\n  poisonSavingThrow: number;\n  rodSavingThrow: number;\n  petrificationSavingThrow: number;\n  breathSavingThrow: number;\n  spellSavingThrow: number;\n  spells: ADNDSpell[];\n  armor: ADNDArmor[];\n  weapons: ADNDWeapon[];\n\n  constructor() {\n    this.firstName = \"\";\n    this.lastName = \"\";\n    this.level = 1;\n    this.xp = 0;\n    this.ac = 10;\n    this.currency = 0;\n    this.exceptionalStrength = -1;\n    this.hitProbability = \"normal\";\n    this.damageAdjustment = \"none\";\n    this.regeneration = \"nil\";\n    this.chanceToLearnSpell = -1;\n    this.bonusSpells = [];\n    this.spellImmunity = [];\n    this.abilities = [];\n    this.spells = [];\n    this.armor = [];\n    this.weapons = [];\n  }\n}\n","\"use strict\";\n\nimport ADNDSpell from \"./adndspell.js\";\nimport SpellFilter from \"./spellfilter.js\";\n\nexport function getFilteredSpells(filter: SpellFilter, spells: ADNDSpell[]): ADNDSpell[] {\n  let result = [];\n\n  for (let i = 0; i < spells.length; i++) {\n    let meetsLevelCriterion = false;\n    let meetsClassCriterion = false;\n    let meetsBannedTagsCriterion = false;\n    let meetsRequiredTagsCriterion = false;\n    if ((filter.level != -1 && spells[i].level == filter.level) || filter.level == -1) {\n      meetsLevelCriterion = true;\n    }\n    if (filter.casterClass == spells[i].casterClass) {\n      meetsClassCriterion = true;\n    }\n    if (filter.bannedTags.length > 0) {\n      let countOfBannedTags = 0;\n      for (let j = 0; j < filter.bannedTags.length; j++) {\n        if (spells[i].tags.indexOf(filter.bannedTags[j]) != -1) {\n          countOfBannedTags++;\n        }\n      }\n      if (countOfBannedTags == 0) {\n        meetsBannedTagsCriterion = true;\n      }\n    } else {\n      meetsBannedTagsCriterion = true;\n    }\n    if (filter.requiredTags.length > 0) {\n      for (let j = 0; j < filter.requiredTags.length; j++) {\n        if (spells[i].tags.indexOf(filter.requiredTags[j]) != -1) {\n          meetsRequiredTagsCriterion = true;\n        }\n      }\n    } else {\n      meetsRequiredTagsCriterion = true;\n    }\n    if (\n      meetsLevelCriterion\n      && meetsClassCriterion\n      && meetsBannedTagsCriterion\n      && meetsRequiredTagsCriterion\n    ) {\n      result.push(spells[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function getAll(): ADNDSpell[] {\n  return [\n    new ADNDSpell(\"Animal Friendship\", \"priest\", 1, [\"animal\", \"enchantment\", \"charm\"]),\n    new ADNDSpell(\"Bless\", \"priest\", 1, [\"conjuration\", \"summoning\", \"all\"]),\n    new ADNDSpell(\"Combine\", \"priest\", 1, [\"evocation\", \"all\"]),\n    new ADNDSpell(\"Command\", \"priest\", 1, [\"enchantment\", \"charm\"]),\n    new ADNDSpell(\"Create Water\", \"priest\", 1, [\"alteration\", \"elemental\", \"water\"]),\n    new ADNDSpell(\"Cure Light Wounds\", \"priest\", 1, [\"necromancy\", \"healing\"]),\n    new ADNDSpell(\"Detect Evil\", \"priest\", 1, [\"divination\", \"all\"]),\n    new ADNDSpell(\"Detect Magic\", \"priest\", 1, [\"divination\"]),\n    new ADNDSpell(\"Detect Poison\", \"priest\", 1, [\"divination\"]),\n    new ADNDSpell(\"Detect Snares and Pits\", \"priest\", 1, [\"divination\"]),\n    new ADNDSpell(\"Endure Cold/Endure Heat\", \"priest\", 1, [\"alteration\", \"protection\"]),\n    new ADNDSpell(\"Entangle\", \"priest\", 1, [\"alteration\", \"plant\"]),\n    new ADNDSpell(\"Faerie Fire\", \"priest\", 1, [\"alteration\", \"weather\"]),\n    new ADNDSpell(\"Invisibility to Animals\", \"priest\", 1, [\"alteration\", \"animal\"]),\n    new ADNDSpell(\"Invisibility to Undead\", \"priest\", 1, [\"abjuration\", \"necromantic\"]),\n    new ADNDSpell(\"Light\", \"priest\", 1, [\"alteration\", \"sun\"]),\n    new ADNDSpell(\"Locate Animals or Plants\", \"priest\", 1, [\"divination\", \"animal\", \"plant\"]),\n    new ADNDSpell(\"Magical Stone\", \"priest\", 1, [\"enchantment\", \"combat\"]),\n    new ADNDSpell(\"Pass without Trace\", \"priest\", 1, [\"enchantment\", \"charm\", \"plant\"]),\n    new ADNDSpell(\"Protection from Evil\", \"priest\", 1, [\"abjuration\", \"protection\"]),\n    new ADNDSpell(\"Purify Food and Drink\", \"priest\", 1, [\"alteration\", \"all\"]),\n    new ADNDSpell(\"Remove Fear\", \"priest\", 1, [\"abjuration\", \"charm\"]),\n    new ADNDSpell(\"Sanctuary\", \"priest\", 1, [\"abjuration\", \"protection\"]),\n    new ADNDSpell(\"Shillelagh\", \"priest\", 1, [\"alteration\", \"combat\", \"plant\"]),\n    new ADNDSpell(\"Affect Normal Fires\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Alarm\", \"wizard\", 1, [\"abjuration\", \"evocation\"]),\n    new ADNDSpell(\"Armor\", \"wizard\", 1, [\"conjuration\"]),\n    new ADNDSpell(\"Audible Glamer\", \"wizard\", 1, [\"illusion\", \"phantasm\"]),\n    new ADNDSpell(\"Burning Hands\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Cantrip\", \"wizard\", 1, [\"all\"]),\n    new ADNDSpell(\"Change Self\", \"wizard\", 1, [\"illusion\", \"phantasm\"]),\n    new ADNDSpell(\"Charm Person\", \"wizard\", 1, [\"enchantment\", \"charm\"]),\n    new ADNDSpell(\"Chill Touch\", \"wizard\", 1, [\"necromancy\"]),\n    new ADNDSpell(\"Color Spray\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Comprehend Languages\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Dancing Lights\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Detect Magic\", \"wizard\", 1, [\"divination\"]),\n    new ADNDSpell(\"Detect Undead\", \"wizard\", 1, [\"divination\", \"necromancy\"]),\n    new ADNDSpell(\"Enlarge\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Erase\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Feather Fall\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Find Familiar\", \"wizard\", 1, [\"conjuration\", \"summoning\"]),\n    new ADNDSpell(\"Friends\", \"wizard\", 1, [\"enchantment\", \"charm\"]),\n    new ADNDSpell(\"Gaze Reflection\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Grease\", \"wizard\", 1, [\"conjuration\"]),\n    new ADNDSpell(\"Hold Portal\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Hypnotism\", \"wizard\", 1, [\"enchantment\", \"charm\"]),\n    new ADNDSpell(\"Identify\", \"wizard\", 1, [\"divination\"]),\n    new ADNDSpell(\"Jump\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Light\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Magic Missile\", \"wizard\", 1, [\"evocation\"]),\n    new ADNDSpell(\"Mending\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Message\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Mount\", \"wizard\", 1, [\"conjuration\", \"summoning\"]),\n    new ADNDSpell(\"Nystul's Magic Aura\", \"wizard\", 1, [\"illusion\", \"phantasm\"]),\n    new ADNDSpell(\"Phantasmal Force\", \"wizard\", 1, [\"illusion\", \"phantasm\"]),\n    new ADNDSpell(\"Protection from Evil\", \"wizard\", 1, [\"abjuration\"]),\n    new ADNDSpell(\"Read Magic\", \"wizard\", 1, [\"divination\"]),\n    new ADNDSpell(\"Shield\", \"wizard\", 1, [\"evocation\"]),\n    new ADNDSpell(\"Shocking Grasp\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Sleep\", \"wizard\", 1, [\"enchantment\", \"charm\"]),\n    new ADNDSpell(\"Spider Climb\", \"wizard\", 1, [\"alteration\"]),\n    new ADNDSpell(\"Spook\", \"wizard\", 1, [\"illusion\", \"phantasm\"]),\n    new ADNDSpell(\"Taunt\", \"wizard\", 1, [\"enchantment\"]),\n    new ADNDSpell(\"Tenser's Floating Disk\", \"wizard\", 1, [\"evocation\"]),\n    new ADNDSpell(\"Unseen Servant\", \"wizard\", 1, [\"conjuration\"]),\n    new ADNDSpell(\"Ventriloquism\", \"wizard\", 1, [\"illusion\", \"phantasm\"]),\n    new ADNDSpell(\"Wall of Fog\", \"wizard\", 1, [\"evocation\"]),\n    new ADNDSpell(\"Wizard Mark\", \"wizard\", 1, [\"alteration\"]),\n  ];\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"abjurer\",\n  \"wizard\",\n  \"1d4\",\n  -1,\n  -1,\n  -1,\n  9,\n  15,\n  -1,\n  [\"intelligence\"],\n  [\"Create magical items\", \"Cast wizard spells\"],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"wizard\"],\n  [\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [\"abjuration\"], []),\n      count: 1,\n    },\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [], [\"alteration\", \"illusion\"]),\n      count: 1,\n    },\n  ],\n  [\"dagger\", \"staff\", \"dart\", \"knife\", \"sling\"],\n  [\"none\"],\n  1,\n  4,\n  -5,\n  function(character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        character.spells.push(filteredSpells.pop());\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport random from \"random\";\n\nexport function distributePoints(skillList, extraPoints: number) {\n  while (extraPoints > 0) {\n    let skillIndex = random.int(0, skillList.length - 1);\n    let skill = skillList[skillIndex];\n    if (skill.points < 30) {\n      let cap = 30 - skill.points > 30 ? 30 : 30 - skill.points;\n      let points = random.int(1, cap);\n      skill.points += points;\n      extraPoints -= points;\n    }\n  }\n\n  return skillList;\n}\n\nexport function modifyForDexterity(skillList, dexterity: number) {\n  let dexterityAdjustments = {\n    9: {\n      \"Pick Pockets\": -15,\n      \"Open Locks\": -10,\n      \"Find/Remove Traps\": -10,\n      \"Move Silently\": -20,\n      \"Hide in Shadows\": -10,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    10: {\n      \"Pick Pockets\": -10,\n      \"Open Locks\": -5,\n      \"Find/Remove Traps\": -10,\n      \"Move Silently\": -15,\n      \"Hide in Shadows\": -5,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    11: {\n      \"Pick Pockets\": -5,\n      \"Open Locks\": 0,\n      \"Find/Remove Traps\": -5,\n      \"Move Silently\": -10,\n      \"Hide in Shadows\": 0,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    12: {\n      \"Pick Pockets\": 0,\n      \"Open Locks\": 0,\n      \"Find/Remove Traps\": 0,\n      \"Move Silently\": -5,\n      \"Hide in Shadows\": 0,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    13: {\n      \"Pick Pockets\": 0,\n      \"Open Locks\": 0,\n      \"Find/Remove Traps\": 0,\n      \"Move Silently\": 0,\n      \"Hide in Shadows\": 0,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    14: {\n      \"Pick Pockets\": 0,\n      \"Open Locks\": 0,\n      \"Find/Remove Traps\": 0,\n      \"Move Silently\": 0,\n      \"Hide in Shadows\": 0,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    15: {\n      \"Pick Pockets\": 0,\n      \"Open Locks\": 0,\n      \"Find/Remove Traps\": 0,\n      \"Move Silently\": 0,\n      \"Hide in Shadows\": 0,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    16: {\n      \"Pick Pockets\": 0,\n      \"Open Locks\": 5,\n      \"Find/Remove Traps\": 0,\n      \"Move Silently\": 0,\n      \"Hide in Shadows\": 0,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    17: {\n      \"Pick Pockets\": 5,\n      \"Open Locks\": 10,\n      \"Find/Remove Traps\": 0,\n      \"Move Silently\": 5,\n      \"Hide in Shadows\": 5,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    18: {\n      \"Pick Pockets\": 10,\n      \"Open Locks\": 15,\n      \"Find/Remove Traps\": 5,\n      \"Move Silently\": 10,\n      \"Hide in Shadows\": 10,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    19: {\n      \"Pick Pockets\": 15,\n      \"Open Locks\": 20,\n      \"Find/Remove Traps\": 10,\n      \"Move Silently\": 15,\n      \"Hide in Shadows\": 15,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n  };\n\n  for (let i = 0; i < skillList.length; i++) {\n    skillList[i].value += dexterityAdjustments[dexterity][skillList[i].name];\n  }\n\n  return skillList;\n}\n\nexport function modifyForRace(skillList, raceName: string) {\n  let racialAdjustments = {\n    dwarf: {\n      \"Pick Pockets\": 0,\n      \"Open Locks\": 10,\n      \"Find/Remove Traps\": 15,\n      \"Move Silently\": 0,\n      \"Hide in Shadows\": 0,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": -10,\n      \"Read Languages\": -5,\n    },\n    elf: {\n      \"Pick Pockets\": 5,\n      \"Open Locks\": -5,\n      \"Find/Remove Traps\": 0,\n      \"Move Silently\": 5,\n      \"Hide in Shadows\": 10,\n      \"Detect Noise\": 5,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    gnome: {\n      \"Pick Pockets\": 0,\n      \"Open Locks\": 5,\n      \"Find/Remove Traps\": 10,\n      \"Move Silently\": 5,\n      \"Hide in Shadows\": 5,\n      \"Detect Noise\": 10,\n      \"Climb Walls\": -15,\n      \"Read Languages\": 0,\n    },\n    halfling: {\n      \"Pick Pockets\": 5,\n      \"Open Locks\": 5,\n      \"Find/Remove Traps\": 5,\n      \"Move Silently\": 10,\n      \"Hide in Shadows\": 15,\n      \"Detect Noise\": 5,\n      \"Climb Walls\": -15,\n      \"Read Languages\": -5,\n    },\n    \"half-elf\": {\n      \"Pick Pockets\": 10,\n      \"Open Locks\": 0,\n      \"Find/Remove Traps\": 0,\n      \"Move Silently\": 0,\n      \"Hide in Shadows\": 5,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n    human: {\n      \"Pick Pockets\": 0,\n      \"Open Locks\": 0,\n      \"Find/Remove Traps\": 0,\n      \"Move Silently\": 0,\n      \"Hide in Shadows\": 0,\n      \"Detect Noise\": 0,\n      \"Climb Walls\": 0,\n      \"Read Languages\": 0,\n    },\n  };\n\n  for (let i = 0; i < skillList.length; i++) {\n    skillList[i].value += racialAdjustments[raceName][skillList[i].name];\n  }\n\n  return skillList;\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport * as ThiefSkills from \"../adndthiefskills.js\";\n\nexport default new ADNDClass(\n  \"bard\",\n  \"rogue\",\n  \"1d6\",\n  -1,\n  12,\n  -1,\n  13,\n  -1,\n  15,\n  [\"dexterity\", \"charisma\"],\n  [\"Climb walls\", \"Detect noise\", \"Pick pockets\", \"Read languages\", \"Influence reactions\"],\n  [\"lawful neutral\", \"neutral good\", \"true neutral\", \"neutral evil\", \"chaotic neutral\"],\n  false,\n  [],\n  [],\n  [\"any\"],\n  [\"padded\", \"leather\", \"studded leather\", \"chain mail\"],\n  2,\n  3,\n  -3,\n  function(character: ADNDCharacter): ADNDCharacter {\n    let skills = [\n      { name: \"Pick Pockets\", value: 10, points: 0 },\n      { name: \"Detect Noise\", value: 20, points: 0 },\n      { name: \"Climb Walls\", value: 50, points: 0 },\n      { name: \"Read Languages\", value: 5, points: 0 },\n    ];\n    skills = RND.shuffle(skills);\n\n    skills = ThiefSkills.modifyForDexterity(skills, character.dexterity);\n    let raceName = character.race.name;\n    if (character.race.name.includes(\"halfling\")) {\n      raceName = \"halfling\";\n    }\n\n    skills = ThiefSkills.modifyForRace(skills, raceName);\n    skills = ThiefSkills.distributePoints(skills, 20);\n\n    for (let i = 0; i < skills.length; i++) {\n      character.abilities.push(`${skills[i].name}: ${skills[i].value}%`);\n    }\n\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"cleric\",\n  \"priest\",\n  \"1d8\",\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  -1,\n  [\"wisdom\"],\n  [\"Cast priest spells\", \"Turn undead\"],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"priest\"],\n  [\n    {\n      filter: new SpellFilter(\"\", 1, \"priest\", [], [\"plant\", \"animal\", \"weather\", \"elemental\"]),\n      count: 1,\n    },\n  ],\n  [\"bludgeoning\"],\n  [\"any\"],\n  2,\n  4,\n  -3,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        let filteredSpell = filteredSpells.pop();\n        if (filteredSpell === undefined) {\n          throw new Error(\"Spell is undefined.\");\n        }\n        character.spells.push(filteredSpell);\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"conjurer\",\n  \"wizard\",\n  \"1d4\",\n  -1,\n  -1,\n  15,\n  9,\n  -1,\n  -1,\n  [\"intelligence\"],\n  [\"Create magical items\", \"Cast wizard spells\"],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"wizard\"],\n  [\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [\"conjuration\", \"summoning\"], []),\n      count: 1,\n    },\n    {\n      filter: new SpellFilter(\n        \"\",\n        1,\n        \"wizard\",\n        [],\n        [\"greater divination\", \"invocation\", \"evocation\"],\n      ),\n      count: 1,\n    },\n  ],\n  [\"dagger\", \"staff\", \"dart\", \"knife\", \"sling\"],\n  [\"none\"],\n  1,\n  4,\n  -5,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        let filteredSpell = filteredSpells.pop();\n        if (filteredSpell === undefined) {\n          throw new Error(\"Spell is undefined.\");\n        }\n        character.spells.push(filteredSpell);\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"diviner\",\n  \"wizard\",\n  \"1d4\",\n  -1,\n  -1,\n  -1,\n  9,\n  16,\n  -1,\n  [\"intelligence\"],\n  [\"Create magical items\", \"Cast wizard spells\"],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"wizard\"],\n  [\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [\"divination\"], []),\n      count: 1,\n    },\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [], [\"conjuration\", \"summoning\"]),\n      count: 1,\n    },\n  ],\n  [\"dagger\", \"staff\", \"dart\", \"knife\", \"sling\"],\n  [\"none\"],\n  1,\n  4,\n  -5,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        let filteredSpell = filteredSpells.pop();\n        if (filteredSpell === undefined) {\n          throw new Error(\"Spell is undefined.\");\n        }\n        character.spells.push(filteredSpell);\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"druid\",\n  \"priest\",\n  \"1d8\",\n  -1,\n  -1,\n  -1,\n  -1,\n  12,\n  15,\n  [\"wisdom\"],\n  [\n    \"Cast priest spells\",\n    \"Speak druidic\",\n    \"+2 bonus to saving throws vs. fire or electrical attacks\",\n  ],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"priest\"],\n  [\n    {\n      filter: new SpellFilter(\n        \"\",\n        1,\n        \"priest\",\n        [\"plant\", \"animal\", \"healing\", \"weather\", \"elemental\"],\n        [],\n      ),\n      count: 1,\n    },\n  ],\n  [\"club\", \"sickle\", \"spear\", \"scimitar\", \"dagger\", \"staff\", \"dart\", \"sling\"],\n  [\"leather\", \"studded leather\", \"wooden shield\"],\n  2,\n  4,\n  -3,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        let filteredSpell = filteredSpells.pop();\n        if (filteredSpell === undefined) {\n          throw new Error(\"Spell is undefined.\");\n        }\n        character.spells.push(filteredSpell);\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"enchanter\",\n  \"wizard\",\n  \"1d4\",\n  -1,\n  -1,\n  -1,\n  9,\n  -1,\n  16,\n  [\"intelligence\"],\n  [\"Create magical items\", \"Cast wizard spells\"],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"wizard\"],\n  [\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [\"enchantment\", \"charm\"], []),\n      count: 1,\n    },\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [], [\"invocation\", \"evocation\", \"necromancy\"]),\n      count: 1,\n    },\n  ],\n  [\"dagger\", \"staff\", \"dart\", \"knife\", \"sling\"],\n  [\"none\"],\n  1,\n  4,\n  -5,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        let filteredSpell = filteredSpells.pop();\n        if (filteredSpell === undefined) {\n          throw new Error(\"Spell is undefined.\");\n        }\n        character.spells.push(filteredSpell);\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\n\nexport default new ADNDClass(\n  \"fighter\",\n  \"warrior\",\n  \"1d10\",\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  [\"strength\"],\n  [],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  false,\n  [],\n  [],\n  [\"any\"],\n  [\"any\"],\n  4,\n  3,\n  -2,\n  function(character: ADNDCharacter): ADNDCharacter {\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"illusionist\",\n  \"wizard\",\n  \"1d4\",\n  -1,\n  16,\n  -1,\n  9,\n  -1,\n  -1,\n  [\"intelligence\"],\n  [\n    \"Create magical items\",\n    \"Cast wizard spells (other than abjuration, invocation, evocation, or necromancy)\",\n  ],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"wizard\"],\n  [\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [\"illusion\"], []),\n      count: 1,\n    },\n    {\n      filter: new SpellFilter(\n        \"\",\n        1,\n        \"wizard\",\n        [],\n        [\"abjuration\", \"invocation\", \"evocation\", \"necromancy\"],\n      ),\n      count: 1,\n    },\n  ],\n  [\"dagger\", \"staff\", \"dart\", \"knife\", \"sling\"],\n  [\"none\"],\n  1,\n  4,\n  -5,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        let filteredSpell = filteredSpells.pop();\n        if (filteredSpell === undefined) {\n          throw new Error(\"Spell is undefined.\");\n        }\n        character.spells.push(filteredSpell);\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"invoker\",\n  \"wizard\",\n  \"1d4\",\n  -1,\n  -1,\n  16,\n  9,\n  -1,\n  -1,\n  [\"intelligence\"],\n  [\n    \"Create magical items\",\n    \"Cast wizard spells (other than enchantment, charm, conjuration, or summoning)\",\n  ],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"wizard\"],\n  [\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [\"invocation\", \"evocation\"], []),\n      count: 1,\n    },\n    {\n      filter: new SpellFilter(\n        \"\",\n        1,\n        \"wizard\",\n        [],\n        [\"enchantment\", \"charm\", \"conjuration\", \"summoning\"],\n      ),\n      count: 1,\n    },\n  ],\n  [\"dagger\", \"staff\", \"dart\", \"knife\", \"sling\"],\n  [\"none\"],\n  1,\n  4,\n  -5,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        let filteredSpell = filteredSpells.pop();\n        if (filteredSpell === undefined) {\n          throw new Error(\"Spell is undefined.\");\n        }\n        character.spells.push(filteredSpell);\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"mage\",\n  \"wizard\",\n  \"1d4\",\n  -1,\n  -1,\n  -1,\n  9,\n  -1,\n  -1,\n  [\"intelligence\"],\n  [\"Create magical items\", \"Cast wizard spells\"],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"wizard\"],\n  [\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [], []),\n      count: 1,\n    },\n  ],\n  [\"dagger\", \"staff\", \"dart\", \"knife\", \"sling\"],\n  [\"none\"],\n  1,\n  4,\n  -5,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        let filteredSpell = filteredSpells.pop();\n        if (filteredSpell === undefined) {\n          throw new Error(\"Spell is undefined.\");\n        }\n        character.spells.push(filteredSpell);\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"necromancer\",\n  \"wizard\",\n  \"1d4\",\n  -1,\n  -1,\n  -1,\n  9,\n  16,\n  -1,\n  [\"intelligence\"],\n  [\"Create magical items\", \"Cast wizard spells (other than illusion, enchantment, or charm)\"],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"wizard\"],\n  [\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [\"necromancy\"], []),\n      count: 1,\n    },\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [], [\"enchantment\", \"charm\", \"illusion\"]),\n      count: 1,\n    },\n  ],\n  [\"dagger\", \"staff\", \"dart\", \"knife\", \"sling\"],\n  [\"none\"],\n  1,\n  4,\n  -5,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        let filteredSpell = filteredSpells.pop();\n        if (filteredSpell === undefined) {\n          throw new Error(\"Spell is undefined.\");\n        }\n        character.spells.push(filteredSpell);\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\n\nexport default new ADNDClass(\n  \"paladin\",\n  \"warrior\",\n  \"1d10\",\n  12,\n  -1,\n  9,\n  -1,\n  13,\n  17,\n  [\"strength\", \"charisma\"],\n  [\n    \"Detect the presence of evil intent within 60'\",\n    \"+2 bonus to all saving throws\",\n    \"Immune to all diseases\",\n    \"Heal by laying on hands (2 HP), once per day\",\n    \"Cure all dieases, once per week\",\n    \"10' aura of protection: all summoned and specifically evil creatures within the radius suffer -1 to their attack rolls\",\n    \"If wielding an unsheathed holy sword, project a 10' circle of power that dispels hostile magic up to the paladin's experience level\",\n    \"May not possess more than 10 magical items\",\n    \"Never retains wealth; all excess must be donated to the church or a worthy cause\",\n    \"Must tithe 10% of all income to the paladin's institution\",\n    \"May only employ lawful good henchmen\",\n  ],\n  [\"lawful good\"],\n  false,\n  [],\n  [],\n  [\"any\"],\n  [\"any\"],\n  4,\n  3,\n  -2,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    return character;\n  },\n);\n","\"use strict\";\n\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\n\nexport default new ADNDClass(\n  \"ranger\",\n  \"warrior\",\n  \"1d10\",\n  13,\n  13,\n  14,\n  -1,\n  14,\n  -1,\n  [\"strength\", \"dexterity\", \"wisdom\"],\n  [\n    \"When wearing studded leather or lighter armor, fight two-handed with no penalty\",\n    \"Tracking proficiency\",\n    \"When wearing studded leather or lighter armor, 10% chance to move silently\",\n    \"When wearing studded leather or lighter armor, 15% chance to hide in shadows\",\n    \"Adept with both trained and untamed creatures\",\n  ],\n  [\"lawful good\", \"neutral good\", \"chaotic good\"],\n  false,\n  [],\n  [],\n  [\"any\"],\n  [\"any\"],\n  4,\n  3,\n  -2,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport * as ThiefSkills from \"../adndthiefskills.js\";\n\nexport default new ADNDClass(\n  \"thief\",\n  \"rogue\",\n  \"1d6\",\n  -1,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  [\"dexterity\"],\n  [\n    \"Pick pockets\",\n    \"Open locks\",\n    \"Find/remove traps\",\n    \"Move silently\",\n    \"Hide in shadows\",\n    \"Detect noise\",\n    \"Climb walls\",\n    \"Read languages\",\n    \"Backstab\",\n    \"Thieves' cant\",\n  ],\n  [\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  false,\n  [],\n  [],\n  [\n    \"club\",\n    \"dagger\",\n    \"hand crossbow\",\n    \"lasso\",\n    \"short bow\",\n    \"broad sword\",\n    \"long sword\",\n    \"short sword\",\n    \"staff\",\n    \"dart\",\n    \"knife\",\n    \"sling\",\n  ],\n  [\"leather\", \"studded leather\", \"padded\", \"elven chain armor\"],\n  2,\n  3,\n  -3,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let skills = [\n      { name: \"Pick Pockets\", value: 15, points: 0 },\n      { name: \"Open Locks\", value: 10, points: 0 },\n      { name: \"Find/Remove Traps\", value: 5, points: 0 },\n      { name: \"Move Silently\", value: 10, points: 0 },\n      { name: \"Hide in Shadows\", value: 5, points: 0 },\n      { name: \"Detect Noise\", value: 15, points: 0 },\n      { name: \"Climb Walls\", value: 60, points: 0 },\n      { name: \"Read Languages\", value: 0, points: 0 },\n    ];\n    skills = RND.shuffle(skills);\n\n    skills = ThiefSkills.modifyForDexterity(skills, character.dexterity);\n\n    let raceName = character.race.name;\n    if (character.race.name.includes(\"halfling\")) {\n      raceName = \"halfling\";\n    }\n\n    skills = ThiefSkills.modifyForRace(skills, raceName);\n    skills = ThiefSkills.distributePoints(skills, 60);\n\n    for (let i = 0; i < skills.length; i++) {\n      character.abilities.push(`${skills[i].name}: ${skills[i].value}%`);\n    }\n\n    return character;\n  },\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDClass from \"../adndclass.js\";\nimport SpellFilter from \"../spellfilter.js\";\nimport * as Spells from \"../spells.js\";\n\nexport default new ADNDClass(\n  \"transmuter\",\n  \"wizard\",\n  \"1d4\",\n  -1,\n  15,\n  -1,\n  9,\n  -1,\n  -1,\n  [\"intelligence\"],\n  [\"Create magical items\", \"Cast wizard spells (other than abjuration or necromancy)\"],\n  [\n    \"lawful good\",\n    \"lawful neutral\",\n    \"lawful evil\",\n    \"neutral good\",\n    \"true neutral\",\n    \"neutral evil\",\n    \"chaotic evil\",\n    \"chaotic neutral\",\n    \"chaotic good\",\n  ],\n  true,\n  [\"wizard\"],\n  [\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [\"transmutation\"], []),\n      count: 1,\n    },\n    {\n      filter: new SpellFilter(\"\", 1, \"wizard\", [], [\"abjuration\", \"necromancy\"]),\n      count: 1,\n    },\n  ],\n  [\"dagger\", \"staff\", \"dart\", \"knife\", \"sling\"],\n  [\"none\"],\n  1,\n  4,\n  -5,\n  function(this: ADNDClass, character: ADNDCharacter): ADNDCharacter {\n    let allSpells = Spells.getAll();\n    for (let i = 0; i < this.spellList.length; i++) {\n      let filteredSpells = Spells.getFilteredSpells(this.spellList[i].filter, allSpells);\n      filteredSpells = RND.shuffle(filteredSpells);\n      for (let j = 0; j < this.spellList[i].count; j++) {\n        let filteredSpell = filteredSpells.pop();\n        if (filteredSpell === undefined) {\n          throw new Error(\"Spell is undefined.\");\n        }\n        character.spells.push(filteredSpell);\n      }\n    }\n    return character;\n  },\n);\n","\"use strict\";\n\nimport ADNDClass from \"../adndclass.js\";\nimport abjurer from \"./abjurer.js\";\nimport bard from \"./bard.js\";\nimport cleric from \"./cleric.js\";\nimport conjurer from \"./conjurer.js\";\nimport diviner from \"./diviner.js\";\nimport druid from \"./druid.js\";\nimport enchanter from \"./enchanter.js\";\nimport fighter from \"./fighter.js\";\nimport illusionist from \"./illusionist.js\";\nimport invoker from \"./invoker.js\";\nimport mage from \"./mage.js\";\nimport necromancer from \"./necromancer.js\";\nimport paladin from \"./paladin.js\";\nimport ranger from \"./ranger.js\";\nimport thief from \"./thief.js\";\nimport transmuter from \"./transmuter.js\";\n\nexport function getAll(): ADNDClass[] {\n  return [\n    abjurer,\n    bard,\n    cleric,\n    conjurer,\n    diviner,\n    druid,\n    enchanter,\n    fighter,\n    illusionist,\n    invoker,\n    mage,\n    necromancer,\n    paladin,\n    ranger,\n    thief,\n    transmuter,\n  ];\n}\n","\"use strict\";\n\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDRace from \"../adndrace.js\";\n\nexport default new ADNDRace(\n  \"dwarf\",\n  \"dwarven\",\n  function(character: ADNDCharacter): ADNDCharacter {\n    character.constitution += 1;\n    character.charisma -= 1;\n    // TODO: address saving throws\n    character.abilities.push(\"20% chance of magical item malfunction\");\n    character.abilities.push(\"+1 to hit orcs, half-orcs, goblins, and hobgoblins\");\n    character.abilities.push(\n      \"-4 to attack rolls made on the character by ogres, trolls, ogre magi, giants, and titans\",\n    );\n    character.abilities.push(\"Infravision (60')\");\n    character.abilities.push(\"Within 10', detect grade or slope in passage with 1-5 on 1d6\");\n    character.abilities.push(\"Within 10', detect new tunnel/passage construction with 1-5 on 1d6\");\n    character.abilities.push(\"Within 10', detect sliding/shifting walls or rooms with 1-4 on 1d6\");\n    character.abilities.push(\n      \"Within 10', detect stonework traps, pits, and deadfalls with 1-3 on 1d6\",\n    );\n    character.abilities.push(\"Within 10', determine approximate depth underground with 1-3 on 1d6\");\n    return character;\n  },\n  8,\n  18,\n  3,\n  17,\n  11,\n  18,\n  3,\n  18,\n  3,\n  18,\n  3,\n  17,\n  43,\n  41,\n  130,\n  105,\n  \"1d10\",\n  \"4d10\",\n  40,\n  6,\n  \"5d6\",\n  [\"common\", \"dwarf\", \"gnome\", \"goblin\", \"kobold\", \"orc\"],\n  [\"cleric\", \"fighter\", \"thief\"],\n);\n","\"use strict\";\n\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDRace from \"../adndrace.js\";\n\nexport default new ADNDRace(\n  \"elf\",\n  \"elven\",\n  function(character: ADNDCharacter): ADNDCharacter {\n    character.dexterity += 1;\n    character.constitution -= 1;\n    // TODO: address special abilities\n    character.abilities.push(\"90% resistance to sleep spell and all charm-related spells\");\n    character.abilities.push(\"+1 to hit with all bows other than crossbow\");\n    character.abilities.push(\"+1 to hit with short or long swords\");\n    character.abilities.push(\"Infravision (60')\");\n    character.abilities.push(\"Notice secret door with 1 on 1d6 when passing within 10 feet\");\n    character.abilities.push(\"Find secret door when actively searching with 1-2 on 1d6\");\n    character.abilities.push(\"Find concealed portal when actively searching with 1-3 on 1d6\");\n    character.abilities.push(\n      \"When not wearing metal armor, and either alone or with other elves/halflings not in metal armor, gain a bonus to surprise opponents. Those opponents have a -4 penalty to their surprise die rolls, or a -2 penalty if the elf has to open a door or screen to attack.\",\n    );\n    return character;\n  },\n  3,\n  18,\n  6,\n  18,\n  7,\n  18,\n  8,\n  18,\n  3,\n  18,\n  3,\n  18,\n  55,\n  50,\n  90,\n  70,\n  \"1d10\",\n  \"3d10\",\n  100,\n  12,\n  \"5d6\",\n  [\"common\", \"elf\", \"gnome\", \"halfling\", \"goblin\", \"hobgoblin\", \"gnoll\", \"orc\"],\n  [\"cleric\", \"fighter\", \"mage\", \"ranger\", \"thief\"],\n);\n","\"use strict\";\n\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDRace from \"../adndrace.js\";\n\nexport default new ADNDRace(\n  \"gnome\",\n  \"gnomish\",\n  function(character: ADNDCharacter): ADNDCharacter {\n    character.intelligence += 1;\n    character.wisdom -= 1;\n    // TODO: address saving throws\n    character.abilities.push(\n      \"20% chance of magical item malfunction, except weapons, armor, shields, and illusionist items (and, if the gnome is a thief, items that duplicate thieving abilities)\",\n    );\n    character.abilities.push(\"+1 to hit kobolds or goblins\");\n    character.abilities.push(\n      \"When gnolls, bugbears, ogres, trolls, ogre magi, giants, or titans attack gnomes, subtract -4 from their attack rolls\",\n    );\n    character.abilities.push(\"Infravision (60')\");\n    character.abilities.push(\"Within 10', detect grade or slope in passages with 1-5 on 1d6\");\n    character.abilities.push(\n      \"Within 10', detect unsafe walls, ceiling, and floors with 1-7 on 1d10\",\n    );\n    character.abilities.push(\"Determine approximate depth underground with 1-4 on 1d6\");\n    character.abilities.push(\n      \"Within 10', determine approximate direction underground with 1-3 on 1d6\",\n    );\n    return character;\n  },\n  6,\n  18,\n  3,\n  18,\n  8,\n  18,\n  6,\n  18,\n  3,\n  18,\n  3,\n  18,\n  38,\n  36,\n  72,\n  68,\n  \"1d6\",\n  \"5d4\",\n  60,\n  6,\n  \"3d12\",\n  [\"common\", \"gnome\", \"dwarf\", \"halfling\", \"goblin\", \"kobold\", \"burrowing mammal\"],\n  [\"cleric\", \"fighter\", \"illusionist\", \"thief\"],\n);\n","\"use strict\";\n\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDRace from \"../adndrace.js\";\n\nexport default new ADNDRace(\n  \"half-elf\",\n  \"half-elven\",\n  function(character: ADNDCharacter): ADNDCharacter {\n    character.abilities.push(\"30% resistance to sleep spell and all charm-related spells\");\n    character.abilities.push(\"Infravision (60')\");\n    character.abilities.push(\"Notice secret door with 1 on 1d6 when passing within 10 feet\");\n    character.abilities.push(\"Find secret door when actively searching with 1-2 on 1d6\");\n    character.abilities.push(\"Find concealed portal when actively searching with 1-3 on 1d6\");\n    return character;\n  },\n  3,\n  18,\n  6,\n  18,\n  6,\n  18,\n  4,\n  18,\n  3,\n  18,\n  3,\n  18,\n  60,\n  58,\n  110,\n  85,\n  \"2d6\",\n  \"3d12\",\n  15,\n  12,\n  \"1d6\",\n  [\"common\", \"elf\", \"gnome\", \"halfling\", \"goblin\", \"hobgoblin\", \"gnoll\", \"orc\"],\n  [\"bard\", \"cleric\", \"druid\", \"fighter\", \"mage\", \"ranger\", \"specialist wizard\", \"thief\"],\n);\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDRace from \"../adndrace.js\";\n\nexport default new ADNDRace(\n  \"halfling\",\n  \"halfling\",\n  function(character: ADNDCharacter): ADNDCharacter {\n    character.dexterity += 1;\n    character.strength -= 1;\n    character.exceptionalStrength = -1;\n    // TODO: address saving throws\n    let halflingType = RND.item([\"Hairfeet\", \"Tallfellow\", \"Stout\"]);\n    character.race.name = `${halflingType} halfling`;\n    if (halflingType == \"Stout\") {\n      if (RND.simple(100) <= 15) {\n        character.abilities.push(\"Normal Infravision (60')\");\n      }\n      character.abilities.push(\"Know if a passage has up or down grade on 1,2,3 on 1d4\");\n      character.abilities.push(\"Determine direction on 1,2,3 on 1d6\");\n    } else {\n      if (RND.simple(100) <= 25) {\n        character.abilities.push(\"Limited Infravision (30')\");\n      }\n    }\n    character.abilities.push(\"+1 to attack rolls with thrown weapons and slings\");\n    character.abilities.push(\n      \"When not wearing metal armor, and either alone or with other halflings/elves not in metal armor, gain a bonus to surprise opponents. Those opponents have a -4 penalty to their surprise die rolls, or a -2 penalty if the halfling has to open a door or screen to attack.\",\n    );\n    return character;\n  },\n  7,\n  18,\n  7,\n  18,\n  10,\n  18,\n  6,\n  18,\n  3,\n  17,\n  3,\n  18,\n  32,\n  30,\n  52,\n  48,\n  \"2d8\",\n  \"5d4\",\n  20,\n  6,\n  \"3d4\",\n  [\"common\", \"halfling\", \"dwarf\", \"elf\", \"gnome\", \"goblin\", \"orc\"],\n  [\"cleric\", \"fighter\", \"thief\"],\n);\n","\"use strict\";\n\nimport ADNDCharacter from \"../adndcharacter.js\";\nimport ADNDRace from \"../adndrace.js\";\n\nexport default new ADNDRace(\n  \"human\",\n  \"human\",\n  function(character: ADNDCharacter): ADNDCharacter {\n    return character;\n  },\n  1,\n  25,\n  1,\n  25,\n  1,\n  25,\n  1,\n  25,\n  1,\n  25,\n  1,\n  25,\n  60,\n  59,\n  140,\n  100,\n  \"2d10\",\n  \"6d10\",\n  15,\n  12,\n  \"1d4\",\n  [\n    \"common\",\n    \"dwarf\",\n    \"elf\",\n    \"gnome\",\n    \"halfling\",\n    \"goblin\",\n    \"hobgoblin\",\n    \"gnoll\",\n    \"orc\",\n    \"giant\",\n    \"kobold\",\n  ],\n  [\n    \"bard\",\n    \"cleric\",\n    \"druid\",\n    \"fighter\",\n    \"illusionist\",\n    \"mage\",\n    \"paladin\",\n    \"ranger\",\n    \"specialist wizard\",\n    \"thief\",\n  ],\n);\n","\"use strict\";\n\nimport ADNDRace from \"../adndrace.js\";\nimport dwarf from \"./dwarf.js\";\nimport elf from \"./elf.js\";\nimport gnome from \"./gnome.js\";\nimport halfelf from \"./halfelf.js\";\nimport halfling from \"./halfling.js\";\nimport human from \"./human.js\";\n\nexport function getAll(): ADNDRace[] {\n  return [dwarf, elf, gnome, halfelf, halfling, human];\n}\n","\"use strict\";\n\nimport ADNDClass from \"./adndclass.js\";\nimport ADNDRace from \"./adndrace.js\";\nimport * as classes from \"./classes/classes.js\";\nimport * as races from \"./races/races.js\";\n\nexport default class ADNDCharacterGeneratorConfig {\n  allowedRaces: ADNDRace[];\n  allowedClasses: ADNDClass[];\n\n  constructor() {\n    this.allowedRaces = races.getAll();\n    this.allowedClasses = classes.getAll();\n  }\n}\n","\"use strict\";\n\nimport ADNDArmor from \"./adndarmor.js\";\nimport ADNDWeapon from \"./adndweapon.js\";\n\nexport function getAmmoTypes(weapon: ADNDWeapon): ADNDWeapon[] {\n  let result: ADNDWeapon[] = [];\n\n  if (weapon.name == \"blowgun\") {\n    result = [\n      new ADNDWeapon(\n        \"blowgun barbed dart\",\n        1 * 10,\n        1,\n        \"small\",\n        \"piercing\",\n        -1,\n        \"1d3\",\n        \"1d2\",\n        \"blowgun dart\",\n      ),\n      new ADNDWeapon(\n        \"blowgun needle\",\n        1 * 10,\n        1,\n        \"small\",\n        \"piercing\",\n        -1,\n        \"1d3\",\n        \"1d2\",\n        \"blowgun dart\",\n      ),\n    ];\n  } else if (weapon.category == \"bow\") {\n    result = [\n      new ADNDWeapon(\n        \"flight arrow (12)\",\n        3 * 10,\n        1,\n        \"small\",\n        \"piercing\",\n        -1,\n        \"1d6\",\n        \"1d6\",\n        \"arrow\",\n      ),\n      new ADNDWeapon(\"sheaf arrow (6)\", 3 * 10, 1, \"small\", \"piercing\", -1, \"1d8\", \"1d8\", \"arrow\"),\n    ];\n  } else if (weapon.name == \"Crossbow, hand\") {\n    result = [\n      new ADNDWeapon(\n        \"hand quarrel\",\n        1 * 100,\n        1,\n        \"small\",\n        \"piercing\",\n        -1,\n        \"1d3\",\n        \"1d2\",\n        \"crossbow quarrel\",\n      ),\n    ];\n  } else if (weapon.name == \"Crossbow, light\") {\n    result = [\n      new ADNDWeapon(\n        \"light quarrel\",\n        1 * 10,\n        1,\n        \"small\",\n        \"piercing\",\n        -1,\n        \"1d4\",\n        \"1d4\",\n        \"crossbow quarrel\",\n      ),\n    ];\n  } else if (weapon.name == \"crossbow, heavy\") {\n    result = [\n      new ADNDWeapon(\n        \"heavy quarrel\",\n        2 * 10,\n        1,\n        \"small\",\n        \"piercing\",\n        -1,\n        \"1d4+1\",\n        \"1d6+1\",\n        \"crossbow quarrel\",\n      ),\n    ];\n  } else if (weapon.category == \"sling\") {\n    result = [\n      new ADNDWeapon(\n        \"sling bullet\",\n        1,\n        0,\n        \"small\",\n        \"bludgeoning\",\n        -1,\n        \"1d4+1\",\n        \"1d6+1\",\n        \"sling bullet\",\n      ),\n      new ADNDWeapon(\"sling stone\", 0, 0, \"small\", \"bludgeoning\", -1, \"1d4\", \"1d4\", \"sling bullet\"),\n    ];\n  }\n\n  return result;\n}\n\nexport function getArmor(): ADNDArmor[] {\n  return [\n    new ADNDArmor(\"banded mail\", -7, 35, 300 * 100),\n    new ADNDArmor(\"brigandine\", -4, 35, 120 * 100),\n    new ADNDArmor(\"bronze plate mail\", -7, 45, 400 * 100),\n    new ADNDArmor(\"chain mail\", -6, 40, 75 * 100),\n    new ADNDArmor(\"field plate\", -8, 60, 2000 * 100),\n    new ADNDArmor(\"full plate\", -9, 70, 4000 * 100),\n    new ADNDArmor(\"hide\", -4, 30, 15 * 100),\n    new ADNDArmor(\"leather\", -2, 15, 5 * 100),\n    new ADNDArmor(\"padded\", -2, 10, 4 * 100),\n    new ADNDArmor(\"plate mail\", -7, 50, 600 * 100),\n    new ADNDArmor(\"ring mail\", -3, 30, 100 * 100),\n    new ADNDArmor(\"scale mail\", -4, 40, 120 * 100),\n    new ADNDArmor(\"shield, body\", -1, 15, 10 * 100),\n    new ADNDArmor(\"shield, small buckler\", -1, 10, 7 * 100),\n    new ADNDArmor(\"shield, medium buckler\", -1, 5, 3 * 100),\n    new ADNDArmor(\"splint mail\", -6, 40, 80 * 100),\n    new ADNDArmor(\"studded leather\", -4, 25, 20 * 100),\n  ];\n}\n\nexport function getWeapons(): ADNDWeapon[] {\n  return [\n    new ADNDWeapon(\"arquebus\", 500 * 100, 10, \"medium\", \"piercing\", 15, \"1d10\", \"1d10\", \"musket\"),\n    new ADNDWeapon(\"battle axe\", 5 * 100, 6, \"medium\", \"slashing\", 7, \"1d8\", \"1d8\", \"axe\"),\n    new ADNDWeapon(\"blowgun\", 5 * 100, 1, \"large\", \"piercing\", 5, \"1\", \"1\", \"blowgun\", true),\n    new ADNDWeapon(\"short bow\", 30 * 100, 2, \"medium\", \"piercing\", 7, \"1\", \"1\", \"bow\", true),\n    new ADNDWeapon(\"long bow\", 75 * 100, 3, \"large\", \"piercing\", 8, \"1\", \"1\", \"bow\", true),\n    new ADNDWeapon(\n      \"composite short bow\",\n      75 * 100,\n      2,\n      \"medium\",\n      \"piercing\",\n      6,\n      \"1\",\n      \"1\",\n      \"bow\",\n      true,\n    ),\n    new ADNDWeapon(\n      \"composite long bow\",\n      100 * 100,\n      3,\n      \"large\",\n      \"piercing\",\n      7,\n      \"1\",\n      \"1\",\n      \"bow\",\n      true,\n    ),\n    new ADNDWeapon(\"club\", 0, 3, \"medium\", \"bludgeoning\", 4, \"1d6\", \"1d3\", \"club\"),\n    new ADNDWeapon(\n      \"crossbow, hand\",\n      300 * 100,\n      3,\n      \"small\",\n      \"piercing\",\n      5,\n      \"0\",\n      \"0\",\n      \"crossbow\",\n      true,\n    ),\n    new ADNDWeapon(\n      \"crossbow, light\",\n      35 * 100,\n      7,\n      \"medium\",\n      \"piercing\",\n      7,\n      \"0\",\n      \"0\",\n      \"crossbow\",\n      true,\n    ),\n    new ADNDWeapon(\n      \"crossbow, heavy\",\n      50 * 100,\n      14,\n      \"medium\",\n      \"piercing\",\n      10,\n      \"0\",\n      \"0\",\n      \"crossbow\",\n      true,\n    ),\n    new ADNDWeapon(\"dagger\", 2 * 100, 1, \"small\", \"piercing\", 2, \"1d4\", \"1d3\", \"dagger\"),\n    new ADNDWeapon(\"dart\", 5 * 10, 0.5, \"small\", \"piercing\", 2, \"1d4\", \"1d3\", \"dart\"),\n    new ADNDWeapon(\n      \"footman's flail\",\n      15 * 100,\n      15,\n      \"medium\",\n      \"bludgeoning\",\n      7,\n      \"1d6+1\",\n      \"2d4\",\n      \"flail\",\n    ),\n    new ADNDWeapon(\n      \"footman's mace\",\n      8 * 100,\n      10,\n      \"medium\",\n      \"bludgeoning\",\n      7,\n      \"1d6+1\",\n      \"1d6\",\n      \"mace\",\n    ),\n    new ADNDWeapon(\"footman's pick\", 8 * 100, 6, \"medium\", \"piercing\", 7, \"1d6+1\", \"2d4\", \"pick\"),\n    new ADNDWeapon(\"hand axe\", 1 * 100, 5, \"medium\", \"slashing\", 4, \"1d6\", \"1d4\", \"axe\"),\n    new ADNDWeapon(\"harpoon\", 20 * 100, 6, \"large\", \"piercing\", 7, \"2d4\", \"2d6\", \"spear\"),\n    new ADNDWeapon(\n      \"horseman's flail\",\n      8 * 100,\n      5,\n      \"medium\",\n      \"bludgeoning\",\n      6,\n      \"1d4+1\",\n      \"1d4+1\",\n      \"flail\",\n    ),\n    new ADNDWeapon(\"horseman's mace\", 5 * 100, 6, \"medium\", \"bludgeoning\", 6, \"1d6\", \"1d4\", \"mace\"),\n    new ADNDWeapon(\"horseman's pick\", 7 * 100, 4, \"medium\", \"piercing\", 5, \"1d4+1\", \"1d4\", \"pick\"),\n    new ADNDWeapon(\"javelin\", 5 * 10, 2, \"medium\", \"piercing\", 4, \"1d6\", \"1d6\", \"spear\"),\n    new ADNDWeapon(\"knife\", 5 * 10, 0.5, \"small\", \"piercing\", 2, \"1d3\", \"1d2\", \"dagger\"),\n    new ADNDWeapon(\n      \"jousting lance\",\n      20 * 100,\n      20,\n      \"large\",\n      \"piercing\",\n      10,\n      \"1d3-1\",\n      \"1d2-1\",\n      \"lance\",\n    ),\n    new ADNDWeapon(\n      \"heavy horse lance\",\n      15 * 100,\n      15,\n      \"large\",\n      \"piercing\",\n      8,\n      \"1d8+1\",\n      \"3d6\",\n      \"lance\",\n    ),\n    new ADNDWeapon(\"light horse lance\", 6 * 100, 5, \"large\", \"piercing\", 6, \"1d6\", \"1d8\", \"lance\"),\n    new ADNDWeapon(\n      \"medium horse lance\",\n      10 * 100,\n      10,\n      \"large\",\n      \"piercing\",\n      7,\n      \"1d6+1\",\n      \"2d6\",\n      \"lance\",\n    ),\n    new ADNDWeapon(\"mancatcher\", 30 * 100, 8, \"large\", \"none\", 7, \"0\", \"0\", \"nonlethal\"),\n    new ADNDWeapon(\"morningstar\", 10 * 100, 12, \"medium\", \"bludgeoning\", 7, \"2d4\", \"1d6+1\", \"mace\"),\n    new ADNDWeapon(\"awl pike\", 5 * 100, 12, \"large\", \"piercing\", 13, \"1d6\", \"1d12\", \"polearm\"),\n    new ADNDWeapon(\"bardiche\", 7 * 100, 12, \"large\", \"slashing\", 9, \"2d4\", \"2d6\", \"polearm\"),\n    new ADNDWeapon(\n      \"bec de corbin\",\n      8 * 100,\n      10,\n      \"large\",\n      \"piercing/bludgeoning\",\n      9,\n      \"1d8\",\n      \"1d6\",\n      \"polearm\",\n    ),\n    new ADNDWeapon(\n      \"bill-guisarme\",\n      7 * 100,\n      15,\n      \"large\",\n      \"piercing/slashing\",\n      10,\n      \"2d4\",\n      \"1d10\",\n      \"polearm\",\n    ),\n    new ADNDWeapon(\n      \"fauchard\",\n      5 * 100,\n      7,\n      \"large\",\n      \"piercing/slashing\",\n      8,\n      \"1d6\",\n      \"1d8\",\n      \"polearm\",\n    ),\n    new ADNDWeapon(\n      \"fauchard-fork\",\n      8 * 100,\n      9,\n      \"large\",\n      \"piercing/slashing\",\n      8,\n      \"1d8\",\n      \"1d10\",\n      \"polearm\",\n    ),\n    new ADNDWeapon(\"glaive\", 6 * 100, 8, \"large\", \"slashing\", 8, \"1d6\", \"1d10\", \"polearm\"),\n    new ADNDWeapon(\n      \"glaive-guisarme\",\n      10 * 100,\n      10,\n      \"large\",\n      \"piercing/slashing\",\n      9,\n      \"2d4\",\n      \"2d6\",\n      \"polearm\",\n    ),\n    new ADNDWeapon(\"guisarme\", 5 * 100, 8, \"large\", \"slashing\", 8, \"2d4\", \"1d8\", \"polearm\"),\n    new ADNDWeapon(\n      \"guisarme-voulge\",\n      8 * 100,\n      15,\n      \"large\",\n      \"piercing/slashing\",\n      10,\n      \"2d4\",\n      \"2d4\",\n      \"polearm\",\n    ),\n    new ADNDWeapon(\n      \"halberd\",\n      10 * 100,\n      15,\n      \"large\",\n      \"piercing/slashing\",\n      9,\n      \"1d10\",\n      \"2d6\",\n      \"polearm\",\n    ),\n    new ADNDWeapon(\n      \"hook fauchard\",\n      10 * 100,\n      8,\n      \"large\",\n      \"piercing/slashing\",\n      9,\n      \"1d4\",\n      \"1d4\",\n      \"polearm\",\n    ),\n    new ADNDWeapon(\n      \"lucern hammer\",\n      7 * 100,\n      15,\n      \"large\",\n      \"piercing/bludgeoning\",\n      9,\n      \"2d4\",\n      \"1d6\",\n      \"polearm\",\n    ),\n    new ADNDWeapon(\"military fork\", 5 * 100, 7, \"large\", \"piercing\", 7, \"1d8\", \"2d4\", \"polearm\"),\n    new ADNDWeapon(\"partisan\", 10 * 100, 8, \"large\", \"piercing\", 9, \"1d6\", \"1d6+1\", \"polearm\"),\n    new ADNDWeapon(\"ranseur\", 6 * 100, 7, \"large\", \"piercing\", 8, \"2d4\", \"2d4\", \"polearm\"),\n    new ADNDWeapon(\"spetum\", 5 * 100, 7, \"large\", \"piercing\", 8, \"1d6+1\", \"1d6+1\", \"polearm\"),\n    new ADNDWeapon(\"voulge\", 5 * 100, 12, \"large\", \"slashing\", 10, \"2d4\", \"2d4\", \"polearm\"),\n    new ADNDWeapon(\"quarterstaff\", 0, 4, \"large\", \"bludgeoning\", 4, \"1d6\", \"1d6\", \"staff\"),\n    new ADNDWeapon(\"scourge\", 1 * 100, 2, \"small\", \"none\", 5, \"1d4\", \"1d2\", \"whip\"),\n    new ADNDWeapon(\"sickle\", 6 * 10, 3, \"small\", \"slashing\", 4, \"1d4+1\", \"1d4\", \"sickle\"),\n    new ADNDWeapon(\"sling\", 5, 0, \"small\", \"bludgeoning\", 6, \"0\", \"0\", \"sling\", true),\n    new ADNDWeapon(\"spear\", 8 * 10, 5, \"medium\", \"piercing\", 6, \"1d6\", \"1d8\", \"spear\"),\n    new ADNDWeapon(\"staff sling\", 2 * 10, 2, \"medium\", \"none\", 11, \"0\", \"0\", \"sling\", true),\n    new ADNDWeapon(\n      \"bastard sword, 1H\",\n      25 * 100,\n      10,\n      \"medium\",\n      \"slashing\",\n      6,\n      \"1d8\",\n      \"1d12\",\n      \"sword\",\n    ),\n    new ADNDWeapon(\n      \"bastard sword, 2H\",\n      25 * 100,\n      10,\n      \"medium\",\n      \"slashing\",\n      8,\n      \"2d4\",\n      \"2d8\",\n      \"sword\",\n    ),\n    new ADNDWeapon(\"broad sword\", 10 * 100, 4, \"medium\", \"slashing\", 5, \"2d4\", \"1d6+1\", \"sword\"),\n    new ADNDWeapon(\"khopesh\", 10 * 100, 7, \"medium\", \"slashing\", 9, \"2d4\", \"1d6\", \"sword\"),\n    new ADNDWeapon(\"long sword\", 15 * 100, 4, \"medium\", \"slashing\", 5, \"1d8\", \"1d12\", \"sword\"),\n    new ADNDWeapon(\"scimitar\", 15 * 100, 4, \"medium\", \"slashing\", 5, \"1d8\", \"1d8\", \"sword\"),\n    new ADNDWeapon(\"short sword\", 10 * 100, 3, \"small\", \"piercing\", 3, \"1d6\", \"1d8\", \"sword\"),\n    new ADNDWeapon(\n      \"two-handed sword\",\n      50 * 100,\n      15,\n      \"large\",\n      \"slashing\",\n      10,\n      \"1d10\",\n      \"3d6\",\n      \"sword\",\n    ),\n    new ADNDWeapon(\"trident\", 10 * 10, 6, \"medium\", \"piercing\", 6, \"1d6\", \"1d8\", \"spear\"),\n    new ADNDWeapon(\"warhammer\", 2 * 100, 6, \"medium\", \"bludgeoning\", 4, \"1d4+1\", \"1d4\", \"mace\"),\n    new ADNDWeapon(\"whip\", 1 * 10, 2, \"medium\", \"none\", 8, \"1d2\", \"1\", \"whip\"),\n  ];\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport random from \"random\";\nimport * as Dice from \"../dice.js\";\nimport ADNDArmor from \"./adndarmor.js\";\nimport ADNDCharacter from \"./adndcharacter.js\";\nimport ADNDCharacterGeneratorConfig from \"./adndcharactergeneratorconfig.js\";\nimport ADNDClass from \"./adndclass.js\";\nimport ADNDRace from \"./adndrace.js\";\nimport ADNDWeapon from \"./adndweapon.js\";\nimport * as Equipment from \"./equipment.js\";\n\nexport default class ADNDCharacterGenerator {\n  config: ADNDCharacterGeneratorConfig;\n\n  generateCharacter(): ADNDCharacter {\n    let character = new ADNDCharacter();\n\n    character.charisma = Dice.roll(\"3d6\");\n    character.constitution = Dice.roll(\"3d6\");\n    character.dexterity = Dice.roll(\"3d6\");\n    character.intelligence = Dice.roll(\"3d6\");\n    character.strength = Dice.roll(\"3d6\");\n    character.wisdom = Dice.roll(\"3d6\");\n\n    if (character.strength == 18) {\n      character.exceptionalStrength = random.int(1, 100);\n    }\n\n    character.race = getRace(character, this.config.allowedRaces);\n    character = character.race.apply(character);\n\n    character.class = getClass(character, this.config.allowedClasses);\n    character = character.class.apply(character);\n\n    if (character.class.group == \"warrior\") {\n      character.currency = Dice.roll(\"5d4\") * 10 * 100;\n    } else if (character.class.group == \"wizard\") {\n      character.currency = Dice.roll(\"1d4+1\") * 10 * 100;\n    } else if (character.class.group == \"rogue\") {\n      character.currency = Dice.roll(\"2d6\") * 10 * 100;\n    } else {\n      character.currency = Dice.roll(\"3d6\") * 10 * 100;\n    }\n\n    character.alignment = RND.item(character.class.allowedAlignments);\n\n    character.thaco = 20;\n    character.bendBarsLiftGates = getBendBarsLiftGates(\n      character.strength,\n      character.exceptionalStrength,\n    );\n    character.bonusSpells = getBonusPriestSpells(character.wisdom);\n    character.chanceOfSpellFailure = getChanceOfSpellFailure(character.wisdom);\n    character.chanceToLearnSpell = getChanceToLearnSpell(character.intelligence);\n    character.damageAdjustment = getDamageAdjustment(\n      character.strength,\n      character.exceptionalStrength,\n    );\n    character.defensiveAdjustment = getDefensiveAdjustment(character.dexterity);\n    character.hitPointAdjustment = getHitPointAdjustment(character.constitution);\n    character.hitProbability = getHitProbability(character.strength, character.exceptionalStrength);\n    character.illusionImmunity = getIllusionImmunity(character.intelligence);\n    character.loyaltyBase = getLoyaltyBase(character.charisma);\n    character.magicalDefenseAdjustment = getMagicalDefenseAdjustment(character.wisdom);\n    character.maximumNumberOfHenchmen = getMaximumNumberOfHenchmen(character.charisma);\n    character.maximumNumberOfSpellsPerLevel = getMaximumNumberOfSpellsPerLevel(\n      character.intelligence,\n    );\n    character.maxPress = getMaxPress(character.strength, character.exceptionalStrength);\n    character.missileAttackAdjustment = getMissileAttackAdjustment(character.dexterity);\n    character.npcReactionAdjustment = getNPCReactionAdjustment(character.charisma);\n    character.numberOfLanguages = getNumberOfLanguages(character.intelligence);\n    character.openDoors = getOpenDoors(character.strength, character.exceptionalStrength);\n    character.poisonSave = getPoisonSave(character.constitution);\n    character.reactionAdjustment = getReactionAdjustment(character.dexterity);\n    character.regeneration = getRegeneration(character.constitution);\n    character.resurrectionSurvival = getResurrectionSurvival(character.constitution);\n    character.spellImmunity = getSpellImmunity(character.wisdom);\n    character.spellLevel = getSpellLevel(character.intelligence);\n    character.systemShock = getSystemShock(character.constitution);\n    character.warriorHitPointAdjustment = getWarriorHitPointAdjustment(character.constitution);\n    character.weightAllowance = getWeightAllowance(\n      character.strength,\n      character.exceptionalStrength,\n    );\n\n    let hitPointAdjustment = character.class.group == \"warrior\"\n      ? character.warriorHitPointAdjustment\n      : character.hitPointAdjustment;\n    character.hp = Dice.roll(character.class.hitDice) + hitPointAdjustment;\n    if (character.hp < 1) {\n      character.hp = 1;\n    }\n\n    character = getSavingThrows(character);\n\n    let allWeapons = Equipment.getWeapons();\n    let possibleWeapons = getPossibleWeapons(character, allWeapons);\n    if (possibleWeapons.length > 0) {\n      let weapon = RND.item(possibleWeapons);\n      character.weapons.push(weapon);\n      character.currency -= weapon.cost;\n    } else {\n      console.debug(\"No weapons available for character\");\n    }\n\n    let allArmor = Equipment.getArmor();\n    let possibleArmor = getPossibleArmor(character, allArmor);\n    if (possibleArmor.length > 0) {\n      let armor = RND.item(possibleArmor);\n      character.armor.push(armor);\n      character.currency -= armor.cost;\n    } else {\n      console.debug(\"No armor available for character\");\n    }\n\n    if (character.class.group == \"priest\") {\n      if (character.currency > 300) {\n        character.currency = random.int(1, 3) * 100;\n      }\n    }\n\n    for (let i = 0; i < character.armor.length; i++) {\n      character.ac += character.armor[i].ac;\n    }\n\n    return character;\n  }\n}\n\nfunction getBendBarsLiftGates(strength: number, exceptionalStrength: number): number {\n  if (strength == 1) {\n    return 0;\n  } else if (strength == 2) {\n    return 0;\n  } else if (strength == 3) {\n    return 0;\n  } else if (strength <= 5) {\n    return 0;\n  } else if (strength <= 7) {\n    return 0;\n  } else if (strength <= 9) {\n    return 1;\n  } else if (strength <= 11) {\n    return 2;\n  } else if (strength <= 13) {\n    return 4;\n  } else if (strength <= 15) {\n    return 7;\n  } else if (strength <= 16) {\n    return 10;\n  } else if (strength <= 17) {\n    return 13;\n  } else if (strength == 18 && exceptionalStrength == -1) {\n    return 16;\n  } else if (strength == 18 && exceptionalStrength <= 50) {\n    return 20;\n  } else if (strength == 18 && exceptionalStrength <= 75) {\n    return 25;\n  } else if (strength == 18 && exceptionalStrength <= 90) {\n    return 30;\n  } else if (strength == 18 && exceptionalStrength <= 99) {\n    return 35;\n  } else if (strength == 18 && exceptionalStrength == 100) {\n    return 40;\n  }\n\n  return 50;\n}\n\nfunction getBonusPriestSpells(wisdom: number): number[] {\n  let table: Record<number, number[]> = {\n    1: [],\n    2: [],\n    3: [],\n    4: [],\n    5: [],\n    6: [],\n    7: [],\n    8: [],\n    9: [0],\n    10: [0],\n    11: [0],\n    12: [0],\n    13: [1],\n    14: [1, 1],\n    15: [1, 1, 2],\n    16: [1, 1, 2, 2],\n    17: [1, 1, 2, 2, 3],\n    18: [1, 1, 2, 2, 3, 4],\n    19: [1, 1, 1, 2, 2, 3, 3, 4],\n    20: [1, 1, 1, 2, 2, 2, 3, 3, 4, 4],\n    21: [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5],\n    22: [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5],\n    23: [1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 6],\n    24: [1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6],\n    25: [1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7],\n  };\n\n  return table[wisdom];\n}\n\nfunction getChanceOfSpellFailure(wisdom: number): number {\n  let table: Record<number, number> = {\n    1: 80,\n    2: 60,\n    3: 50,\n    4: 45,\n    5: 40,\n    6: 35,\n    7: 30,\n    8: 25,\n    9: 20,\n    10: 15,\n    11: 10,\n    12: 5,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 0,\n    25: 0,\n  };\n\n  return table[wisdom];\n}\n\nfunction getChanceToLearnSpell(intelligence: number): number {\n  let table: Record<number, number> = {\n    1: -1,\n    2: -1,\n    3: -1,\n    4: -1,\n    5: -1,\n    6: -1,\n    7: -1,\n    8: -1,\n    9: 35,\n    10: 40,\n    11: 45,\n    12: 50,\n    13: 55,\n    14: 60,\n    15: 65,\n    16: 70,\n    17: 75,\n    18: 85,\n    19: 95,\n    20: 96,\n    21: 97,\n    22: 98,\n    23: 99,\n    24: 100,\n    25: 100,\n  };\n\n  return table[intelligence];\n}\n\nfunction getClass(character: ADNDCharacter, classes: ADNDClass[]): ADNDClass {\n  let options = [];\n\n  for (let i = 0; i < classes.length; i++) {\n    if (\n      character.charisma >= classes[i].minCharisma\n      && character.constitution >= classes[i].minConstitution\n      && character.dexterity >= classes[i].minDexterity\n      && character.intelligence >= classes[i].minIntelligence\n      && character.strength >= classes[i].minStrength\n      && character.wisdom >= classes[i].minWisdom\n    ) {\n      options.push(classes[i]);\n    }\n  }\n\n  return RND.item(options);\n}\n\nfunction getDamageAdjustment(strength: number, exceptionalStrength: number): string {\n  if (strength == 1) {\n    return \"-4\";\n  } else if (strength == 2) {\n    return \"-2\";\n  } else if (strength <= 5) {\n    return \"-1\";\n  } else if (strength >= 16 && strength <= 17) {\n    return \"+1\";\n  } else if (strength == 18 && exceptionalStrength == -1) {\n    return \"+2\";\n  } else if (strength == 18 && exceptionalStrength <= 50) {\n    return \"+3\";\n  } else if (strength == 18 && exceptionalStrength <= 90) {\n    return \"+4\";\n  } else if (strength == 18 && exceptionalStrength <= 99) {\n    return \"+5\";\n  } else if (strength == 18 && exceptionalStrength == 100) {\n    return \"+6\";\n  }\n\n  return \"none\";\n}\n\nfunction getDefensiveAdjustment(dexterity: number): number {\n  if (dexterity == 1) {\n    return 5;\n  } else if (dexterity == 2) {\n    return 5;\n  } else if (dexterity == 3) {\n    return 4;\n  } else if (dexterity == 4) {\n    return 3;\n  } else if (dexterity == 5) {\n    return 2;\n  } else if (dexterity == 6) {\n    return 1;\n  } else if (dexterity == 7) {\n    return 0;\n  } else if (dexterity == 8) {\n    return 0;\n  } else if (dexterity == 9) {\n    return 0;\n  } else if (dexterity <= 14) {\n    return 0;\n  } else if (dexterity == 15) {\n    return -1;\n  } else if (dexterity == 16) {\n    return -2;\n  } else if (dexterity == 17) {\n    return -3;\n  } else if (dexterity == 18) {\n    return -4;\n  } else if (dexterity == 19) {\n    return -4;\n  }\n\n  return -4;\n}\n\nfunction getHitPointAdjustment(constitution: number): number {\n  let table: Record<number, number> = {\n    1: -3,\n    2: -2,\n    3: -2,\n    4: -1,\n    5: -1,\n    6: -1,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 1,\n    16: 2,\n    17: 2,\n    18: 2,\n    19: 2,\n    20: 2,\n  };\n\n  return table[constitution];\n}\n\nfunction getHitProbability(strength: number, exceptionalStrength: number): string {\n  if (strength == 1) {\n    return \"-5\";\n  } else if (strength == 2) {\n    return \"-4\";\n  } else if (strength == 3) {\n    return \"-3\";\n  } else if (strength <= 5) {\n    return \"-2\";\n  } else if (strength <= 7) {\n    return \"-1\";\n  } else if (strength == 17) {\n    return \"+1\";\n  } else if (strength == 18 && exceptionalStrength == -1) {\n    return \"+2\";\n  } else if (strength == 18 && exceptionalStrength <= 50) {\n    return \"+3\";\n  } else if (strength == 18 && exceptionalStrength <= 99) {\n    return \"+4\";\n  } else if (strength == 18 && exceptionalStrength == 100) {\n    return \"+5\";\n  }\n\n  return \"normal\";\n}\n\nfunction getIllusionImmunity(intelligence: number): number {\n  let table: Record<number, number> = {\n    1: -1,\n    2: -1,\n    3: -1,\n    4: -1,\n    5: -1,\n    6: -1,\n    7: -1,\n    8: -1,\n    9: -1,\n    10: -1,\n    11: -1,\n    12: -1,\n    13: -1,\n    14: -1,\n    15: -1,\n    16: -1,\n    17: -1,\n    18: -1,\n    19: 1,\n    20: 2,\n    21: 3,\n    22: 4,\n    23: 5,\n    24: 6,\n    25: 7,\n  };\n\n  return table[intelligence];\n}\n\nfunction getLoyaltyBase(charisma: number): number {\n  let table: Record<number, number> = {\n    1: -8,\n    2: -7,\n    3: -6,\n    4: -5,\n    5: -4,\n    6: -3,\n    7: -2,\n    8: -1,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 1,\n    15: 3,\n    16: 4,\n    17: 6,\n    18: 8,\n    19: 10,\n    20: 12,\n    21: 14,\n    22: 16,\n    23: 18,\n    24: 20,\n    25: 20,\n  };\n\n  return table[charisma];\n}\n\nfunction getMagicalDefenseAdjustment(wisdom: number): number {\n  let table: Record<number, number> = {\n    1: -6,\n    2: -4,\n    3: -3,\n    4: -2,\n    5: -1,\n    6: -1,\n    7: -1,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 1,\n    16: 2,\n    17: 3,\n    18: 4,\n    19: 4,\n    20: 4,\n    21: 4,\n    22: 4,\n    23: 4,\n    24: 4,\n    25: 4,\n  };\n\n  return table[wisdom];\n}\n\nfunction getMaximumNumberOfHenchmen(charisma: number): number {\n  let table: Record<number, number> = {\n    1: 0,\n    2: 1,\n    3: 1,\n    4: 1,\n    5: 2,\n    6: 2,\n    7: 3,\n    8: 3,\n    9: 4,\n    10: 4,\n    11: 4,\n    12: 5,\n    13: 5,\n    14: 6,\n    15: 7,\n    16: 8,\n    17: 10,\n    18: 15,\n    19: 20,\n    20: 25,\n    21: 30,\n    22: 35,\n    23: 40,\n    24: 45,\n    25: 50,\n  };\n\n  return table[charisma];\n}\n\nfunction getMaximumNumberOfSpellsPerLevel(intelligence: number): number {\n  let table: Record<number, number> = {\n    1: -1,\n    2: -1,\n    3: -1,\n    4: -1,\n    5: -1,\n    6: -1,\n    7: -1,\n    8: -1,\n    9: 6,\n    10: 7,\n    11: 7,\n    12: 7,\n    13: 9,\n    14: 9,\n    15: 11,\n    16: 11,\n    17: 14,\n    18: 18,\n    19: 99,\n    20: 99,\n    21: 99,\n    22: 99,\n    23: 99,\n    24: 99,\n    25: 99,\n  };\n\n  return table[intelligence];\n}\n\nfunction getMaxPress(strength: number, exceptionalStrength: number): number {\n  if (strength == 1) {\n    return 3;\n  } else if (strength == 2) {\n    return 5;\n  } else if (strength == 3) {\n    return 10;\n  } else if (strength <= 5) {\n    return 25;\n  } else if (strength <= 7) {\n    return 55;\n  } else if (strength <= 9) {\n    return 90;\n  } else if (strength <= 11) {\n    return 115;\n  } else if (strength <= 13) {\n    return 140;\n  } else if (strength <= 15) {\n    return 170;\n  } else if (strength <= 16) {\n    return 195;\n  } else if (strength <= 17) {\n    return 220;\n  } else if (strength == 18 && exceptionalStrength == -1) {\n    return 255;\n  } else if (strength == 18 && exceptionalStrength <= 50) {\n    return 280;\n  } else if (strength == 18 && exceptionalStrength <= 75) {\n    return 305;\n  } else if (strength == 18 && exceptionalStrength <= 90) {\n    return 330;\n  } else if (strength == 18 && exceptionalStrength <= 99) {\n    return 380;\n  } else if (strength == 18 && exceptionalStrength == 100) {\n    return 480;\n  }\n\n  return 640;\n}\n\nfunction getMissileAttackAdjustment(dexterity: number): number {\n  let table: Record<number, number> = {\n    1: -6,\n    2: -4,\n    3: -3,\n    4: -2,\n    5: -1,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 1,\n    17: 2,\n    18: 2,\n    19: 3,\n    20: 3,\n    21: 4,\n    22: 4,\n    23: 4,\n    24: 5,\n    25: 5,\n  };\n\n  return table[dexterity];\n}\n\nfunction getNPCReactionAdjustment(charisma: number): number {\n  let table: Record<number, number> = {\n    1: -7,\n    2: -6,\n    3: -5,\n    4: -4,\n    5: -3,\n    6: -2,\n    7: -1,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 1,\n    14: 2,\n    15: 3,\n    16: 5,\n    17: 6,\n    18: 7,\n    19: 8,\n    20: 9,\n    21: 10,\n    22: 11,\n    23: 12,\n    24: 13,\n    25: 14,\n  };\n\n  return table[charisma];\n}\n\nfunction getNumberOfLanguages(intelligence: number): number {\n  let table: Record<number, number> = {\n    1: 0,\n    2: 1,\n    3: 1,\n    4: 1,\n    5: 1,\n    6: 1,\n    7: 1,\n    8: 1,\n    9: 2,\n    10: 2,\n    11: 2,\n    12: 3,\n    13: 3,\n    14: 4,\n    15: 4,\n    16: 5,\n    17: 6,\n    18: 7,\n    19: 8,\n    20: 9,\n    21: 10,\n    22: 11,\n    23: 12,\n    24: 15,\n    25: 20,\n  };\n\n  return table[intelligence];\n}\n\nfunction getOpenDoors(strength: number, exceptionalStrength: number): string {\n  if (strength == 1) {\n    return \"1\";\n  } else if (strength == 2) {\n    return \"1\";\n  } else if (strength == 3) {\n    return \"2\";\n  } else if (strength <= 5) {\n    return \"3\";\n  } else if (strength <= 7) {\n    return \"4\";\n  } else if (strength <= 9) {\n    return \"5\";\n  } else if (strength <= 11) {\n    return \"6\";\n  } else if (strength <= 13) {\n    return \"7\";\n  } else if (strength <= 15) {\n    return \"8\";\n  } else if (strength <= 16) {\n    return \"9\";\n  } else if (strength <= 17) {\n    return \"10\";\n  } else if (strength == 18 && exceptionalStrength == -1) {\n    return \"11\";\n  } else if (strength == 18 && exceptionalStrength <= 50) {\n    return \"12\";\n  } else if (strength == 18 && exceptionalStrength <= 75) {\n    return \"13\";\n  } else if (strength == 18 && exceptionalStrength <= 90) {\n    return \"14\";\n  } else if (strength == 18 && exceptionalStrength <= 99) {\n    return \"15 (3)\";\n  } else if (strength == 18 && exceptionalStrength == 100) {\n    return \"16 (6)\";\n  }\n\n  return \"16 (8)\";\n}\n\nfunction getPoisonSave(constitution: number): number {\n  let table: Record<number, number> = {\n    1: -2,\n    2: -1,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 1,\n    20: 1,\n    21: 2,\n    22: 2,\n    23: 3,\n    24: 3,\n    25: 4,\n  };\n\n  return table[constitution];\n}\n\nfunction getPossibleArmor(character: ADNDCharacter, armor: ADNDArmor[]): ADNDArmor[] {\n  let possibleArmor = [];\n  for (let i = 0; i < armor.length; i++) {\n    if (\n      character.class.allowedArmor.includes(\"any\")\n      || character.class.allowedArmor.includes(armor[i].name)\n    ) {\n      if (character.currency >= armor[i].cost) {\n        possibleArmor.push(armor[i]);\n      }\n    }\n  }\n\n  return possibleArmor;\n}\n\nfunction getPossibleWeapons(character: ADNDCharacter, weapons: ADNDWeapon[]): ADNDWeapon[] {\n  let possibleWeapons: ADNDWeapon[] = [];\n\n  for (let weapon of weapons) {\n    if (\n      character.class.allowedWeapons.includes(\"any\")\n      || character.class.allowedWeapons.includes(weapon.name)\n      || (character.class.allowedWeapons.includes(\"bludgeoning\")\n        && weapon.damageType.includes(\"bludgeoning\"))\n    ) {\n      if (character.currency >= weapon.cost) {\n        possibleWeapons.push(weapon);\n      }\n    }\n  }\n\n  return possibleWeapons;\n}\n\nfunction getRace(character: ADNDCharacter, races: ADNDRace[]): ADNDRace {\n  let options = [];\n\n  for (let i = 0; i < races.length; i++) {\n    if (\n      character.charisma >= races[i].minCharisma\n      && character.charisma <= races[i].maxCharisma\n      && character.constitution >= races[i].minConstitution\n      && character.constitution <= races[i].maxConstitution\n      && character.dexterity >= races[i].minDexterity\n      && character.dexterity <= races[i].maxDexterity\n      && character.intelligence >= races[i].minIntelligence\n      && character.intelligence <= races[i].maxIntelligence\n      && character.strength >= races[i].minStrength\n      && character.strength <= races[i].maxStrength\n      && character.wisdom >= races[i].minWisdom\n      && character.wisdom <= races[i].maxWisdom\n    ) {\n      options.push(races[i]);\n    }\n  }\n\n  return RND.item(options);\n}\n\nfunction getReactionAdjustment(dexterity: number): number {\n  let table: Record<number, number> = {\n    1: -6,\n    2: -4,\n    3: -3,\n    4: -2,\n    5: -1,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 1,\n    17: 2,\n    18: 2,\n    19: 3,\n    20: 3,\n    21: 4,\n    22: 4,\n    23: 4,\n    24: 5,\n    25: 5,\n  };\n\n  return table[dexterity];\n}\n\nfunction getRegeneration(constitution: number): string {\n  let table: Record<number, string> = {\n    1: \"nil\",\n    2: \"nil\",\n    3: \"nil\",\n    4: \"nil\",\n    5: \"nil\",\n    6: \"nil\",\n    7: \"nil\",\n    8: \"nil\",\n    9: \"nil\",\n    10: \"nil\",\n    11: \"nil\",\n    12: \"nil\",\n    13: \"nil\",\n    14: \"nil\",\n    15: \"nil\",\n    16: \"nil\",\n    17: \"nil\",\n    18: \"nil\",\n    19: \"nil\",\n    20: \"1/6 turns\",\n    21: \"1/5 turns\",\n    22: \"1/4 turns\",\n    23: \"1/3 turns\",\n    24: \"1/2 turns\",\n    25: \"1/1 turn\",\n  };\n\n  return table[constitution];\n}\n\nfunction getResurrectionSurvival(constitution: number): number {\n  let table: Record<number, number> = {\n    1: 30,\n    2: 35,\n    3: 40,\n    4: 45,\n    5: 50,\n    6: 55,\n    7: 60,\n    8: 65,\n    9: 70,\n    10: 75,\n    11: 80,\n    12: 85,\n    13: 90,\n    14: 92,\n    15: 94,\n    16: 96,\n    17: 98,\n    18: 100,\n    19: 100,\n    20: 100,\n    21: 100,\n    22: 100,\n    23: 100,\n    24: 100,\n    25: 100,\n  };\n\n  return table[constitution];\n}\n\nfunction getSavingThrows(character: ADNDCharacter): ADNDCharacter {\n  let basicSets: Record<string, Record<string, number>> = {\n    priest: {\n      poison: 10,\n      rod: 14,\n      petrification: 13,\n      breath: 16,\n      spell: 15,\n    },\n    rogue: {\n      poison: 13,\n      rod: 14,\n      petrification: 12,\n      breath: 16,\n      spell: 15,\n    },\n    warrior: {\n      poison: 14,\n      rod: 16,\n      petrification: 15,\n      breath: 17,\n      spell: 17,\n    },\n    wizard: {\n      poison: 14,\n      rod: 11,\n      petrification: 13,\n      breath: 15,\n      spell: 12,\n    },\n  };\n\n  let classSet = basicSets[character.class.group];\n\n  character.poisonSavingThrow = classSet.poison + character.poisonSave;\n  character.rodSavingThrow = classSet.rod;\n  character.petrificationSavingThrow = classSet.petrification;\n  character.breathSavingThrow = classSet.breath;\n  character.spellSavingThrow = classSet.spell;\n\n  let conMods: Record<number, number> = {\n    3: 0,\n    4: 1,\n    5: 1,\n    6: 1,\n    7: 2,\n    8: 2,\n    9: 2,\n    10: 2,\n    11: 3,\n    12: 3,\n    13: 3,\n    14: 4,\n    15: 4,\n    16: 4,\n    17: 4,\n    18: 5,\n    19: 5,\n  };\n\n  if (\n    character.race.name == \"dwarf\"\n    || character.race.name == \"gnome\"\n    || character.race.name == \"halfling\"\n  ) {\n    let conMod = conMods[character.constitution];\n    character.rodSavingThrow += conMod;\n    character.spellSavingThrow += conMod;\n\n    if (character.race.name == \"dwarf\" || character.race.name == \"halfling\") {\n      character.poisonSavingThrow += conMod;\n    }\n  }\n\n  return character;\n}\n\nfunction getSpellImmunity(wisdom: number): string[] {\n  let table: Record<number, string[]> = {\n    1: [],\n    2: [],\n    3: [],\n    4: [],\n    5: [],\n    6: [],\n    7: [],\n    8: [],\n    9: [],\n    10: [],\n    11: [],\n    12: [],\n    13: [],\n    14: [],\n    15: [],\n    16: [],\n    17: [],\n    18: [],\n    19: [\"cause fear\", \"charm person\", \"command\", \"friends\", \"hypnotism\"],\n    20: [\n      \"cause fear\",\n      \"charm person\",\n      \"command\",\n      \"friends\",\n      \"hypnotism\",\n      \"forget\",\n      \"hold person\",\n      \"ray of enfeeblment\",\n      \"scare\",\n    ],\n    21: [\n      \"cause fear\",\n      \"charm person\",\n      \"command\",\n      \"friends\",\n      \"hypnotism\",\n      \"forget\",\n      \"hold person\",\n      \"ray of enfeeblment\",\n      \"scare\",\n      \"fear\",\n    ],\n    22: [\n      \"cause fear\",\n      \"charm person\",\n      \"command\",\n      \"friends\",\n      \"hypnotism\",\n      \"forget\",\n      \"hold person\",\n      \"ray of enfeeblment\",\n      \"scare\",\n      \"fear\",\n      \"charm monster\",\n      \"confusion\",\n      \"emotion\",\n      \"fumble\",\n      \"suggestion\",\n    ],\n    23: [\n      \"cause fear\",\n      \"charm person\",\n      \"command\",\n      \"friends\",\n      \"hypnotism\",\n      \"forget\",\n      \"hold person\",\n      \"ray of enfeeblment\",\n      \"scare\",\n      \"fear\",\n      \"charm monster\",\n      \"confusion\",\n      \"emotion\",\n      \"fumble\",\n      \"suggestion\",\n      \"chaos\",\n      \"feeblemind\",\n      \"hold monster\",\n      \"magic jar\",\n      \"quest\",\n    ],\n    24: [\n      \"cause fear\",\n      \"charm person\",\n      \"command\",\n      \"friends\",\n      \"hypnotism\",\n      \"forget\",\n      \"hold person\",\n      \"ray of enfeeblment\",\n      \"scare\",\n      \"fear\",\n      \"charm monster\",\n      \"confusion\",\n      \"emotion\",\n      \"fumble\",\n      \"suggestion\",\n      \"chaos\",\n      \"feeblemind\",\n      \"hold monster\",\n      \"magic jar\",\n      \"quest\",\n      \"geas\",\n      \"mass suggestion\",\n      \"rod of rulership\",\n    ],\n    25: [\n      \"cause fear\",\n      \"charm person\",\n      \"command\",\n      \"friends\",\n      \"hypnotism\",\n      \"forget\",\n      \"hold person\",\n      \"ray of enfeeblment\",\n      \"scare\",\n      \"fear\",\n      \"charm monster\",\n      \"confusion\",\n      \"emotion\",\n      \"fumble\",\n      \"suggestion\",\n      \"chaos\",\n      \"feeblemind\",\n      \"hold monster\",\n      \"magic jar\",\n      \"quest\",\n      \"geas\",\n      \"mass suggestion\",\n      \"rod of rulership\",\n      \"antipathy/sympathy\",\n      \"death spell\",\n      \"mass charm\",\n    ],\n  };\n\n  return table[wisdom];\n}\n\nfunction getSpellLevel(intelligence: number): number {\n  let table: Record<number, number> = {\n    1: -1,\n    2: -1,\n    3: -1,\n    4: -1,\n    5: -1,\n    6: -1,\n    7: -1,\n    8: -1,\n    9: 4,\n    10: 5,\n    11: 5,\n    12: 6,\n    13: 6,\n    14: 7,\n    15: 7,\n    16: 8,\n    17: 8,\n    18: 9,\n    19: 9,\n    20: 9,\n    21: 9,\n    22: 9,\n    23: 9,\n    24: 9,\n    25: 9,\n  };\n\n  return table[intelligence];\n}\n\nfunction getSystemShock(constitution: number): number {\n  let table: Record<number, number> = {\n    1: 25,\n    2: 30,\n    3: 35,\n    4: 40,\n    5: 45,\n    6: 50,\n    7: 55,\n    8: 60,\n    9: 65,\n    10: 70,\n    11: 75,\n    12: 80,\n    13: 85,\n    14: 88,\n    15: 90,\n    16: 95,\n    17: 97,\n    18: 99,\n    19: 99,\n    20: 99,\n    21: 99,\n    22: 99,\n    23: 99,\n    24: 99,\n    25: 100,\n  };\n\n  return table[constitution];\n}\n\nfunction getWarriorHitPointAdjustment(constitution: number): number {\n  let table: Record<number, number> = {\n    1: -3,\n    2: -2,\n    3: -2,\n    4: -1,\n    5: -1,\n    6: -1,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 1,\n    16: 2,\n    17: 3,\n    18: 4,\n    19: 5,\n    20: 5,\n  };\n\n  return table[constitution];\n}\n\nfunction getWeightAllowance(strength: number, exceptionalStrength: number): number {\n  if (strength == 1) {\n    return 1;\n  } else if (strength == 2) {\n    return 1;\n  } else if (strength == 3) {\n    return 5;\n  } else if (strength <= 5) {\n    return 10;\n  } else if (strength <= 7) {\n    return 20;\n  } else if (strength <= 9) {\n    return 35;\n  } else if (strength <= 11) {\n    return 40;\n  } else if (strength <= 13) {\n    return 45;\n  } else if (strength <= 15) {\n    return 55;\n  } else if (strength <= 16) {\n    return 70;\n  } else if (strength <= 17) {\n    return 85;\n  } else if (strength == 18 && exceptionalStrength == -1) {\n    return 110;\n  } else if (strength == 18 && exceptionalStrength <= 50) {\n    return 135;\n  } else if (strength == 18 && exceptionalStrength <= 75) {\n    return 160;\n  } else if (strength == 18 && exceptionalStrength <= 90) {\n    return 185;\n  } else if (strength == 18 && exceptionalStrength <= 99) {\n    return 235;\n  } else if (strength == 18 && exceptionalStrength == 100) {\n    return 335;\n  }\n\n  return 485;\n}\n","<script lang=\"ts\">\n  import * as RND from \"@ironarachne/rng\";\n  import * as Currency from '$lib/currency/currency';\n\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n  import ADNDCharacterGenerator from \"$lib/adnd/adndcharactergenerator\";\n  import ADNDCharacterGeneratorConfig from \"$lib/adnd/adndcharactergeneratorconfig\";\n  import * as Words from '@ironarachne/words';\n  import type ADNDCharacter from \"$lib/adnd/adndcharacter\";\n\n  let seed = RND.randomString(13);\n  let genConfig;\n  let charGen;\n  let character: ADNDCharacter;\n\n  function generate() {\n    random.use(seedrandom(seed));\n\n    genConfig = new ADNDCharacterGeneratorConfig();\n    charGen = new ADNDCharacterGenerator();\n    charGen.config = genConfig;\n    character = charGen.generateCharacter();\n  }\n\n  function getEStrength(exStr: number) {\n    let estr = String(exStr).padStart(2, '0');\n    return estr.substring(estr.length - 2);\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n\n  newSeed();\n</script>\n\n<svelte:head>\n  <title>AD&amp;D 2e Character Generator | Iron Arachne</title>\n</svelte:head>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/fantasy.scss';\n</style>\n\n<section class=\"fantasy main\">\n  <h1>AD&amp;D 2e Character Generator</h1>\n\n  <p>This is an AD&amp;D 2e character generator.</p>\n\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\"/>\n  </div>\n\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n\n  <h2>{ character.firstName } { character.lastName }</h2>\n\n  <p>A level { character.level } { character.race.name } { character.class.name }</p>\n\n  <p><strong>XP:</strong> { character.xp }</p>\n  <p><strong>HP:</strong> { character.hp }</p>\n  <p><strong>AC:</strong> { character.ac }</p>\n  <p><strong>THAC0:</strong> { character.thaco }</p>\n  <p><strong>Alignment:</strong> { character.alignment }</p>\n  <p><strong>Currency:</strong> { Currency.valueToCoins(character.currency, false, false) }</p>\n\n  <h3>Attributes</h3>\n\n  <p><strong>Strength:</strong> { character.strength }{#if character.exceptionalStrength != -1 }/{ getEStrength(character.exceptionalStrength) }{/if}</p>\n  <p><strong>Dexterity:</strong> { character.dexterity }</p>\n  <p><strong>Constitution:</strong> { character.constitution }</p>\n  <p><strong>Charisma:</strong> { character.charisma }</p>\n  <p><strong>Intelligence:</strong> { character.intelligence }</p>\n  <p><strong>Wisdom:</strong> { character.wisdom }</p>\n\n  <h3>Saving Throws</h3>\n\n  <p><strong>Paralyzation, Poison, or Death Magic:</strong> { character.poisonSavingThrow }</p>\n  <p><strong>Rod, Staff, or Wand:</strong> { character.rodSavingThrow }</p>\n  <p><strong>Petrification or Polymorph:</strong> { character.petrificationSavingThrow }</p>\n  <p><strong>Breath Weapon:</strong> { character.breathSavingThrow }</p>\n  <p><strong>Spell:</strong> { character.spellSavingThrow }</p>\n\n  <h3>Derived Stats</h3>\n\n  <p><strong>Hit Probability:</strong> { character.hitProbability }</p>\n  <p><strong>Damage Adjustment:</strong> { character.damageAdjustment }</p>\n  <p><strong>Weight Allowance:</strong> { character.weightAllowance }</p>\n  <p><strong>Maximum Press:</strong> { character.maxPress }</p>\n  <p><strong>Open Doors:</strong> { character.openDoors }</p>\n  <p><strong>Bend Bars/Lift Gates:</strong> { character.bendBarsLiftGates }%</p>\n  <p><strong>Reaction Adjustment:</strong> { character.reactionAdjustment > 0 ? `+${character.reactionAdjustment}` : character.reactionAdjustment }</p>\n  <p><strong>Missile Attack Adjustment:</strong> { character.missileAttackAdjustment > 0 ? `+${character.missileAttackAdjustment}` : character.missileAttackAdjustment }</p>\n  <p><strong>Defensive Adjustment:</strong> { character.defensiveAdjustment > 0 ? `+${character.defensiveAdjustment}` : character.defensiveAdjustment }</p>\n  <p><strong>Hit Point Adjustment:</strong> </p>\n  <p><strong>System Shock: </strong> { character.systemShock }%</p>\n  <p><strong>Resurrection Survival: </strong> { character.resurrectionSurvival }%</p>\n  <p><strong>Poison Save:</strong> { character.poisonSave > 0 ? `+${character.poisonSave}` : character.poisonSave }</p>\n  <p><strong>Regeneration:</strong> { character.regeneration }</p>\n  <p><strong>Number of Languages:</strong> { character.numberOfLanguages }</p>\n  <p><strong>Spell Level:</strong> { character.spellLevel == -1 ? 'N/A' : `${character.spellLevel}${Words.getOrdinal(character.spellLevel)}` }</p>\n  <p><strong>Chance To Learn Spell:</strong> { character.chanceToLearnSpell == -1 ? 'N/A' : `${character.chanceToLearnSpell}%`}</p>\n  <p><strong>Maximum Number of Spells Per Level:</strong> { character.maximumNumberOfSpellsPerLevel == -1 ? 'N/A' : character.maximumNumberOfSpellsPerLevel == 99 ? 'All': character.maximumNumberOfSpellsPerLevel }</p>\n  <p><strong>Illusion Immunity:</strong> { character.illusionImmunity == -1 ? 'N/A' : `${character.illusionImmunity}${Words.getOrdinal(character.illusionImmunity)}-level`}</p>\n  <p><strong>Magical Defense Adjustment:</strong> { character.magicalDefenseAdjustment > 0 ? `+${character.magicalDefenseAdjustment}` : character.magicalDefenseAdjustment }</p>\n  <p><strong>Bonus Priest Spells:</strong> { character.bonusSpells.length == 0 ? 'N/A' : character.bonusSpells[0] == 0 ? '0' : character.bonusSpells.join(', ') }</p>\n  <p><strong>Chance of Spell Failure:</strong> { character.chanceOfSpellFailure }%</p>\n  <p><strong>Spell Immunity:</strong> { character.spellImmunity.length == 0 ? 'N/A' : character.spellImmunity.join(', ') }</p>\n  <p><strong>Maximum Number of Henchmen:</strong> { character.maximumNumberOfHenchmen }</p>\n  <p><strong>Loyalty Base:</strong> { character.loyaltyBase > 0 ? `+${character.loyaltyBase}` : character.loyaltyBase }</p>\n  <p><strong>Reaction Adjustment (NPCs):</strong> { character.npcReactionAdjustment > 0 ? `+${character.npcReactionAdjustment}` : character.npcReactionAdjustment }</p>\n\n  <h3>Weapons</h3>\n\n  <table>\n    <thead>\n      <tr>\n        <th>Weapon</th>\n        <th>Damage Type</th>\n        <th>Damage (SM/L)</th>\n        <th>Spd. Factor</th>\n      </tr>\n    </thead>\n    <tbody>\n      {#each character.weapons as weapon}\n        <tr>\n          <td>{ weapon.name }</td>\n          <td>{ weapon.damageType }</td>\n          <td>{ weapon.damageSM }/{ weapon.damageL }</td>\n          <td>{ weapon.speedFactor }</td>\n        </tr>\n      {/each}\n    </tbody>\n  </table>\n\n  <h3>Armor</h3>\n\n  {#each character.armor as armor}\n    <p>{ armor.name }</p>\n  {/each}\n\n  <h3>Abilities</h3>\n\n  {#each character.abilities as ability}\n    <p>{ ability }</p>\n  {/each}\n\n  {#if character.spells.length > 0}\n  <h3>Spells</h3>\n\n  {#each character.spells as spell}\n    <p>{ spell.name }</p>\n  {/each}\n  {/if}\n\n</section>\n"],"names":["ADNDArmor","name","ac","weight","cost","__publicField","SpellFilter","level","casterClass","requiredTags","bannedTags","ADNDClass","group","hitDice","minStrength","minDexterity","minConstitution","minIntelligence","minWisdom","minCharisma","primeRequisites","abilities","allowedAlignments","hasSpells","allowedSpellTypes","spellList","allowedWeapons","allowedArmor","initialWP","initialNWP","wpPenalty","apply","ADNDRace","adjective","maxStrength","maxDexterity","maxConstitution","maxIntelligence","maxWisdom","maxCharisma","baseHeightMale","baseHeightFemale","baseWeightMale","baseWeightFemale","heightModifier","weightModifier","baseAge","baseMovement","ageModifier","availableInitialLanguages","allowedClasses","ADNDSpell","tags","ADNDWeapon","size","damageType","speedFactor","damageSM","damageL","category","usesAmmo","ADNDCharacter","getFilteredSpells","filter","spells","result","i","meetsLevelCriterion","meetsClassCriterion","meetsBannedTagsCriterion","meetsRequiredTagsCriterion","countOfBannedTags","j","getAll","abjurer","character","allSpells","Spells.getAll","filteredSpells","Spells.getFilteredSpells","RND.shuffle","distributePoints","skillList","extraPoints","skillIndex","random","skill","cap","points","modifyForDexterity","dexterity","dexterityAdjustments","modifyForRace","raceName","racialAdjustments","bard","skills","ThiefSkills.modifyForDexterity","ThiefSkills.modifyForRace","ThiefSkills.distributePoints","cleric","filteredSpell","conjurer","diviner","druid","enchanter","fighter","illusionist","invoker","mage","necromancer","paladin","ranger","thief","transmuter","dwarf","elf","gnome","halfelf","halfling","halflingType","RND.item","RND.simple","human","ADNDCharacterGeneratorConfig","races.getAll","classes.getAll","getArmor","getWeapons","ADNDCharacterGenerator","Dice.roll","getRace","getClass","getBendBarsLiftGates","getBonusPriestSpells","getChanceOfSpellFailure","getChanceToLearnSpell","getDamageAdjustment","getDefensiveAdjustment","getHitPointAdjustment","getHitProbability","getIllusionImmunity","getLoyaltyBase","getMagicalDefenseAdjustment","getMaximumNumberOfHenchmen","getMaximumNumberOfSpellsPerLevel","getMaxPress","getMissileAttackAdjustment","getNPCReactionAdjustment","getNumberOfLanguages","getOpenDoors","getPoisonSave","getReactionAdjustment","getRegeneration","getResurrectionSurvival","getSpellImmunity","getSpellLevel","getSystemShock","getWarriorHitPointAdjustment","getWeightAllowance","hitPointAdjustment","getSavingThrows","allWeapons","Equipment.getWeapons","possibleWeapons","getPossibleWeapons","weapon","allArmor","Equipment.getArmor","possibleArmor","getPossibleArmor","armor","strength","exceptionalStrength","wisdom","intelligence","classes","options","constitution","charisma","weapons","races","classSet","conMods","conMod","getEStrength","ctx","set_data","t1","t1_value","t0_value","t2_value","t4_value","t6_value","t8_value","insert_hydration","target","tr","anchor","append_hydration","td0","td1","td2","td3","dirty","t0","t2","t4","t6","t8","t_value","p","t","each_value","ensure_array_like","h3","t12_value","t14_value","t17_value","t25_value","t29_value","t33_value","t37_value","t41_value","Currency.valueToCoins","t51_value","t55_value","t59_value","t63_value","t67_value","t71_value","t77_value","t81_value","t85_value","t89_value","t93_value","t99_value","t103_value","t107_value","t111_value","t115_value","t119_value","t138_value","t143_value","t152_value","t156_value","Words.getOrdinal","t180_value","t184_value","t189_value","t193_value","create_if_block_1","each_value_3","each_value_2","each_value_1","if_block1","create_if_block","section","h1","p0","div","label","input","button0","button1","h2","p1","p2","strong0","p3","strong1","p4","strong2","p5","strong3","p6","strong4","p7","strong5","h30","p8","strong6","p9","strong7","p10","strong8","p11","strong9","p12","strong10","p13","strong11","h31","p14","strong12","p15","strong13","p16","strong14","p17","strong15","p18","strong16","h32","p19","strong17","p20","strong18","p21","strong19","p22","strong20","p23","strong21","p24","strong22","p25","strong23","p26","strong24","p27","strong25","p28","p29","strong27","p30","strong28","p31","strong29","p32","strong30","p33","strong31","p34","strong32","p35","strong33","p36","strong34","p37","strong35","p38","strong36","p39","strong37","p40","strong38","p41","strong39","p42","strong40","p43","strong41","p44","strong42","h33","table","thead","tbody","h34","h35","t12","t14","t17","t19","t19_value","t21","t21_value","t25","t29","t33","t37","t41","t45","t45_value","t51","t55","t59","t63","t67","t71","t77","t81","t85","t89","t93","t99","t103","t107","t111","t115","t119","t124","t124_value","t128","t128_value","t132","t132_value","t138","t143","t148","t148_value","t152","t156","t160","t160_value","t164","t164_value","t168","t168_value","t172","t172_value","t176","t176_value","t180","t184","t189","t193","t197","t197_value","t201","t201_value","exStr","estr","seed","RND.randomString","genConfig","charGen","generate","seedrandom","$$invalidate","newSeed"],"mappings":"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A,EACA,GAAA,CAAA,EACA,GAAA,CAAA,EACA,GAAA,CAAA,EACA,GAAA,CAAA,EACA,GAAA,CAAA,aAAA,eAAA,UAAA,UAAA,WAAA,EAC+D,GAAA,CAChE,aACF,eACA,UACA,UACA,YACA,SACA,cACA,qBACA,OACA,EACF,GAAA,CACI,aACF,eACA,UACA,UACA,YACA,SACA,cACA,qBACA,QACA,MACA,EACF,GAAA,CACI,aACF,eACA,UACA,UACA,YACA,SACA,cACA,qBACA,QACA,OACA,gBACA,YACA,UACA,SACA,YACA,EACF,GAAA,CACI,aACF,eACA,UACA,UACA,YACA,SACA,cACA,qBACA,QACA,OACA,gBACA,YACA,UACA,SACA,aACA,QACA,aACA,eACA,YACA,OACA,EACF,GAAA,CACI,aACF,eACA,UACA,UACA,YACA,SACA,cACA,qBACA,QACA,OACA,gBACA,YACA,UACA,SACA,aACA,QACA,aACA,eACA,YACA,QACA,OACA,kBACA,kBACA,EACF,GAAA,CACI,aACF,eACA,UACA,UACA,YACA,SACA,cACA,qBACA,QACA,OACA,gBACA,YACA,UACA,SACA,aACA,QACA,aACA,eACA,YACA,QACA,OACA,kBACA,mBACA,qBACA,cACA,YACA,CACF,EAGFA,CAAA,CACF,CAEA,SAAAlB,GAAAmB,EAAA,CA6BE,MA5BA,CAAoC,EAAA,GAC/B,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,EACA,GAAA,EACC,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,CACA,EAGNA,CAAA,CACF,CAEA,SAAAlB,GAAAqB,EAAA,CA6BE,MA5BA,CAAoC,EAAA,GAC/B,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,GAAA,GACC,GAA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"}