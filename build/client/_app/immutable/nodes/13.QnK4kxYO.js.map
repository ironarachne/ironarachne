{"version":3,"file":"13.QnK4kxYO.js","sources":["../../../../../../src/lib/equipment/equipment.ts","../../../../../../src/lib/equipment/stocklist.ts","../../../../../../src/lib/merchant.ts","../../../../../../src/routes/fantasy/merchant/+page.svelte"],"sourcesContent":["import * as RND from \"@ironarachne/rng\";\nimport Component from \"./components/component.js\";\nimport type Item from \"./item.js\";\nimport * as Patterns from \"./patterns/patterns.js\";\n\nexport function generate(\n  category: string,\n  components: Component[],\n  amount: number,\n  valueThreshold: number,\n): Item[] {\n  let result = [];\n  let patterns = [];\n\n  if (category == \"general\") {\n    patterns = Patterns.all();\n  } else {\n    patterns = Patterns.forCategory(category);\n  }\n\n  for (let i = 0; i < amount; i++) {\n    let pattern = RND.item(patterns);\n    let item = pattern.complete(components, valueThreshold);\n    result.push(item);\n  }\n\n  return result;\n}\n","import * as Components from \"./components/components.js\";\nimport * as Equipment from \"./equipment.js\";\nimport type Item from \"./item.js\";\n\nexport function getList(category: string, amount: number, valueThreshold: number): Item[] {\n  let components = Components.all();\n\n  let items = Equipment.generate(category, components, amount, valueThreshold);\n\n  return items;\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport type Character from \"./characters/character.js\";\nimport * as Characters from \"./characters/characters.js\";\nimport type Item from \"./equipment/item.js\";\nimport * as StockList from \"./equipment/stocklist.js\";\n\nexport class Merchant {\n  character: Character;\n  description: string;\n  wares: Item[];\n  priceVariance: number;\n\n  constructor(character: Character, description: string, wares: Item[], priceVariance: number) {\n    this.character = character;\n    this.description = description;\n    this.wares = wares;\n    this.priceVariance = priceVariance;\n  }\n}\n\nexport function generate(itemCategory: string, valueThreshold: number): Merchant {\n  let charGenConfig = Characters.getDefaultCharacterGeneratorConfig();\n  charGenConfig.ageCategoryNames = [\"adult\"];\n\n  let character = Characters.generate(charGenConfig);\n  let description = RND.item([\n    `${character.firstName} ${character.lastName} is ${\n      Words.article(\n        itemCategory,\n      )\n    } ${itemCategory} merchant.`,\n    `${character.firstName} ${character.lastName}, ${\n      Words.article(character.species.name)\n    } ${character.species.name} ${character.ageCategory.noun}, is ${\n      Words.article(itemCategory)\n    } ${itemCategory} merchant.`,\n  ]);\n  let wares = StockList.getList(itemCategory, 10, valueThreshold);\n  let priceVariance = random.float(0.8, 1.2);\n  if (priceVariance > 1.0) {\n    description += \" \" + Words.capitalize(character.gender.pronouns.subjective) + \" charges more than others.\";\n  } else if (priceVariance < 1.0) {\n    description += \" \" + Words.capitalize(character.gender.pronouns.subjective) + \" charges less than others.\";\n  }\n\n  return new Merchant(character, description, wares, priceVariance);\n}\n","<script lang=\"ts\">\n  import * as Currency from \"$lib/currency\";\n  import * as Merchant from \"$lib/merchant\";\n  import * as RND from \"@ironarachne/rng\";\n  import * as Words from \"@ironarachne/words\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n\n  let category = 'general';\n  let valueThreshold = 50;\n  let categories = [\n    'armor',\n    'clothing',\n    'general',\n    'weapon',\n  ];\n  let merchant = Merchant.generate(category, valueThreshold);\n  let seed = RND.randomString(13);\n\n  function generate() {\n    random.use(seedrandom(seed));\n\n    merchant = Merchant.generate(category, valueThreshold);\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/fantasy.scss';\n</style>\n\n<svelte:head>\n  <title>Fantasy Merchant Generator | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"fantasy main\">\n  <h1>Fantasy Merchant Generator</h1>\n\n  <p>This generates a fantasy merchant and a list of their wares.</p>\n\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\"/>\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"value\">Material Rarity Threshold</label>\n    <select name=\"value\" bind:value={valueThreshold}>\n      <option value=\"50\">Common</option>\n      <option value=\"100\">Rare</option>\n      <option value=\"10000\">Legendary</option>\n    </select>\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"value\">Type of Goods</label>\n    <select name=\"value\" bind:value={category}>\n      {#each categories as cat}\n      <option>{cat}</option>\n      {/each}\n    </select>\n  </div>\n\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n\n  <p>{ merchant.description } { Words.capitalize(merchant.character.gender.possessivePronoun) } wares include:</p>\n\n  <h2>Stock List</h2>\n\n  {#each merchant.wares as item}\n    <h4>{Words.capitalize(item.name)}</h4>\n    <p>{Words.capitalize(item.description)}.</p>\n    <p><strong>Cost:</strong> {Currency.convertCopper(Math.floor(item.value * merchant.priceVariance), false, false, false)}</p>\n  {/each}\n</section>\n"],"names":["generate","category","components","amount","valueThreshold","result","patterns","Patterns.all","Patterns.forCategory","i","item","RND.item","getList","Components.all","Equipment.generate","Merchant","character","description","wares","priceVariance","__publicField","itemCategory","charGenConfig","Characters.getDefaultCharacterGeneratorConfig","Characters.generate","Words.article","StockList.getList","random","Words.capitalize","ctx","insert_hydration","target","option","anchor","t0_value","t2_value","t7_value","Currency.convertCopper","h4","p0","p1","append_hydration","strong","dirty","set_data","t0","t2","t7","t21_value","each_value","ensure_array_like","add_render_callback","select0","select1","section","h1","div0","label0","input","div1","label1","option0","option1","option2","div2","label2","button0","button1","h2","t21","t23","t23_value","categories","merchant","Merchant.generate","seed","RND.randomString","seedrandom","newSeed","select_value"],"mappings":"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"}