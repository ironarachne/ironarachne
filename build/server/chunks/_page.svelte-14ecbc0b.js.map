{"version":3,"file":"_page.svelte-14ecbc0b.js","sources":["../../../../src/routes/star-nation/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import * as RND from \"@ironarachne/rng\";\n  import * as Words from \"@ironarachne/words\";\n  import * as WebGLStarRenderer from \"$lib/renderers/stars/webgl_star_renderer\";\n  import * as WebGLPlanetRenderer from \"$lib/renderers/planets/webgl_planet_renderer\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n  import type StarNation from \"$lib/starnations/star_nation\";\n  import StarNationGenerator from \"$lib/starnations/generator\";\n  import StarNationGeneratorConfig from \"$lib/starnations/generatorconfig\";\n  import { onMount } from \"svelte\";\n\n  let config: StarNationGeneratorConfig;\n  let gen: StarNationGenerator;\n  let nation: StarNation;\n\n  let seed = RND.randomString(13);\n\n  const imageWidth = 64;\n  const imageHeight = 64;\n\n  function generate() {\n    random.use(seedrandom(seed));\n    nation = gen.generate();\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n\n  onMount(() => {\n    config = new StarNationGeneratorConfig();\n    gen = new StarNationGenerator(config);\n    newSeed();\n  });\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/scifi.scss';\n\n  .star-system { display: flex; width: 100%; flex-wrap: wrap; }\n</style>\n\n<svelte:head>\n  <title>Star Nation Generator | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"scifi main\">\n  <h1>Star Nation Generator</h1>\n\n  <p>Generate a star nation.</p>\n\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\"/>\n  </div>\n\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n\n  {#if nation }\n  <h2>{ nation.name }</h2>\n\n  <p>{ nation.description }</p>\n\n  <p>Their primary goal is { nation.primaryGoal }.</p>\n\n  <p><strong>Culture:</strong> {nation.culture}</p>\n  <p><strong>Economy:</strong> {nation.economy}</p>\n  <p><strong>Military:</strong> { nation.military }</p>\n  <p><strong>Technology:</strong> { nation.technology }</p>\n\n  <h3>The { nation.systems[nation.capitalSystem].name } System</h3>\n\n  <p>{ nation.systems[nation.capitalSystem].planets[nation.capitalPlanet].name } is the { nation.capitalPlanet + 1}{ Words.getOrdinal(nation.capitalPlanet + 1) } planet in this system. It has a population of { nation.systems[nation.capitalSystem].planets[nation.capitalPlanet].populationFriendly }.</p>\n\n  <div class=\"star-system\">\n    <div class=\"image-container\">\n      <img alt=\"{ nation.systems[nation.capitalSystem].stars[0].name } image\" src=\"{ WebGLStarRenderer.render(nation.systems[nation.capitalSystem].stars[0], imageWidth, imageHeight) }\" />\n    </div>\n    {#each nation.systems[nation.capitalSystem].planets as planet}\n    <div class=\"image-container\">\n      <img alt=\"{ planet.name } image\" src=\"{ WebGLPlanetRenderer.render(planet, imageWidth, imageHeight) }\" />\n    </div>\n    {/each}\n  </div>\n  {/if}\n</section>\n"],"names":[],"mappings":";;;;;;;;;;;;AAgBA,EAAA,IAAM,IAAN,GAAa,GAAb,CAAiB,YAAjB,CAA8B,EAAE,CAAhC,CAAA;;AA0C+C,EAA/C,OAA+C,CAA/C,EAA+C,QAA/C,CAA+C,IAA/C,IAA+C,CAA/C,kCAAA,EAA+C,QAA/C,CAA+C,KAA/C,GAA+C,CAA/C,mDAAA,CAAA,EAA+C,EAAA,CAA/C,gCAAA,CAAA,EAA+C,EAAA,CAA/C,yZAAA,EAA+C,aAA/C,CAA+C,OAA/C,EAA+C,IAA/C,EAAA,CAAA,CAAA,CAAA,oMAAA,EAAA,CAAA,CAAA,CAAA,UAAA,CAAA,CAAA;;;;;"}