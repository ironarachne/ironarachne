{"version":3,"file":"_page.svelte-ZvgNpwNh.js","sources":["../../../../src/routes/swn/starship/+page.svelte","../../../../src/lib/swn/starship.ts"],"sourcesContent":["<script lang=\"ts\">\n  import * as Gen from \"$lib/swn/starship\";\n  import * as RND from \"@ironarachne/rng\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n\n  let seed = RND.randomString(13);\n  random.use(seedrandom(seed));\n  let starship = Gen.generate();\n\n  function generate() {\n    random.use(seedrandom(seed));\n    starship = Gen.generate();\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n\n  function save() {\n    let starshipDescription = Gen.formatAsText(starship);\n\n    const blob = new Blob([starshipDescription], { type: \"text/plain\" });\n    const link = document.createElement(\"a\");\n    link.href = window.URL.createObjectURL(blob);\n    link.download = \"swn-starship.txt\";\n    link.click();\n    URL.revokeObjectURL(link.href);\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/scifi.scss';\n</style>\n\n<svelte:head>\n  <title>Stars Without Number Starship Generator | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"main scifi\">\n  <h1>Stars Without Number Starship Generator</h1>\n\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\" />\n  </div>\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n  <button on:click={save}>Save</button>\n\n  <h2>{starship.name}</h2>\n\n  <p><strong>Owner Type:</strong> {starship.ownerType.name}</p>\n  <p><strong>Manufacturer:</strong> {starship.manufacturer}</p>\n  <p><strong>Model:</strong> {starship.className}</p>\n  <p><strong>Hull Type:</strong> {starship.hullType.name}</p>\n  <p><strong>Hull Class:</strong> {starship.hullType.hullClassName}</p>\n  <p><strong>Drive:</strong> {starship.drive.name}</p>\n  <p>\n    <strong>Mass:</strong>\n    {starship.usedMass}/{starship.hullType.mass}\n    ({starship.hullType.mass - starship.usedMass} free)\n  </p>\n  <p>\n    <strong>Power:</strong>\n    {starship.usedPower}/{starship.hullType.power}\n    ({starship.hullType.power - starship.usedPower} free)\n  </p>\n  <p>\n    <strong>Hardpoints:</strong>\n    {starship.usedHardPoints}/{starship.hullType.hardPoints}\n    ({starship.hullType.hardPoints - starship.usedHardPoints} free)\n  </p>\n  <p><strong>Speed:</strong> {starship.hullType.speed}</p>\n  <p><strong>Armor:</strong> {starship.hullType.armor}</p>\n  <p><strong>AC:</strong> {starship.hullType.ac}</p>\n  <p><strong>HP:</strong> {starship.hullType.hp}</p>\n  <p><strong>Minimum Crew:</strong> {starship.hullType.crewMinimum}</p>\n  <p><strong>Maximum Crew:</strong> {starship.hullType.crewMaximum}</p>\n  <p><strong>Current Crew:</strong> {starship.currentCrew}</p>\n  <p>\n    <strong>Total Ship Value:</strong>\n    {new Intl.NumberFormat(\"en-US\").format(starship.totalCost)} credits\n  </p>\n  <p>\n    <strong>Total Crew Cost:</strong>\n    {new Intl.NumberFormat(\"en-US\").format(starship.currentCrew * 43800)}\n    credits per year\n  </p>\n  <p><strong>Crew Skill:</strong> {starship.hullType.crewSkill}</p>\n  <p><strong>Cargo Space:</strong> {starship.tonsOfCargo} tons</p>\n\n  <h4>Fittings</h4>\n\n  {#each starship.fittings as fitting}\n    <div>\n      {fitting.name} - {fitting.effect}\n    </div>\n  {/each}\n\n  <h4>Weapons</h4>\n\n  {#each starship.weapons as weapon}\n    <div>\n      {weapon.name} ({weapon.damage}, {weapon.qualities.join(\", \")})\n    </div>\n  {/each}\n\n  <h4>Defenses</h4>\n\n  {#each starship.defenses as defense}\n    <div>\n      {defense.name}: {defense.effect}\n    </div>\n  {/each}\n</section>\n","import * as MUN from \"@ironarachne/made-up-names\";\nimport * as RND from \"@ironarachne/rng\";\nimport * as Text from \"../format/text.js\";\n\nimport random from \"random\";\n\nexport class SWNStarship {\n  name: string;\n  className: string;\n  manufacturer: string;\n  hullType: HullType;\n  currentCrew: number;\n  totalCost: number;\n  tonsOfCargo: number;\n  usedMass: number;\n  usedPower: number;\n  usedHardPoints: number;\n  ownerType: OwnerType;\n  weapons: Weapon[];\n  defenses: DefenseFitting[];\n  fittings: Fitting[];\n  drive: DriveFitting;\n\n  constructor(ownerType: OwnerType, hullType: HullType) {\n    this.name = \"\";\n    this.className = \"\";\n    this.manufacturer = \"\";\n    this.hullType = hullType;\n    this.ownerType = ownerType;\n    this.currentCrew = 0;\n    this.totalCost = 0;\n    this.tonsOfCargo = 0;\n    this.usedMass = 0;\n    this.usedPower = 0;\n    this.usedHardPoints = 0;\n    this.weapons = [];\n    this.defenses = [];\n    this.fittings = [];\n    this.drive = getStarterDrive();\n  }\n}\n\nexport function generate() {\n  const ownerType = randomStarshipOwnerType();\n  const hullType = randomHullType(ownerType);\n  const starship = new SWNStarship(ownerType, hullType);\n\n  starship.name = starship.ownerType.getRandomShipName();\n  starship.className = starship.ownerType.getRandomClassName();\n  starship.manufacturer = randomManufacturerName();\n  starship.currentCrew = random.int(starship.hullType.crewMinimum, starship.hullType.crewMaximum);\n\n  let massBudget = starship.hullType.mass;\n  let powerBudget = starship.hullType.power;\n  let hardpointBudget = starship.hullType.hardPoints;\n\n  let costMultiplier = 1;\n  let massMultiplier = 1;\n  let powerMultiplier = 1;\n\n  starship.totalCost = starship.hullType.cost;\n\n  if (starship.hullType.hullClass === 1) {\n    costMultiplier = 10;\n    powerMultiplier = 2;\n    massMultiplier = 2;\n  } else if (starship.hullType.hullClass === 2) {\n    costMultiplier = 25;\n    powerMultiplier = 3;\n    massMultiplier = 3;\n  } else if (starship.hullType.hullClass === 3) {\n    costMultiplier = 100;\n    powerMultiplier = 4;\n    massMultiplier = 4;\n  }\n\n  if (starship.ownerType.systemOnly) {\n    const systemDrive = new DriveFitting(\n      \"System Drive\",\n      0,\n      0,\n      0,\n      0,\n      3,\n      \"Replace spike drive with small system drive\",\n    );\n\n    starship.hullType.cost = Math.floor(starship.hullType.cost * 0.9);\n\n    starship.hullType.power += powerMultiplier;\n    starship.hullType.mass += powerMultiplier * 2;\n    starship.drive = systemDrive;\n\n    massBudget = starship.hullType.mass;\n    powerBudget = starship.hullType.power;\n  } else {\n    const chanceOfDriveUpgrade = random.int(1, 100);\n\n    if (chanceOfDriveUpgrade > 70) {\n      const allDrives = allDriveFittings();\n      const drives = [];\n\n      for (let i = 0; i < allDrives.length; i++) {\n        let driveMassCost = allDrives[i].mass;\n        let drivePowerCost = allDrives[i].power;\n\n        if (allDrives[i].massExpands) {\n          driveMassCost *= massMultiplier;\n        }\n\n        if (allDrives[i].powerExpands) {\n          drivePowerCost *= powerMultiplier;\n        }\n\n        if (\n          allDrives[i].minimumClass <= starship.hullType.hullClass\n          && allDrives[i].maximumClass >= starship.hullType.hullClass\n        ) {\n          if (drivePowerCost <= powerBudget && driveMassCost <= massBudget) {\n            drives.push(allDrives[i]);\n          }\n        }\n      }\n\n      if (drives.length > 0) {\n        const driveUpgrade = RND.item(drives);\n\n        starship.fittings.push(driveUpgrade);\n        starship.drive = driveUpgrade;\n\n        massBudget -= driveUpgrade.mass * massMultiplier;\n        powerBudget -= driveUpgrade.power * powerMultiplier;\n        starship.totalCost += driveUpgrade.cost * costMultiplier;\n      }\n    }\n  }\n\n  if (starship.ownerType.isArmed) {\n    const weaponList = allWeapons();\n    let possibleWeapons: Weapon[] = [];\n    for (let i = 0; i < weaponList.length; i++) {\n      const weaponMassCost = weaponList[i].mass;\n      const weaponPowerCost = weaponList[i].power;\n      const weaponHardpoints = weaponList[i].hardPoints;\n\n      if (\n        weaponMassCost <= massBudget\n        && weaponPowerCost <= powerBudget\n        && weaponHardpoints <= hardpointBudget\n        && weaponList[i].hullClass <= starship.hullType.hullClass\n      ) {\n        possibleWeapons.push(weaponList[i]);\n      }\n    }\n\n    const numberOfWeapons = random.int(1, 2);\n    for (let i = 0; i < numberOfWeapons; i++) {\n      const newWeapon = RND.item(possibleWeapons);\n\n      let weaponCost = newWeapon.cost;\n      let weaponMassCost = newWeapon.mass;\n      let weaponPowerCost = newWeapon.power;\n      const weaponHardpoints = newWeapon.hardPoints;\n\n      if (newWeapon.massExpands) {\n        weaponMassCost = weaponMassCost * massMultiplier;\n      }\n\n      if (newWeapon.powerExpands) {\n        weaponPowerCost = weaponPowerCost * powerMultiplier;\n      }\n\n      if (newWeapon.costExpands) {\n        weaponCost = weaponCost * costMultiplier;\n      }\n\n      if (\n        weaponMassCost <= massBudget\n        && weaponPowerCost <= powerBudget\n        && weaponHardpoints <= hardpointBudget\n        && newWeapon.hullClass <= starship.hullType.hullClass\n      ) {\n        starship.weapons.push(newWeapon);\n        massBudget -= weaponMassCost;\n        powerBudget -= weaponPowerCost;\n        hardpointBudget -= weaponHardpoints;\n      }\n\n      possibleWeapons = removeWeaponFittingFromList(newWeapon, possibleWeapons);\n    }\n\n    // Begin addition of defenses\n\n    const defenseList = allDefenses();\n    let possibleDefenses = [];\n\n    for (let i = 0; i < defenseList.length; i++) {\n      if (defenseList[i].hullClass <= starship.hullType.hullClass) {\n        possibleDefenses.push(defenseList[i]);\n      }\n    }\n\n    const numberOfDefenses = random.int(0, 2);\n\n    for (let i = 0; i < numberOfDefenses; i++) {\n      const newDefense = RND.item(possibleDefenses);\n\n      let defenseCost = newDefense.cost;\n      let defenseMassCost = newDefense.mass;\n      let defensePowerCost = newDefense.power;\n\n      if (newDefense.massExpands) {\n        defenseMassCost = defenseMassCost * massMultiplier;\n      }\n\n      if (newDefense.powerExpands) {\n        defensePowerCost = defensePowerCost * powerMultiplier;\n      }\n\n      if (newDefense.costExpands) {\n        defenseCost = defenseCost * costMultiplier;\n      }\n\n      if (defenseMassCost <= massBudget && defensePowerCost <= powerBudget) {\n        starship.defenses.push(newDefense);\n        massBudget -= defenseMassCost;\n        powerBudget -= defensePowerCost;\n        starship.totalCost += defenseCost;\n      }\n\n      possibleDefenses = removeFittingFromList(newDefense, possibleDefenses);\n    }\n  }\n\n  const possibleFittings = getAllAppropriateFittings(starship.ownerType.allowedFittingTypes);\n  let fittingOptions = filterFittingsByHullClass(possibleFittings, starship.hullType.hullClass);\n\n  // Begin addition of required fitting\n\n  let requiredFittingOptions = getFittingsByType(starship.ownerType.requiredFittingType);\n  requiredFittingOptions = filterFittingsByHullClass(\n    requiredFittingOptions,\n    starship.hullType.hullClass,\n  );\n\n  if (requiredFittingOptions.length > 0) {\n    const requiredFitting = RND.item(requiredFittingOptions);\n    starship.fittings.push(requiredFitting);\n\n    let requiredFittingCost = requiredFitting.cost;\n    let requiredMassCost = requiredFitting.mass;\n    let requiredPowerCost = requiredFitting.power;\n\n    if (requiredFitting.costExpands) {\n      requiredFittingCost *= costMultiplier;\n    }\n\n    if (requiredFitting.massExpands) {\n      requiredMassCost *= massMultiplier;\n    }\n\n    if (requiredFitting.powerExpands) {\n      requiredPowerCost *= powerMultiplier;\n    }\n\n    massBudget -= requiredMassCost;\n    powerBudget -= requiredPowerCost;\n    starship.totalCost += requiredFittingCost;\n\n    fittingOptions = removeFittingFromList(requiredFitting, fittingOptions);\n  }\n\n  // Begin addition of fittings\n\n  const maxNumberOfFittings = random.int(1, 3);\n\n  for (let i = 0; i < maxNumberOfFittings; i++) {\n    const newFitting = RND.item(fittingOptions);\n\n    let fittingCost = newFitting.cost;\n    let fittingMassCost = newFitting.mass;\n    let fittingPowerCost = newFitting.power;\n\n    if (newFitting.costExpands) {\n      fittingCost *= costMultiplier;\n    }\n\n    if (newFitting.massExpands) {\n      fittingMassCost *= massMultiplier;\n    }\n\n    if (newFitting.powerExpands) {\n      fittingPowerCost *= powerMultiplier;\n    }\n\n    if (fittingMassCost <= massBudget && fittingPowerCost <= powerBudget) {\n      starship.fittings.push(newFitting);\n      massBudget -= fittingMassCost;\n      powerBudget -= fittingPowerCost;\n      starship.totalCost += fittingCost;\n    }\n\n    fittingOptions = removeFittingFromList(newFitting, fittingOptions);\n  }\n\n  let tonsOfCargo = 0;\n\n  if (starship.ownerType.fillWithCargo && massBudget > 0) {\n    const cargoFitting = new CargoFitting(\"Cargo space\", 0, 0, 1, 0, 3, \"Pressurized cargo space\");\n\n    let foundCargo = false;\n\n    let tonsMultiplier = 2;\n\n    if (starship.hullType.hullClass === 1) {\n      tonsMultiplier = 20;\n    } else if (starship.hullType.hullClass === 2) {\n      tonsMultiplier = 200;\n    } else if (starship.hullType.hullClass === 3) {\n      tonsMultiplier = 2000;\n    }\n\n    for (let i = 0; i < starship.fittings.length; i++) {\n      if (starship.fittings[i].name === \"Cargo space\") {\n        foundCargo = true;\n        tonsOfCargo = tonsMultiplier;\n      }\n    }\n\n    if (!foundCargo) {\n      starship.fittings.push(cargoFitting);\n      massBudget--;\n    }\n\n    const numberOfCargoFittings = massBudget;\n\n    for (let i = 0; i < numberOfCargoFittings; i++) {\n      tonsOfCargo += tonsMultiplier;\n      massBudget--;\n    }\n  }\n\n  starship.tonsOfCargo = tonsOfCargo;\n\n  starship.usedMass = starship.hullType.mass - massBudget;\n  starship.usedPower = starship.hullType.power - powerBudget;\n  starship.usedHardPoints = starship.hullType.hardPoints - hardpointBudget;\n\n  return starship;\n}\n\nfunction filterFittingsByHullClass(\n  fittings: (Weapon | DefenseFitting | Fitting | CargoFitting)[],\n  hullClass: number,\n) {\n  const result = [];\n\n  for (let i = 0; i < fittings.length; i++) {\n    if (fittings[i].minimumClass <= hullClass && fittings[i].maximumClass >= hullClass) {\n      result.push(fittings[i]);\n    }\n  }\n\n  return result;\n}\n\nfunction getAllAppropriateFittings(fittingTypes: string[]) {\n  const all = allFittings();\n\n  const fittings = [];\n\n  for (let i = 0; i < all.length; i++) {\n    if (fittingTypes.includes(all[i].fittingType)) {\n      fittings.push(all[i]);\n    }\n  }\n\n  return fittings;\n}\n\nexport class HullType {\n  name: string;\n  cost: number;\n  speed: number;\n  armor: number;\n  hp: number;\n  crewMinimum: number;\n  crewMaximum: number;\n  ac: number;\n  power: number;\n  mass: number;\n  hardPoints: number;\n  hullClass: number;\n  hullClassName: string;\n  crewSkill: string;\n\n  constructor(\n    name: string,\n    cost: number,\n    speed: number,\n    armor: number,\n    hp: number,\n    crewMinimum: number,\n    crewMaximum: number,\n    ac: number,\n    power: number,\n    mass: number,\n    hardPoints: number,\n    hullClass: number,\n    crewSkill: string,\n  ) {\n    this.name = name;\n    this.cost = cost;\n    this.speed = speed;\n    this.armor = armor;\n    this.hp = hp;\n    this.crewMinimum = crewMinimum;\n    this.crewMaximum = crewMaximum;\n    this.ac = ac;\n    this.power = power;\n    this.mass = mass;\n    this.hardPoints = hardPoints;\n    this.hullClass = hullClass;\n\n    if (this.hullClass === 0) {\n      this.hullClassName = \"fighter\";\n    } else if (this.hullClass === 1) {\n      this.hullClassName = \"frigate\";\n    } else if (this.hullClass === 2) {\n      this.hullClassName = \"cruiser\";\n    } else if (this.hullClass === 3) {\n      this.hullClassName = \"capital\";\n    } else {\n      this.hullClassName = \"station\";\n    }\n\n    this.crewSkill = crewSkill;\n  }\n}\n\nfunction allHullTypes() {\n  return [\n    new HullType(\"strike fighter\", 200000, 5, 5, 8, 1, 11, 16, 5, 2, 1, 0, \"+2\"),\n    new HullType(\"shuttle\", 200000, 3, 0, 15, 1, 10, 11, 3, 5, 1, 0, \"+1\"),\n    new HullType(\"free merchant\", 500000, 3, 2, 20, 1, 6, 14, 10, 15, 2, 1, \"+1\"),\n    new HullType(\"patrol boat\", 2500000, 4, 5, 25, 5, 20, 14, 15, 10, 4, 1, \"+2\"),\n    new HullType(\"corvette\", 4000000, 2, 10, 40, 10, 40, 13, 15, 15, 6, 1, \"+2\"),\n    new HullType(\"heavy frigate\", 7000000, 1, 10, 50, 30, 120, 15, 25, 20, 8, 1, \"+2\"),\n    new HullType(\"bulk freighter\", 5000000, 0, 0, 40, 10, 40, 11, 15, 25, 2, 2, \"+1\"),\n    new HullType(\"fleet cruiser\", 10000000, 1, 15, 60, 50, 200, 14, 50, 30, 10, 2, \"+2\"),\n    new HullType(\"battleship\", 50000000, 0, 20, 100, 200, 1000, 16, 75, 50, 15, 3, \"+3\"),\n    new HullType(\"carrier\", 60000000, 0, 10, 75, 300, 1500, 14, 50, 100, 4, 3, \"+3\"),\n  ];\n}\n\nfunction getHullType(hullTypeName: string) {\n  const types = allHullTypes();\n\n  for (let i = 0; i < types.length; i++) {\n    if (types[i].name === hullTypeName) {\n      return types[i];\n    }\n  }\n\n  return types[0];\n}\n\nfunction randomHullType(ownerType: OwnerType) {\n  return getHullType(RND.item(ownerType.possibleHullTypes));\n}\n\nexport class OwnerType {\n  name: string;\n  isArmed: boolean;\n  systemOnly: boolean;\n  possibleHullTypes: string[];\n  getRandomClassName: Function;\n  getRandomShipName: Function;\n  requiredFittingType: string;\n  fillWithCargo: boolean;\n  allowedFittingTypes: string[];\n\n  constructor(\n    name: string,\n    isArmed: boolean,\n    systemOnly: boolean,\n    possibleHullTypes: string[],\n    getRandomClassName: Function,\n    getRandomShipName: Function,\n    requiredFittingType: string,\n    fillWithCargo: boolean,\n    allowedFittingTypes: string[],\n  ) {\n    this.name = name;\n    this.isArmed = isArmed;\n    this.systemOnly = systemOnly;\n    this.possibleHullTypes = possibleHullTypes;\n    this.getRandomClassName = getRandomClassName;\n    this.getRandomShipName = getRandomShipName;\n    this.requiredFittingType = requiredFittingType;\n    this.fillWithCargo = fillWithCargo;\n    this.allowedFittingTypes = allowedFittingTypes;\n  }\n}\n\nfunction randomStarshipOwnerType() {\n  const types = [\n    new OwnerType(\n      \"civilian\",\n      false,\n      false,\n      [\"shuttle\", \"free merchant\"],\n      function() {\n        const shipClassNames = [\n          \"Coventry\",\n          \"Hermes\",\n          \"Laurel\",\n          \"Mermaid\",\n          \"Star Runner\",\n          \"Venus\",\n          \"Amazon\",\n          \"Hermione\",\n          \"Cerce\",\n          \"Triton\",\n          \"Wizard\",\n          \"Minerva\",\n          \"Pallas\",\n          \"Antioch\",\n          \"Cerberus\",\n          \"Diana\",\n          \"Dryad\",\n          \"Phoebe\",\n          \"Emerald\",\n          \"Ruby\",\n          \"Diamond\",\n          \"Seahorse\",\n          \"Stag\",\n          \"Hydra\",\n          \"Boadicea\",\n          \"Galatea\",\n          \"Shannon\",\n        ];\n\n        const modelNumber = MUN.modelNumber();\n\n        return modelNumber + \" \" + RND.item(shipClassNames);\n      },\n      function() {\n        const shipNames = [\n          \"Mistral\",\n          \"Dictator\",\n          \"Alceste\",\n          \"Kilmersdon\",\n          \"Goldfinch\",\n          \"Century Hawk\",\n          \"Brazen Mistress\",\n          \"Norman\",\n          \"Badger\",\n          \"Nox\",\n          \"Dredger\",\n          \"Mimosa\",\n          \"Scotch\",\n          \"Bad Wine\",\n          \"Lady Luck\",\n          \"Powerful\",\n          \"Glasgow\",\n          \"Errant\",\n          \"Pouncer\",\n          \"Ayrshire\",\n          \"Rocinante\",\n          \"Mercy\",\n          \"Princess\",\n          \"Aphrodite\",\n          \"Athena\",\n          \"Hera\",\n          \"Deidre\",\n          \"Naomi\",\n          \"Alice\",\n          \"Denali\",\n          \"Roberta\",\n          \"Darlin\",\n          \"Marlin\",\n          \"Swordfish\",\n          \"Borderstar\",\n          \"Bad Habit\",\n          \"Escolano\",\n          \"Simplicity\",\n          \"Good Fortune\",\n          \"Fortune\",\n          \"Alistair\",\n        ];\n\n        return RND.item(shipNames);\n      },\n      \"cargo\",\n      false,\n      [\n        \"cargo\",\n        \"colony\",\n        \"computer\",\n        \"crew\",\n        \"fuel\",\n        \"landing\",\n        \"medical\",\n        \"navigation\",\n        \"passenger\",\n        \"science\",\n        \"sensors\",\n        \"shuttle\",\n        \"support\",\n      ],\n    ),\n    new OwnerType(\n      \"merchant\",\n      false,\n      false,\n      [\"shuttle\", \"free merchant\", \"bulk freighter\"],\n      function() {\n        const shipClassNames = [\n          \"Coventry\",\n          \"Hermes\",\n          \"Laurel\",\n          \"Mermaid\",\n          \"Star Runner\",\n          \"Venus\",\n          \"Amazon\",\n          \"Hermione\",\n          \"Cerce\",\n          \"Triton\",\n          \"Wizard\",\n          \"Minerva\",\n          \"Pallas\",\n          \"Antioch\",\n          \"Cerberus\",\n          \"Diana\",\n          \"Dryad\",\n          \"Phoebe\",\n          \"Emerald\",\n          \"Ruby\",\n          \"Diamond\",\n          \"Seahorse\",\n          \"Stag\",\n          \"Hydra\",\n          \"Boadicea\",\n          \"Galatea\",\n          \"Shannon\",\n        ];\n\n        const modelNumber = MUN.modelNumber();\n\n        return modelNumber + \" \" + RND.item(shipClassNames);\n      },\n      function() {\n        const shipNames = [\n          \"Mistral\",\n          \"Dictator\",\n          \"Alceste\",\n          \"Kilmersdon\",\n          \"Goldfinch\",\n          \"Century Hawk\",\n          \"Brazen Mistress\",\n          \"Norman\",\n          \"Badger\",\n          \"Nox\",\n          \"Dredger\",\n          \"Mimosa\",\n          \"Scotch\",\n          \"Bad Wine\",\n          \"Lady Luck\",\n          \"Powerful\",\n          \"Glasgow\",\n          \"Errant\",\n          \"Pouncer\",\n          \"Ayrshire\",\n          \"Rocinante\",\n          \"Mercy\",\n          \"Princess\",\n          \"Aphrodite\",\n          \"Athena\",\n          \"Hera\",\n          \"Deidre\",\n          \"Naomi\",\n          \"Alice\",\n          \"Denali\",\n          \"Roberta\",\n          \"Darlin\",\n          \"Marlin\",\n          \"Swordfish\",\n          \"Borderstar\",\n          \"Bad Habit\",\n          \"Escolano\",\n          \"Simplicity\",\n          \"Good Fortune\",\n          \"Fortune\",\n          \"Alistair\",\n        ];\n\n        return RND.item(shipNames);\n      },\n      \"cargo\",\n      true,\n      [\n        \"cargo\",\n        \"colony\",\n        \"computer\",\n        \"crew\",\n        \"factory\",\n        \"fuel\",\n        \"landing\",\n        \"medical\",\n        \"navigation\",\n        \"passenger\",\n        \"science\",\n        \"sensors\",\n        \"shuttle\",\n        \"support\",\n      ],\n    ),\n    new OwnerType(\n      \"mining ship\",\n      false,\n      false,\n      [\"shuttle\", \"free merchant\", \"bulk freighter\"],\n      function() {\n        const shipClassNames = [\n          \"Behemoth\",\n          \"Leviathan\",\n          \"Hermes\",\n          \"Workhorse\",\n          \"Odyssey\",\n          \"Sojourner\",\n          \"Prospect\",\n          \"Procurer\",\n          \"Retriever\",\n          \"Covetor\",\n          \"Venture\",\n          \"Endurance\",\n          \"Orca\",\n          \"Hulk\",\n        ];\n\n        const modelNumber = MUN.modelNumber();\n\n        return modelNumber + \" \" + RND.item(shipClassNames);\n      },\n      function() {\n        const shipNames = [\n          \"Mistral\",\n          \"Dictator\",\n          \"Alceste\",\n          \"Kilmersdon\",\n          \"Goldfinch\",\n          \"Century Hawk\",\n          \"Brazen Mistress\",\n          \"Norman\",\n          \"Badger\",\n          \"Nox\",\n          \"Dredger\",\n          \"Mimosa\",\n          \"Scotch\",\n          \"Bad Wine\",\n          \"Lady Luck\",\n          \"Powerful\",\n          \"Glasgow\",\n          \"Errant\",\n          \"Pouncer\",\n          \"Ayrshire\",\n          \"Rocinante\",\n          \"Mercy\",\n          \"Princess\",\n          \"Aphrodite\",\n          \"Athena\",\n          \"Hera\",\n          \"Deidre\",\n          \"Naomi\",\n          \"Alice\",\n          \"Denali\",\n          \"Roberta\",\n          \"Darlin\",\n          \"Marlin\",\n          \"Swordfish\",\n          \"Borderstar\",\n          \"Bad Habit\",\n          \"Escolano\",\n          \"Simplicity\",\n          \"Good Fortune\",\n          \"Fortune\",\n          \"Alistair\",\n        ];\n\n        return RND.item(shipNames);\n      },\n      \"mining\",\n      true,\n      [\n        \"cargo\",\n        \"colony\",\n        \"computer\",\n        \"crew\",\n        \"factory\",\n        \"fuel\",\n        \"landing\",\n        \"medical\",\n        \"navigation\",\n        \"passenger\",\n        \"science\",\n        \"sensors\",\n        \"shuttle\",\n        \"support\",\n      ],\n    ),\n    new OwnerType(\n      \"law enforcement\",\n      true,\n      true,\n      [\"patrol boat\"],\n      function() {\n        const shipClassNames = [\n          \"Shrike\",\n          \"Shooting Star\",\n          \"Vindicator\",\n          \"Centurion\",\n          \"Sentinel\",\n          \"Guardian\",\n          \"Defender\",\n          \"Patroller\",\n          \"Sherriff\",\n          \"Constable\",\n          \"Cavalry\",\n          \"Marshal\",\n          \"Badge\",\n        ];\n\n        const modelNumber = MUN.modelNumber();\n\n        return modelNumber + \" \" + RND.item(shipClassNames);\n      },\n      function() {\n        let shipName = \"\";\n\n        shipName = RND.item([\n          \"PS\",\n          \"SPS\",\n          \"SP\",\n          \"Star Police Cruiser\",\n          \"Solar Police\",\n          \"Star Police\",\n          \"LES\",\n        ]);\n\n        const unitNumber = random.int(100, 500);\n\n        const designationForm = random.int(0, 100);\n\n        if (designationForm < 30) {\n          shipName += \" \" + unitNumber;\n        } else if (designationForm < 70) {\n          shipName += \" \" + random.int(1, 9) + \"-\" + unitNumber;\n        } else {\n          shipName += \" Unit \" + unitNumber;\n        }\n\n        return shipName;\n      },\n      \"weapons\",\n      false,\n      [\n        \"cargo\",\n        \"computer\",\n        \"crew\",\n        \"fuel\",\n        \"landing\",\n        \"navigation\",\n        \"science\",\n        \"sensors\",\n        \"shuttle\",\n        \"support\",\n        \"weapons\",\n      ],\n    ),\n    new OwnerType(\n      \"military line of battle\",\n      true,\n      false,\n      [\"fleet cruiser\", \"battleship\", \"carrier\"],\n      function() {\n        const shipClassNames = [\n          \"Vindicator\",\n          \"Imperator\",\n          \"Executor\",\n          \"Dreadnought\",\n          \"Invictus\",\n          \"Leviathan\",\n          \"Balwark\",\n          \"Sun Crusher\",\n          \"Brutality\",\n          \"Victory\",\n          \"Guardian\",\n          \"Dominator\",\n          \"Annihilator\",\n          \"Titan\",\n          \"Sovereign\",\n          \"Juggernaut\",\n        ];\n\n        return RND.item(shipClassNames) + \"-class\";\n      },\n      function() {\n        const shipNames = [\n          \"Righteousness\",\n          \"Hammer of God\",\n          \"Apollo\",\n          \"Alexander\",\n          \"Atalanta\",\n          \"Baroness\",\n          \"Baron\",\n          \"Oberon\",\n          \"Wrath\",\n          \"Honor\",\n          \"Gladius\",\n          \"Harlegand\",\n          \"Hittite\",\n          \"Karnack\",\n          \"Helios\",\n          \"Andromeda\",\n          \"Liberator\",\n          \"Nirvana\",\n          \"Khan\",\n          \"Adogan\",\n          \"Chimera\",\n          \"Warlock\",\n          \"Warlord\",\n          \"Centipede\",\n          \"Manticore\",\n          \"Gryphon\",\n        ];\n\n        const designator = RND.item([\"HMS\", \"USS\", \"ISS\"]);\n\n        return designator + \" \" + RND.item(shipNames);\n      },\n      \"weapons\",\n      false,\n      [\n        \"cargo\",\n        \"computer\",\n        \"crew\",\n        \"fuel\",\n        \"landing\",\n        \"medical\",\n        \"navigation\",\n        \"passenger\",\n        \"psychic\",\n        \"science\",\n        \"sensors\",\n        \"shuttle\",\n        \"stealth\",\n        \"support\",\n        \"troops\",\n        \"weapons\",\n      ],\n    ),\n    new OwnerType(\n      \"military patroller\",\n      true,\n      false,\n      [\"patrol boat\", \"corvette\", \"heavy frigate\"],\n      function() {\n        const shipClassNames = [\n          \"Vanguard\",\n          \"Shrike\",\n          \"Avenger\",\n          \"Cutter\",\n          \"Ghost\",\n          \"Specter\",\n          \"Centipede\",\n          \"Wasp\",\n          \"Hornet\",\n          \"Dart\",\n          \"Talon\",\n          \"Bandit\",\n          \"Lancer\",\n          \"Angel\",\n          \"Paladin\",\n        ];\n\n        return RND.item(shipClassNames) + \"-class\";\n      },\n      function() {\n        const shipNames = [\n          \"Gibraltar\",\n          \"Biddeford\",\n          \"Seaford\",\n          \"Pandora\",\n          \"Siren\",\n          \"Champion\",\n          \"Daphne\",\n          \"Unicorn\",\n          \"Perseus\",\n          \"Sphinx\",\n          \"Gryphon\",\n          \"Wight\",\n          \"Spectre\",\n          \"Dragon\",\n          \"Wyvern\",\n          \"Hyena\",\n          \"Wolf\",\n          \"Dagger\",\n          \"Falchion\",\n          \"Warhammer\",\n          \"Conway\",\n          \"Conqueror\",\n          \"Hind\",\n        ];\n\n        const designator = RND.item([\"HMS\", \"USS\", \"ISS\"]);\n\n        return designator + \" \" + RND.item(shipNames);\n      },\n      \"weapons\",\n      false,\n      [\n        \"cargo\",\n        \"computer\",\n        \"crew\",\n        \"fuel\",\n        \"landing\",\n        \"medical\",\n        \"navigation\",\n        \"passenger\",\n        \"psychic\",\n        \"science\",\n        \"sensors\",\n        \"shuttle\",\n        \"stealth\",\n        \"support\",\n        \"weapons\",\n      ],\n    ),\n    new OwnerType(\n      \"pirate\",\n      true,\n      false,\n      [\"strike fighter\", \"patrol boat\", \"corvette\", \"heavy frigate\"],\n      function() {\n        const shipClassNames = [\n          \"Coventry\",\n          \"Hermes\",\n          \"Laurel\",\n          \"Mermaid\",\n          \"Star Runner\",\n          \"Venus\",\n          \"Amazon\",\n          \"Hermione\",\n          \"Cerce\",\n          \"Triton\",\n          \"Wizard\",\n          \"Minerva\",\n          \"Pallas\",\n          \"Antioch\",\n          \"Cerberus\",\n          \"Diana\",\n          \"Dryad\",\n          \"Phoebe\",\n          \"Emerald\",\n          \"Ruby\",\n          \"Diamond\",\n          \"Seahorse\",\n          \"Stag\",\n          \"Hydra\",\n          \"Boadicea\",\n          \"Galatea\",\n          \"Shannon\",\n        ];\n\n        const modelNumber = MUN.modelNumber();\n\n        return modelNumber + \" \" + RND.item(shipClassNames);\n      },\n      function() {\n        const shipNames = [\n          \"Revenge\",\n          \"Blood\",\n          \"Bloodletter\",\n          \"Pearl\",\n          \"Broken Soul\",\n          \"Lost Soul\",\n          \"Reaver\",\n          \"Raider\",\n          \"Corsair\",\n          \"Vengeance\",\n          \"Freedom\",\n          \"Free Will\",\n          \"Serpent\",\n          \"Burning Rose\",\n          \"Black Rose\",\n          \"Black Star\",\n          \"Crimson Star\",\n          \"Crimson\",\n          \"Maelstrom\",\n          \"Runner\",\n          \"Old James\",\n          \"Dog of War\",\n          \"Solar Tide\",\n        ];\n\n        return RND.item(shipNames);\n      },\n      \"weapons\",\n      false,\n      [\n        \"cargo\",\n        \"computer\",\n        \"crew\",\n        \"fuel\",\n        \"landing\",\n        \"medical\",\n        \"navigation\",\n        \"sensors\",\n        \"shuttle\",\n        \"stealth\",\n        \"support\",\n        \"troops\",\n        \"weapons\",\n      ],\n    ),\n    new OwnerType(\n      \"smuggler\",\n      true,\n      false,\n      [\"free merchant\", \"patrol boat\"],\n      function() {\n        const shipClassNames = [\n          \"Coventry\",\n          \"Hermes\",\n          \"Laurel\",\n          \"Mermaid\",\n          \"Star Runner\",\n          \"Venus\",\n          \"Amazon\",\n          \"Hermione\",\n          \"Cerce\",\n          \"Triton\",\n          \"Wizard\",\n          \"Minerva\",\n          \"Pallas\",\n          \"Antioch\",\n          \"Cerberus\",\n          \"Diana\",\n          \"Dryad\",\n          \"Phoebe\",\n          \"Emerald\",\n          \"Ruby\",\n          \"Diamond\",\n          \"Seahorse\",\n          \"Stag\",\n          \"Hydra\",\n          \"Boadicea\",\n          \"Galatea\",\n          \"Shannon\",\n        ];\n\n        const modelNumber = MUN.modelNumber();\n\n        return modelNumber + \" \" + RND.item(shipClassNames);\n      },\n      function() {\n        const shipNames = [\n          \"Mistral\",\n          \"Dictator\",\n          \"Alceste\",\n          \"Kilmersdon\",\n          \"Goldfinch\",\n          \"Century Hawk\",\n          \"Brazen Mistress\",\n          \"Norman\",\n          \"Badger\",\n          \"Nox\",\n          \"Dredger\",\n          \"Mimosa\",\n          \"Scotch\",\n          \"Bad Wine\",\n          \"Lady Luck\",\n          \"Powerful\",\n          \"Glasgow\",\n          \"Errant\",\n          \"Pouncer\",\n          \"Ayrshire\",\n          \"Rocinante\",\n          \"Mercy\",\n          \"Princess\",\n          \"Aphrodite\",\n          \"Athena\",\n          \"Hera\",\n          \"Deidre\",\n          \"Naomi\",\n          \"Alice\",\n          \"Denali\",\n          \"Roberta\",\n          \"Darlin\",\n          \"Marlin\",\n          \"Swordfish\",\n          \"Borderstar\",\n          \"Bad Habit\",\n          \"Escolano\",\n          \"Simplicity\",\n          \"Good Fortune\",\n          \"Fortune\",\n          \"Alistair\",\n        ];\n\n        return RND.item(shipNames);\n      },\n      \"smuggling\",\n      true,\n      [\n        \"cargo\",\n        \"computer\",\n        \"crew\",\n        \"fuel\",\n        \"landing\",\n        \"medical\",\n        \"navigation\",\n        \"passenger\",\n        \"sensors\",\n        \"shuttle\",\n        \"smuggling\",\n        \"stealth\",\n        \"support\",\n      ],\n    ),\n  ];\n\n  return RND.item(types);\n}\n\nexport class DriveFitting {\n  name: string;\n  cost: number;\n  costExpands: boolean;\n  power: number;\n  powerExpands: boolean;\n  mass: number;\n  massExpands: boolean;\n  minimumClass: number;\n  maximumClass: number;\n  effect: string;\n\n  constructor(\n    name: string,\n    cost: number,\n    power: number,\n    mass: number,\n    minimumClass: number,\n    maximumClass: number,\n    effect: string,\n  ) {\n    this.name = name;\n    this.cost = cost;\n    this.costExpands = true;\n    this.power = power;\n    this.powerExpands = true;\n    this.mass = mass;\n    this.massExpands = true;\n    this.minimumClass = minimumClass;\n    this.maximumClass = maximumClass;\n    this.effect = effect;\n  }\n}\n\nfunction getStarterDrive() {\n  return new DriveFitting(\"Spike Drive-1\", 0, 1, 1, 0, 3, \"A class-1 spike drive\");\n}\n\nfunction allDriveFittings() {\n  return [\n    new DriveFitting(\"Spike Drive-2\", 10000, 1, 1, 0, 3, \"Upgrade a spike drive to drive-2 rating\"),\n    new DriveFitting(\"Spike Drive-3\", 20000, 2, 2, 0, 3, \"Upgrade a spike drive to drive-3 rating\"),\n    new DriveFitting(\"Spike Drive-4\", 40000, 2, 3, 1, 3, \"Upgrade a spike drive to drive-4 rating\"),\n    new DriveFitting(\n      \"Spike Drive-5\",\n      100000,\n      3,\n      3,\n      1,\n      3,\n      \"Upgrade a spike drive to drive-5 rating\",\n    ),\n    new DriveFitting(\n      \"Spike Drive-6\",\n      500000,\n      3,\n      4,\n      2,\n      3,\n      \"Upgrade a spike drive to drive-6 rating\",\n    ),\n  ];\n}\n\nfunction getFittingsByType(fittingType: string) {\n  const all = allFittings();\n  const result: Fitting[] = [];\n\n  for (let i = 0; i < all.length; i++) {\n    if (all[i].fittingType === fittingType) {\n      result.push(all[i]);\n    }\n  }\n\n  return result;\n}\n\nexport class CargoFitting {\n  name: string;\n  fittingType: string;\n  cost: number;\n  costExpands: boolean;\n  power: number;\n  powerExpands: boolean;\n  mass: number;\n  massExpands: boolean;\n  minimumClass: number;\n  maximumClass: number;\n  effect: string;\n\n  constructor(\n    name: string,\n    cost: number,\n    power: number,\n    mass: number,\n    minimumClass: number,\n    maximumClass: number,\n    effect: string,\n  ) {\n    this.name = name;\n    this.fittingType = \"cargo\";\n    this.cost = cost;\n    this.costExpands = false;\n    this.power = power;\n    this.powerExpands = false;\n    this.mass = mass;\n    this.massExpands = false;\n    this.minimumClass = minimumClass;\n    this.maximumClass = maximumClass;\n    this.effect = effect;\n  }\n}\n\nexport class Fitting {\n  name: string;\n  fittingType: string;\n  cost: number;\n  costExpands: boolean;\n  power: number;\n  powerExpands: boolean;\n  mass: number;\n  massExpands: boolean;\n  minimumClass: number;\n  maximumClass: number;\n  effect: string;\n\n  constructor(\n    name: string,\n    fittingType: string,\n    cost: number,\n    costExpands: boolean,\n    power: number,\n    powerExpands: boolean,\n    mass: number,\n    massExpands: boolean,\n    minimumClass: number,\n    maximumClass: number,\n    effect: string,\n  ) {\n    this.name = name;\n    this.fittingType = fittingType;\n    this.cost = cost;\n    this.costExpands = costExpands;\n    this.power = power;\n    this.powerExpands = powerExpands;\n    this.mass = mass;\n    this.massExpands = massExpands;\n    this.minimumClass = minimumClass;\n    this.maximumClass = maximumClass;\n    this.effect = effect;\n  }\n}\n\nfunction allFittings() {\n  return [\n    new Fitting(\n      \"Advanced lab\",\n      \"science\",\n      10000,\n      true,\n      1,\n      true,\n      2,\n      false,\n      1,\n      3,\n      \"Skill bonus for analysis and research\",\n    ),\n    new Fitting(\n      \"Advanced nav computer\",\n      \"navigation\",\n      10000,\n      true,\n      1,\n      true,\n      0,\n      false,\n      1,\n      3,\n      \"Adds +2 for traveling familiar spike courses\",\n    ),\n    new Fitting(\n      \"Amphibious operation\",\n      \"landing\",\n      25000,\n      false,\n      1,\n      false,\n      1,\n      true,\n      0,\n      3,\n      \"Can land and can operate under water\",\n    ),\n    new Fitting(\n      \"Armory\",\n      \"weapons\",\n      10000,\n      true,\n      0,\n      false,\n      0,\n      false,\n      1,\n      3,\n      \"Weapons and armor for the crew\",\n    ),\n    new Fitting(\n      \"Atmospheric configuration\",\n      \"landing\",\n      5000,\n      true,\n      0,\n      false,\n      1,\n      false,\n      0,\n      1,\n      \"Can land\",\n    ),\n    new Fitting(\n      \"Auto-targeting system\",\n      \"weapons\",\n      50000,\n      false,\n      1,\n      false,\n      0,\n      false,\n      0,\n      3,\n      \"Fires one weapon system without a gunner\",\n    ),\n    new Fitting(\n      \"Automation support\",\n      \"computer\",\n      10000,\n      true,\n      2,\n      false,\n      1,\n      false,\n      0,\n      3,\n      \"Ship can use simple robots as crew\",\n    ),\n    new Fitting(\n      \"Boarding tubes\",\n      \"troops\",\n      5000,\n      true,\n      0,\n      false,\n      1,\n      false,\n      1,\n      3,\n      \"Allows boarding of a hostile disabled ship\",\n    ),\n    new Fitting(\n      \"Cargo lighter\",\n      \"shuttle\",\n      25000,\n      false,\n      0,\n      false,\n      2,\n      false,\n      1,\n      3,\n      \"Orbit-to-surface cargo shuttle\",\n    ),\n    new CargoFitting(\"Cargo space\", 0, 0, 1, 0, 3, \"Pressurized cargo space\"),\n    new Fitting(\n      \"Cold sleep pods\",\n      \"passenger\",\n      5000,\n      true,\n      1,\n      false,\n      1,\n      false,\n      1,\n      3,\n      \"Keeps occupants in stasis\",\n    ),\n    new Fitting(\n      \"Colony core\",\n      \"colony\",\n      100000,\n      true,\n      4,\n      false,\n      2,\n      true,\n      1,\n      3,\n      \"Ship can be deconstructed into a colony base\",\n    ),\n    new Fitting(\n      \"Drill course regulator\",\n      \"navigation\",\n      25000,\n      true,\n      1,\n      true,\n      1,\n      false,\n      1,\n      3,\n      \"Common drill routes become auto-successes\",\n    ),\n    new Fitting(\n      \"Drop pod\",\n      \"troops\",\n      300000,\n      false,\n      0,\n      false,\n      2,\n      false,\n      1,\n      3,\n      \"Stealthed landing pod for troops\",\n    ),\n    new Fitting(\n      \"Emissions dampers\",\n      \"stealth\",\n      25000,\n      true,\n      1,\n      true,\n      1,\n      true,\n      0,\n      3,\n      \"Adds +2 to skill checks to avoid detection\",\n    ),\n    new Fitting(\n      \"Exodus bay\",\n      \"passenger\",\n      50000,\n      true,\n      1,\n      true,\n      2,\n      true,\n      2,\n      3,\n      \"House vast numbers of cold sleep passengers\",\n    ),\n    new Fitting(\n      \"Extended life support\",\n      \"crew\",\n      5000,\n      true,\n      1,\n      true,\n      1,\n      true,\n      0,\n      3,\n      \"Doubles maximum crew size\",\n    ),\n    new Fitting(\n      \"Extended medbay\",\n      \"medical\",\n      5000,\n      true,\n      1,\n      false,\n      1,\n      false,\n      1,\n      3,\n      \"Can provide medical care to more patients\",\n    ),\n    new Fitting(\n      \"Extended stores\",\n      \"crew\",\n      2500,\n      true,\n      0,\n      false,\n      1,\n      true,\n      0,\n      3,\n      \"Maximum life support duration is doubled\",\n    ),\n    new Fitting(\n      \"Fuel bunkers\",\n      \"fuel\",\n      2500,\n      true,\n      0,\n      false,\n      1,\n      false,\n      0,\n      3,\n      \"Adds fuel for one more drill between fuelings\",\n    ),\n    new Fitting(\n      \"Fuel scoops\",\n      \"fuel\",\n      5000,\n      true,\n      2,\n      false,\n      1,\n      true,\n      1,\n      3,\n      \"Ship can scoop fuel from a gas giant or star\",\n    ),\n    new Fitting(\n      \"Hydroponic production\",\n      \"crew\",\n      10000,\n      true,\n      1,\n      true,\n      2,\n      true,\n      2,\n      3,\n      \"Ship produces life support resources\",\n    ),\n    new Fitting(\n      \"Lifeboats\",\n      \"shuttle\",\n      2500,\n      true,\n      0,\n      false,\n      1,\n      false,\n      1,\n      3,\n      \"Emergency escape craft for a ship's crew\",\n    ),\n    new Fitting(\n      \"Luxury cabins\",\n      \"crew\",\n      10000,\n      true,\n      0,\n      false,\n      1,\n      true,\n      1,\n      3,\n      \"10% of the max crew get luxurious quarters\",\n    ),\n    new Fitting(\n      \"Mobile extractor\",\n      \"mining\",\n      50000,\n      false,\n      2,\n      false,\n      1,\n      false,\n      1,\n      3,\n      \"Space mining and refinery fittings\",\n    ),\n    new Fitting(\n      \"Mobile factory\",\n      \"factory\",\n      50000,\n      true,\n      3,\n      false,\n      2,\n      true,\n      2,\n      3,\n      \"Self-sustaining factory and repair facilities\",\n    ),\n    new Fitting(\n      \"Precognitive nav chamber\",\n      \"psychic\",\n      100000,\n      true,\n      1,\n      false,\n      0,\n      false,\n      1,\n      3,\n      \"Allows a precog to assist in navigation\",\n    ),\n    new Fitting(\n      \"Sensor mask\",\n      \"stealth\",\n      10000,\n      true,\n      1,\n      true,\n      0,\n      false,\n      1,\n      3,\n      \"At long distances, disguise ship as another\",\n    ),\n    new Fitting(\n      \"Ship bay: fighter\",\n      \"carrier\",\n      200000,\n      false,\n      0,\n      false,\n      2,\n      false,\n      2,\n      3,\n      \"Carrier housing for a fighter\",\n    ),\n    new Fitting(\n      \"Ship bay: frigate\",\n      \"carrier\",\n      1000000,\n      false,\n      1,\n      false,\n      4,\n      false,\n      3,\n      3,\n      \"Carrier housing for a frigate\",\n    ),\n    new Fitting(\n      \"Ship's locker\",\n      \"cargo\",\n      2000,\n      true,\n      0,\n      false,\n      0,\n      false,\n      1,\n      3,\n      \"General equipment for the crew\",\n    ),\n    new Fitting(\n      \"Shiptender mount\",\n      \"support\",\n      25000,\n      true,\n      1,\n      false,\n      1,\n      false,\n      1,\n      3,\n      \"Allow another ship to hitch on a spike drive\",\n    ),\n    new Fitting(\n      \"Smuggler's hold\",\n      \"smuggling\",\n      2500,\n      true,\n      0,\n      false,\n      1,\n      false,\n      0,\n      3,\n      \"Small amount of well-hidden cargo space\",\n    ),\n    new Fitting(\n      \"Survey sensor array\",\n      \"sensors\",\n      5000,\n      true,\n      2,\n      false,\n      1,\n      false,\n      1,\n      3,\n      \"Improved planetary sensor array\",\n    ),\n    new Fitting(\n      \"Tractor beams\",\n      \"support\",\n      10000,\n      true,\n      2,\n      false,\n      1,\n      false,\n      1,\n      3,\n      \"Manipulate objects in space at a distance\",\n    ),\n    new Fitting(\n      \"Vehicle transport fittings\",\n      \"carrier\",\n      2500,\n      true,\n      0,\n      false,\n      1,\n      true,\n      1,\n      3,\n      \"Halve tonnage space of carried vehicles\",\n    ),\n    new Fitting(\n      \"Workshop\",\n      \"support\",\n      500,\n      true,\n      1,\n      false,\n      0.5,\n      true,\n      1,\n      3,\n      \"Automated tech workshops for maintenance\",\n    ),\n  ];\n}\n\nexport class DefenseFitting {\n  name: string;\n  fittingType: string;\n  cost: number;\n  costExpands: boolean;\n  power: number;\n  powerExpands: boolean;\n  mass: number;\n  massExpands: boolean;\n  hullClass: number;\n  minimumClass: number;\n  maximumClass: number;\n  effect: string;\n\n  constructor(\n    name: string,\n    cost: number,\n    power: number,\n    mass: number,\n    hullClass: number,\n    effect: string,\n  ) {\n    this.name = name;\n    this.fittingType = \"defense\";\n    this.cost = cost;\n    this.costExpands = true;\n    this.power = power;\n    this.powerExpands = false;\n    this.mass = mass;\n    this.massExpands = true;\n    this.hullClass = hullClass;\n    this.minimumClass = hullClass;\n    this.maximumClass = 4;\n    this.effect = effect;\n  }\n}\n\nfunction allDefenses() {\n  return [\n    new DefenseFitting(\n      \"Ablative Hull Compartments\",\n      100000,\n      5,\n      2,\n      3,\n      \"+1 AC, +20 maximum hit points\",\n    ),\n    new DefenseFitting(\"Augmented Plating\", 25000, 0, 1, 0, \"+2 AC, -1 Speed\"),\n    new DefenseFitting(\n      \"Boarding Countermeasures\",\n      25000,\n      2,\n      1,\n      1,\n      \"Makes enemy boarding more difficult\",\n    ),\n    new DefenseFitting(\"Burst ECM Generator\", 25000, 2, 1, 1, \"Negate one successful hit\"),\n    new DefenseFitting(\"Foxer Drones\", 10000, 2, 1, 3, \"+2 AC for one round when fired, Ammo 5\"),\n    new DefenseFitting(\n      \"Grav Eddy Displacer\",\n      50000,\n      5,\n      2,\n      1,\n      \"1 in 6 chance of any given attack missing\",\n    ),\n    new DefenseFitting(\n      \"Hardened Polyceramic Overlay\",\n      25000,\n      0,\n      1,\n      0,\n      \"AP quality of attacking weapons reduced by 5\",\n    ),\n    new DefenseFitting(\n      \"Planetary Defense Array\",\n      50000,\n      4,\n      2,\n      1,\n      \"Anti-impact and anti-nuke surface defenses\",\n    ),\n    new DefenseFitting(\n      \"Point Defense Lasers\",\n      10000,\n      3,\n      2,\n      1,\n      \"+2 AC versus weapons that use ammo\",\n    ),\n  ];\n}\n\nexport class Weapon {\n  name: string;\n  fittingType: string;\n  cost: number;\n  costExpands: boolean;\n  damage: string;\n  power: number;\n  powerExpands: boolean;\n  mass: number;\n  massExpands: boolean;\n  hardPoints: number;\n  hullClass: number;\n  minimumClass: number;\n  maximumClass: number;\n  TL: number;\n  effect: string;\n  qualities: string[];\n\n  constructor(\n    name: string,\n    cost: number,\n    damage: string,\n    power: number,\n    mass: number,\n    hardPoints: number,\n    hullClass: number,\n    TL: number,\n    qualities: string[],\n  ) {\n    this.name = name;\n    this.fittingType = \"weapon\";\n    this.cost = cost;\n    this.costExpands = false;\n    this.damage = damage;\n    this.power = power;\n    this.powerExpands = false;\n    this.mass = mass;\n    this.massExpands = false;\n    this.hardPoints = hardPoints;\n    this.hullClass = hullClass;\n    this.minimumClass = hullClass;\n    this.maximumClass = 4;\n    this.TL = TL;\n    this.effect = \"Kills things\";\n    this.qualities = qualities;\n  }\n}\n\nfunction allWeapons() {\n  return [\n    new Weapon(\"Multifocal Laser\", 100000, \"1d4\", 5, 1, 1, 0, 4, [\"AP 20\"]),\n    new Weapon(\"Reaper Battery\", 100000, \"3d4\", 4, 1, 1, 0, 4, [\"Clumsy\"]),\n    new Weapon(\"Fractal Impact Charge\", 200000, \"2d6\", 5, 1, 1, 0, 4, [\"AP 15\", \"Ammo 4\"]),\n    new Weapon(\"Polyspectral MES Beam\", 2000000, \"2d4\", 5, 1, 1, 0, 5, [\"AP 25\"]),\n    new Weapon(\"Sandthrower\", 50000, \"2d4\", 3, 1, 1, 0, 4, [\"Flak\"]),\n    new Weapon(\"Flak Emitter Battery\", 500000, \"2d6\", 5, 3, 1, 1, 4, [\"AP 10\", \"Flak\"]),\n    new Weapon(\"Torpedo Launcher\", 500000, \"3d8\", 10, 3, 1, 1, 4, [\"AP 20\", \"Ammo 4\"]),\n    new Weapon(\"Charged Particle Caster\", 800000, \"3d6\", 10, 1, 2, 1, 4, [\"AP 15\", \"Clumsy\"]),\n    new Weapon(\"Plasma Beam\", 700000, \"3d6\", 5, 2, 2, 1, 4, [\"AP 10\"]),\n    new Weapon(\"Mag Spike Array\", 1000000, \"2d6+2\", 5, 2, 2, 0, 4, [\"AP 10\", \"Flak\", \"Ammo 5\"]),\n    new Weapon(\"Nuclear Missiles\", 50000, \"Special\", 5, 1, 2, 0, 4, [\"Ammo 5\"]),\n    new Weapon(\"Spinal Beam Cannon\", 1500000, \"3d10\", 10, 5, 3, 2, 4, [\"AP 15\", \"Clumsy\"]),\n    new Weapon(\"Smart Cloud\", 2000000, \"3d10\", 10, 5, 2, 2, 4, [\"Cloud\", \"Clumsy\"]),\n    new Weapon(\"Gravcannon\", 2000000, \"4d6\", 15, 4, 3, 2, 4, [\"AP 20\"]),\n    new Weapon(\"Spike Inversion Projector\", 2500000, \"3d8\", 10, 3, 3, 2, 4, [\"AP 15\"]),\n    new Weapon(\"Vortex Tunnel Inductor\", 5000000, \"3d20\", 20, 10, 4, 3, 4, [\"AP 20\", \"Clumsy\"]),\n    new Weapon(\"Mass Cannon\", 5000000, \"2d20\", 10, 5, 4, 3, 4, [\"AP 20\", \"Ammo 4\"]),\n    new Weapon(\"Lightning Charge Mantle\", 4000000, \"1d20\", 15, 5, 2, 3, 4, [\"AP 5\", \"Cloud\"]),\n    new Weapon(\"Singularity Gun\", 20000000, \"5d20\", 25, 10, 5, 3, 5, [\"AP 25\"]),\n  ];\n}\n\nfunction randomManufacturerName() {\n  const nameTypes = [\n    {\n      generate: function() {\n        const prefix = RND.item([\n          \"Aether\",\n          \"Kurich\",\n          \"Bulior\",\n          \"Bulloch\",\n          \"Andromeda\",\n          \"Astrogator\",\n          \"Galadyne\",\n          \"Guidenhauser\",\n          \"Legends\",\n          \"Blueshift\",\n          \"Redshift\",\n          \"Andaria\",\n          \"Pax\",\n          \"Interstellar\",\n        ]);\n\n        const suffix = RND.item([\"Corporation\", \"Limited\", \"Technologies\", \"Fleet Systems\"]);\n\n        return prefix + \" \" + suffix;\n      },\n    },\n    {\n      generate: function() {\n        const pre1 = RND.item([\n          \"Xa\",\n          \"Ka\",\n          \"Ga\",\n          \"La\",\n          \"Na\",\n          \"Sa\",\n          \"Xo\",\n          \"Ko\",\n          \"Go\",\n          \"Lo\",\n          \"So\",\n          \"Xe\",\n          \"Ke\",\n          \"Ge\",\n          \"Le\",\n          \"Se\",\n          \"Xi\",\n          \"Ki\",\n          \"Gi\",\n          \"Li\",\n          \"Si\",\n        ]);\n\n        const pre2 = RND.item([\n          \"la\",\n          \"ka\",\n          \"ra\",\n          \"sa\",\n          \"na\",\n          \"pa\",\n          \"le\",\n          \"ke\",\n          \"re\",\n          \"se\",\n          \"ne\",\n          \"pe\",\n          \"li\",\n          \"ki\",\n          \"ri\",\n          \"si\",\n          \"ni\",\n          \"pi\",\n          \"lo\",\n          \"ko\",\n          \"ro\",\n          \"so\",\n          \"no\",\n          \"po\",\n          \"lu\",\n          \"ku\",\n          \"ru\",\n          \"su\",\n          \"nu\",\n          \"pu\",\n        ]);\n\n        const suffix = RND.item([\"dyne\", \"tech\", \"tronics\", \"flux\"]);\n\n        return pre1 + pre2 + suffix;\n      },\n    },\n  ];\n\n  const nameType = RND.item(nameTypes);\n\n  return nameType.generate();\n}\n\nfunction removeFittingFromList(\n  fitting: Fitting | CargoFitting | Weapon | DefenseFitting,\n  fittings: (Fitting | CargoFitting | Weapon | DefenseFitting)[],\n) {\n  const options = [];\n\n  for (let i = 0; i < fittings.length; i++) {\n    if (fittings[i].name != fitting.name) {\n      options.push(fittings[i]);\n    }\n  }\n\n  return options;\n}\n\nfunction removeWeaponFittingFromList(\n  fitting: Weapon,\n  fittings: Weapon[],\n): Weapon[] {\n  const options: Weapon[] = [];\n\n  for (let i = 0; i < fittings.length; i++) {\n    if (fittings[i].name != fitting.name) {\n      options.push(fittings[i]);\n    }\n  }\n\n  return options;\n}\n\nexport function formatAsText(starship: SWNStarship) {\n  let description = Text.header(starship.name);\n\n  description += \"Owner Type: \" + starship.ownerType.name + \"\\n\";\n  description += \"Manufacturer: \" + starship.manufacturer + \"\\n\";\n  description += \"Model: \" + starship.className + \"\\n\";\n  description += \"Hull Type: \" + starship.hullType.name + \"\\n\";\n  description += \"Hull Class: \" + starship.hullType.hullClassName + \"\\n\";\n  description += \"Drive: \" + starship.drive.name + \"\\n\";\n  description += \"Maximum Mass: \" + starship.hullType.mass + \"\\n\";\n  description += \"Mass Used: \" + starship.usedMass + \"\\n\";\n  description += \"Maximum Power: \" + starship.hullType.power + \"\\n\";\n  description += \"Power Used: \" + starship.usedPower + \"\\n\";\n  description += \"AC: \" + starship.hullType.ac + \"\\n\";\n  description += \"HP: \" + starship.hullType.hp + \"\\n\";\n  description += \"Minimum Crew: \" + starship.hullType.crewMinimum + \"\\n\";\n  description += \"Maximum Crew: \" + starship.hullType.crewMaximum + \"\\n\";\n  description += \"Current Crew: \" + starship.currentCrew + \"\\n\";\n  description += \"Total Ship Value: \" + new Intl.NumberFormat(\"en-US\").format(starship.totalCost) + \" credits\\n\";\n  description += \"Total Crew Cost: \"\n    + new Intl.NumberFormat(\"en-US\").format(starship.currentCrew * 43800)\n    + \" credits per year\\n\";\n  description += \"Crew Skill: \" + starship.hullType.crewSkill + \"\\n\";\n  description += \"Cargo Space: \" + starship.tonsOfCargo + \" tons\\n\";\n\n  const fittings = [];\n\n  for (let i = 0; i < starship.fittings.length; i++) {\n    const fitting = starship.fittings[i].name + \": \" + starship.fittings[i].effect;\n    fittings.push(fitting);\n  }\n\n  description += Text.header(\"Fittings\");\n\n  description += Text.list(fittings);\n\n  const weapons = [];\n\n  for (let i = 0; i < starship.weapons.length; i++) {\n    const weapon = starship.weapons[i].name\n      + \": \"\n      + starship.weapons[i].damage\n      + \" damage, \"\n      + starship.weapons[i].qualities.join(\", \");\n    weapons.push(weapon);\n  }\n\n  description += Text.header(\"Weapons\");\n\n  description += Text.list(weapons);\n\n  const defenses = [];\n\n  for (let i = 0; i < starship.defenses.length; i++) {\n    const defense = starship.defenses[i].name + \": \" + starship.defenses[i].effect;\n    defenses.push(defense);\n  }\n\n  description += Text.header(\"Defenses\");\n\n  description += Text.list(defenses);\n\n  return description;\n}\n"],"names":["Gen.generate"],"mappings":"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F,EADhF,EACgF,EADhF,EACgF,EADhF,EACgF,EADhF,EACgF,EADhF,EACgF,CADhF,EACgF,CADhF,EACgF,IAAA,CADhF;AACgF,IACD,IAAA,QAD/E,CAC+E,eAD/E,EAC+E,GAD/E,EAC+E,CAD/E,EAC+E,EAD/E,EAC+E,EAD/E,EAC+E,EAD/E,EAC+E,GAD/E,EAC+E,EAD/E,EAC+E,EAD/E,EAC+E,EAD/E,EAC+E,CAD/E,EAC+E,CAD/E,EAC+E,IAAA,CAD/E;AAC+E,IACM,IAAA,QADrF,CACqF,gBADrF,EACqF,GADrF,EACqF,CADrF,EACqF,CADrF,EACqF,EADrF,EACqF,EADrF,EACqF,EADrF,EACqF,EADrF,EACqF,EADrF,EACqF,EADrF,EACqF,CADrF,EACqF,CADrF,EACqF,IAAA,CADrF;AACqF,IACD,IAAA,QADpF,CACoF,eADpF,EACoF,GADpF,EACoF,CADpF,EACoF,EADpF,EACoF,EADpF,EACoF,EADpF,EACoF,GADpF,EACoF,EADpF,EACoF,EADpF,EACoF,EADpF,EACoF,EADpF,EACoF,CADpF,EACoF,IAAA,CADpF;AACoF,IACG,IAAA,QADvF,CACuF,YADvF,EACuF,GADvF,EACuF,CADvF,EACuF,EADvF,EACuF,GADvF,EACuF,GADvF,EACuF,GADvF,EACuF,EADvF,EACuF,EADvF,EACuF,EADvF,EACuF,EADvF,EACuF,CADvF,EACuF,IAAA,CADvF;AACuF,IACA,IAAA,QADvF,CACuF,SADvF,EACuF,GADvF,EACuF,CADvF,EACuF,EADvF,EACuF,EADvF,EACuF,GADvF,EACuF,IADvF,EACuF,EADvF,EACuF,EADvF,EACuF,GADvF,EACuF,CADvF,EACuF,CADvF,EACuF,IAAA,CADvF;AACuF,GAAvF,CAAA;AAGA,CAAA;AAEA,SAAA,WAAA,CAAA,YAAA,EAAA;AACE,EAAF,MAAE,KAAF,GAAE,YAAF,EAAA,CAAA;AAEE,EAAF,KAAA,IAAE,CAAF,GAAE,CAAF,EAAE,CAAF,GAAE,KAAF,CAAE,MAAF,EAAE,CAAF,EAAA,EAAE;AACE,IAAJ,IAAI,KAAJ,CAAI,CAAA,CAAJ,CAAI,IAAJ,KAAI,YAAJ,EAAI;AACE,MAAN,OAAM,KAAN,CAAM,CAAA,CAAN,CAAA;AAAM,KAAN;AAAoB,GAApB;AAIE,EAAF,OAAE,KAAF,CAAE,CAAA,CAAF,CAAA;AACA,CAAA;AAEA,SAAA,cAAA,CAAA,SAAA,EAAA;AACE,EAAF,OAAE,WAAF,CAAE,GAAF,CAAE,IAAF,CAAE,SAAF,CAAE,iBAAA,CAAA,CAAF,CAAA;AACA,CAAA;AAEO,MAAA,SAAP,CAAO;AAAA,EAAgB,IAAvB,CAAA;AAAuB,EACrB,OADF,CAAA;AACE,EACA,UADF,CAAA;AACE,EACA,iBADF,CAAA;AACE,EACA,kBADF,CAAA;AACE,EACA,iBADF,CAAA;AACE,EACA,mBADF,CAAA;AACE,EACA,aADF,CAAA;AACE,EACA,mBADF,CAAA;AACE,EACA,WADF,CACE,IADF,EACE,OADF,EACE,UADF,EACE,iBADF,EACE,kBADF,EACE,iBADF,EACE,mBADF,EACE,aADF,EACE,mBADF,EACE;AAaE,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,OAAJ,GAAI,OAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,UAAJ,GAAI,UAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,iBAAJ,GAAI,iBAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,kBAAJ,GAAI,kBAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,iBAAJ,GAAI,iBAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,mBAAJ,GAAI,mBAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,aAAJ,GAAI,aAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,mBAAJ,GAAI,mBAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;AAEA,SAAA,uBAAA,GAAA;AACE,EAAF,MAAE,KAAF,GAAE;AAAA,IAAc,IAAA,SAAhB;AAAgB,MACR,UADR;AACQ,MACF,KADN;AACM,MACA,KADN;AACM,MACA,CAAA,SADN,EACM,eAAA,CADN;AACM,MAC2B,WAAA;AAEzB,QAAR,MAAQ,cAAR,GAAQ;AAAA,UAAuB,UAA/B;AAA+B,UACrB,QADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,aADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,UADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,OADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,MADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,MADV;AACU,UACA,OADV;AACU,UACA,UADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,SAAV,CAAA;AAIQ,QAAR,MAAQ,WAAR,GAAQ,GAAR,CAAQ,WAAR,EAAA,CAAA;AAEQ,QAAR,OAAQ,WAAR,GAAQ,GAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,cAAA,CAAR,CAAA;AAAQ,OAAR;AAA0D,MACpD,WAAA;AAEE,QAAR,MAAQ,SAAR,GAAQ;AAAA,UAAkB,SAA1B;AAA0B,UAChB,UADV;AACU,UACA,SADV;AACU,UACA,YADV;AACU,UACA,WADV;AACU,UACA,cADV;AACU,UACA,iBADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,KADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,OADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,QADV;AACU,UACA,MADV;AACU,UACA,QADV;AACU,UACA,OADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,WADV;AACU,UACA,YADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,YADV;AACU,UACA,cADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,SAAV,CAAA;AAIQ,QAAR,OAAQ,GAAR,CAAQ,IAAR,CAAQ,SAAA,CAAR,CAAA;AAAQ,OAAR;AAAiC,MAC3B,OADN;AACM,MACA,KADN;AACM,MACA;AAAA,QACA,OADN;AACM,QACE,QADR;AACQ,QACA,UADR;AACQ,QACA,MADR;AACQ,QACA,MADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,YADR;AACQ,QACA,WADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,SADJ;AACI,MACI,UADR;AACQ,MACF,KADN;AACM,MACA,KADN;AACM,MACA,CAAA,SADN,EACM,eADN,EACM,gBAAA,CADN;AACM,MAC6C,WAAA;AAE3C,QAAR,MAAQ,cAAR,GAAQ;AAAA,UAAuB,UAA/B;AAA+B,UACrB,QADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,aADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,UADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,OADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,MADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,MADV;AACU,UACA,OADV;AACU,UACA,UADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,SAAV,CAAA;AAIQ,QAAR,MAAQ,WAAR,GAAQ,GAAR,CAAQ,WAAR,EAAA,CAAA;AAEQ,QAAR,OAAQ,WAAR,GAAQ,GAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,cAAA,CAAR,CAAA;AAAQ,OAAR;AAA0D,MACpD,WAAA;AAEE,QAAR,MAAQ,SAAR,GAAQ;AAAA,UAAkB,SAA1B;AAA0B,UAChB,UADV;AACU,UACA,SADV;AACU,UACA,YADV;AACU,UACA,WADV;AACU,UACA,cADV;AACU,UACA,iBADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,KADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,OADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,QADV;AACU,UACA,MADV;AACU,UACA,QADV;AACU,UACA,OADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,WADV;AACU,UACA,YADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,YADV;AACU,UACA,cADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,SAAV,CAAA;AAIQ,QAAR,OAAQ,GAAR,CAAQ,IAAR,CAAQ,SAAA,CAAR,CAAA;AAAQ,OAAR;AAAiC,MAC3B,OADN;AACM,MACA,IADN;AACM,MACA;AAAA,QACA,OADN;AACM,QACE,QADR;AACQ,QACA,UADR;AACQ,QACA,MADR;AACQ,QACA,SADR;AACQ,QACA,MADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,YADR;AACQ,QACA,WADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,SADJ;AACI,MACI,aADR;AACQ,MACF,KADN;AACM,MACA,KADN;AACM,MACA,CAAA,SADN,EACM,eADN,EACM,gBAAA,CADN;AACM,MAC6C,WAAA;AAE3C,QAAR,MAAQ,cAAR,GAAQ;AAAA,UAAuB,UAA/B;AAA+B,UACrB,WADV;AACU,UACA,QADV;AACU,UACA,WADV;AACU,UACA,SADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,UACA,WADV;AACU,UACA,MADV;AACU,UACA,MADV;AACU,SAAV,CAAA;AAIQ,QAAR,MAAQ,WAAR,GAAQ,GAAR,CAAQ,WAAR,EAAA,CAAA;AAEQ,QAAR,OAAQ,WAAR,GAAQ,GAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,cAAA,CAAR,CAAA;AAAQ,OAAR;AAA0D,MACpD,WAAA;AAEE,QAAR,MAAQ,SAAR,GAAQ;AAAA,UAAkB,SAA1B;AAA0B,UAChB,UADV;AACU,UACA,SADV;AACU,UACA,YADV;AACU,UACA,WADV;AACU,UACA,cADV;AACU,UACA,iBADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,KADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,OADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,QADV;AACU,UACA,MADV;AACU,UACA,QADV;AACU,UACA,OADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,WADV;AACU,UACA,YADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,YADV;AACU,UACA,cADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,SAAV,CAAA;AAIQ,QAAR,OAAQ,GAAR,CAAQ,IAAR,CAAQ,SAAA,CAAR,CAAA;AAAQ,OAAR;AAAiC,MAC3B,QADN;AACM,MACA,IADN;AACM,MACA;AAAA,QACA,OADN;AACM,QACE,QADR;AACQ,QACA,UADR;AACQ,QACA,MADR;AACQ,QACA,SADR;AACQ,QACA,MADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,YADR;AACQ,QACA,WADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,SADJ;AACI,MACI,iBADR;AACQ,MACF,IADN;AACM,MACA,IADN;AACM,MACA,CAAA,aAAA,CADN;AACM,MACc,WAAA;AAEZ,QAAR,MAAQ,cAAR,GAAQ;AAAA,UAAuB,QAA/B;AAA+B,UACrB,eADV;AACU,UACA,YADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,UADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,UACA,OADV;AACU,SAAV,CAAA;AAIQ,QAAR,MAAQ,WAAR,GAAQ,GAAR,CAAQ,WAAR,EAAA,CAAA;AAEQ,QAAR,OAAQ,WAAR,GAAQ,GAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,cAAA,CAAR,CAAA;AAAQ,OAAR;AAA0D,MACpD,WAAA;AAEE,QAAR,IAAQ,QAAR,GAAQ,EAAR,CAAA;AAEQ,QAAR,QAAA,GAAQ,GAAR,CAAQ,IAAR,CAAQ;AAAA,UAAoB,IAA5B;AAA4B,UAClB,KADV;AACU,UACA,IADV;AACU,UACA,qBADV;AACU,UACA,cADV;AACU,UACA,aADV;AACU,UACA,KADV;AACU,SACA,CADV,CAAA;AAIQ,QAAR,MAAQ,UAAR,GAAQ,MAAR,CAAQ,GAAR,CAAQ,GAAR,EAAQ,GAAA,CAAR,CAAA;AAEQ,QAAR,MAAQ,eAAR,GAAQ,MAAR,CAAQ,GAAR,CAAQ,CAAR,EAAQ,GAAA,CAAR,CAAA;AAEQ,QAAR,IAAQ,eAAR,GAAQ,EAAR,EAAQ;AACE,UAAV,QAAA,IAAU,GAAV,GAAU,UAAV,CAAA;AAAU,SAAV,MAAA,IAA4B,eAA5B,GAA4B,EAA5B,EAA4B;AAElB,UAAV,QAAA,IAAU,GAAV,GAAU,MAAV,CAAU,GAAV,CAAU,CAAV,EAAU,CAAA,CAAV,GAAU,GAAV,GAAU,UAAV,CAAA;AAAU,SAAV,MAAqD;AAE3C,UAAV,QAAA,IAAU,QAAV,GAAU,UAAV,CAAA;AAAU,SAAV;AAGQ,QAAR,OAAQ,QAAR,CAAA;AAAQ,OAAR;AAAe,MACT,SADN;AACM,MACA,KADN;AACM,MACA;AAAA,QACA,OADN;AACM,QACE,UADR;AACQ,QACA,MADR;AACQ,QACA,MADR;AACQ,QACA,SADR;AACQ,QACA,YADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,SADJ;AACI,MACI,yBADR;AACQ,MACF,IADN;AACM,MACA,KADN;AACM,MACA,CAAA,eADN,EACM,YADN,EACM,SAAA,CADN;AACM,MACyC,WAAA;AAEvC,QAAR,MAAQ,cAAR,GAAQ;AAAA,UAAuB,YAA/B;AAA+B,UACrB,WADV;AACU,UACA,UADV;AACU,UACA,aADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,SADV;AACU,UACA,aADV;AACU,UACA,WADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,aADV;AACU,UACA,OADV;AACU,UACA,WADV;AACU,UACA,YADV;AACU,SAAV,CAAA;AAIQ,QAAR,OAAQ,GAAR,CAAQ,IAAR,CAAQ,cAAA,CAAR,GAAQ,QAAR,CAAA;AAAQ,OAAR;AAA0C,MACpC,WAAA;AAEE,QAAR,MAAQ,SAAR,GAAQ;AAAA,UAAkB,eAA1B;AAA0B,UAChB,eADV;AACU,UACA,QADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,UADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,OADV;AACU,UACA,OADV;AACU,UACA,SADV;AACU,UACA,WADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,WADV;AACU,UACA,WADV;AACU,UACA,SADV;AACU,UACA,MADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,UACA,WADV;AACU,UACA,WADV;AACU,UACA,SADV;AACU,SAAV,CAAA;AAIQ,QAAR,MAAQ,UAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,CAAA,KAAR,EAAQ,KAAR,EAAQ,KAAA,CAAA,CAAR,CAAA;AAEQ,QAAR,OAAQ,UAAR,GAAQ,GAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,SAAA,CAAR,CAAA;AAAQ,OAAR;AAAoD,MAC9C,SADN;AACM,MACA,KADN;AACM,MACA;AAAA,QACA,OADN;AACM,QACE,UADR;AACQ,QACA,MADR;AACQ,QACA,MADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,YADR;AACQ,QACA,WADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,QADR;AACQ,QACA,SADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,SADJ;AACI,MACI,oBADR;AACQ,MACF,IADN;AACM,MACA,KADN;AACM,MACA,CAAA,aADN,EACM,UADN,EACM,eAAA,CADN;AACM,MAC2C,WAAA;AAEzC,QAAR,MAAQ,cAAR,GAAQ;AAAA,UAAuB,UAA/B;AAA+B,UACrB,QADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,OADV;AACU,UACA,SADV;AACU,UACA,WADV;AACU,UACA,MADV;AACU,UACA,QADV;AACU,UACA,MADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,OADV;AACU,UACA,SADV;AACU,SAAV,CAAA;AAIQ,QAAR,OAAQ,GAAR,CAAQ,IAAR,CAAQ,cAAA,CAAR,GAAQ,QAAR,CAAA;AAAQ,OAAR;AAA0C,MACpC,WAAA;AAEE,QAAR,MAAQ,SAAR,GAAQ;AAAA,UAAkB,WAA1B;AAA0B,UAChB,WADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,UACA,OADV;AACU,UACA,UADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,OADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,OADV;AACU,UACA,MADV;AACU,UACA,QADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,QADV;AACU,UACA,WADV;AACU,UACA,MADV;AACU,SAAV,CAAA;AAIQ,QAAR,MAAQ,UAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,CAAA,KAAR,EAAQ,KAAR,EAAQ,KAAA,CAAA,CAAR,CAAA;AAEQ,QAAR,OAAQ,UAAR,GAAQ,GAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,SAAA,CAAR,CAAA;AAAQ,OAAR;AAAoD,MAC9C,SADN;AACM,MACA,KADN;AACM,MACA;AAAA,QACA,OADN;AACM,QACE,UADR;AACQ,QACA,MADR;AACQ,QACA,MADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,YADR;AACQ,QACA,WADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,SADJ;AACI,MACI,QADR;AACQ,MACF,IADN;AACM,MACA,KADN;AACM,MACA,CAAA,gBADN,EACM,aADN,EACM,UADN,EACM,eAAA,CADN;AACM,MAC6D,WAAA;AAE3D,QAAR,MAAQ,cAAR,GAAQ;AAAA,UAAuB,UAA/B;AAA+B,UACrB,QADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,aADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,UADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,OADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,MADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,MADV;AACU,UACA,OADV;AACU,UACA,UADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,SAAV,CAAA;AAIQ,QAAR,MAAQ,WAAR,GAAQ,GAAR,CAAQ,WAAR,EAAA,CAAA;AAEQ,QAAR,OAAQ,WAAR,GAAQ,GAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,cAAA,CAAR,CAAA;AAAQ,OAAR;AAA0D,MACpD,WAAA;AAEE,QAAR,MAAQ,SAAR,GAAQ;AAAA,UAAkB,SAA1B;AAA0B,UAChB,OADV;AACU,UACA,aADV;AACU,UACA,OADV;AACU,UACA,aADV;AACU,UACA,WADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,WADV;AACU,UACA,SADV;AACU,UACA,WADV;AACU,UACA,SADV;AACU,UACA,cADV;AACU,UACA,YADV;AACU,UACA,YADV;AACU,UACA,cADV;AACU,UACA,SADV;AACU,UACA,WADV;AACU,UACA,QADV;AACU,UACA,WADV;AACU,UACA,YADV;AACU,UACA,YADV;AACU,SAAV,CAAA;AAIQ,QAAR,OAAQ,GAAR,CAAQ,IAAR,CAAQ,SAAA,CAAR,CAAA;AAAQ,OAAR;AAAiC,MAC3B,SADN;AACM,MACA,KADN;AACM,MACA;AAAA,QACA,OADN;AACM,QACE,UADR;AACQ,QACA,MADR;AACQ,QACA,MADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,YADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,QADR;AACQ,QACA,SADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,SADJ;AACI,MACI,UADR;AACQ,MACF,IADN;AACM,MACA,KADN;AACM,MACA,CAAA,eADN,EACM,aAAA,CADN;AACM,MAC+B,WAAA;AAE7B,QAAR,MAAQ,cAAR,GAAQ;AAAA,UAAuB,UAA/B;AAA+B,UACrB,QADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,aADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,UADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,OADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,MADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,MADV;AACU,UACA,OADV;AACU,UACA,UADV;AACU,UACA,SADV;AACU,UACA,SADV;AACU,SAAV,CAAA;AAIQ,QAAR,MAAQ,WAAR,GAAQ,GAAR,CAAQ,WAAR,EAAA,CAAA;AAEQ,QAAR,OAAQ,WAAR,GAAQ,GAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,cAAA,CAAR,CAAA;AAAQ,OAAR;AAA0D,MACpD,WAAA;AAEE,QAAR,MAAQ,SAAR,GAAQ;AAAA,UAAkB,SAA1B;AAA0B,UAChB,UADV;AACU,UACA,SADV;AACU,UACA,YADV;AACU,UACA,WADV;AACU,UACA,cADV;AACU,UACA,iBADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,KADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,OADV;AACU,UACA,UADV;AACU,UACA,WADV;AACU,UACA,QADV;AACU,UACA,MADV;AACU,UACA,QADV;AACU,UACA,OADV;AACU,UACA,OADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,QADV;AACU,UACA,QADV;AACU,UACA,WADV;AACU,UACA,YADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,YADV;AACU,UACA,cADV;AACU,UACA,SADV;AACU,UACA,UADV;AACU,SAAV,CAAA;AAIQ,QAAR,OAAQ,GAAR,CAAQ,IAAR,CAAQ,SAAA,CAAR,CAAA;AAAQ,OAAR;AAAiC,MAC3B,WADN;AACM,MACA,IADN;AACM,MACA;AAAA,QACA,OADN;AACM,QACE,UADR;AACQ,QACA,MADR;AACQ,QACA,MADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,YADR;AACQ,QACA,WADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,QACA,WADR;AACQ,QACA,SADR;AACQ,QACA,SADR;AACQ,OAAR;AACQ,KAAR;AACM,GAAN,CAAA;AAIE,EAAF,OAAE,GAAF,CAAE,IAAF,CAAE,KAAA,CAAF,CAAA;AACA,CAAA;AAEO,MAAA,YAAP,CAAO;AAAA,EAAmB,IAA1B,CAAA;AAA0B,EACxB,IADF,CAAA;AACE,EACA,WADF,CAAA;AACE,EACA,KADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,MADF,CAAA;AACE,EACA,WADF,CACE,IADF,EACE,IADF,EACE,KADF,EACE,IADF,EACE,YADF,EACE,YADF,EACE,MADF,EACE;AAWE,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,KAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,YAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,YAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,MAAJ,GAAI,MAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;AAEA,SAAA,eAAA,GAAA;AACE,EAAF,OAAE,IAAA,YAAF,CAAE,eAAF,EAAE,CAAF,EAAE,CAAF,EAAE,CAAF,EAAE,CAAF,EAAE,CAAF,EAAE,uBAAA,CAAF,CAAA;AACA,CAAA;AAEA,SAAA,gBAAA,GAAA;AACE,EAAF,OAAE;AAAA,IAAO,IAAA,YAAT,CAAS,eAAT,EAAS,GAAT,EAAS,CAAT,EAAS,CAAT,EAAS,CAAT,EAAS,CAAT,EAAS,yCAAA,CAAT;AAAS,IACyF,IAAA,YADlG,CACkG,eADlG,EACkG,GADlG,EACkG,CADlG,EACkG,CADlG,EACkG,CADlG,EACkG,CADlG,EACkG,yCAAA,CADlG;AACkG,IACA,IAAA,YADlG,CACkG,eADlG,EACkG,GADlG,EACkG,CADlG,EACkG,CADlG,EACkG,CADlG,EACkG,CADlG,EACkG,yCAAA,CADlG;AACkG,IACA,IAAA,YADlG;AACkG,MAC1F,eADR;AACQ,MACF,GADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,yCADN;AACM,KAAN;AACM,IACF,IAAA,YADJ;AACI,MACI,eADR;AACQ,MACF,GADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,yCADN;AACM,KAAN;AACM,GAAN,CAAA;AAGA,CAAA;AAEA,SAAA,iBAAA,CAAA,WAAA,EAAA;AACE,EAAF,MAAE,GAAF,GAAE,WAAF,EAAA,CAAA;AACE,EAAF,MAAE,MAAF,GAAE,EAAF,CAAA;AAEE,EAAF,KAAA,IAAE,CAAF,GAAE,CAAF,EAAE,CAAF,GAAE,GAAF,CAAE,MAAF,EAAE,CAAF,EAAA,EAAE;AACE,IAAJ,IAAI,GAAJ,CAAI,CAAA,CAAJ,CAAI,WAAJ,KAAI,WAAJ,EAAI;AACE,MAAN,MAAA,CAAM,IAAN,CAAM,GAAN,CAAM,CAAA,CAAA,CAAN,CAAA;AAAM,KAAN;AAAwB,GAAxB;AAIE,EAAF,OAAE,MAAF,CAAA;AACA,CAAA;AAEO,MAAA,YAAP,CAAO;AAAA,EAAmB,IAA1B,CAAA;AAA0B,EACxB,WADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CAAA;AACE,EACA,KADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,MADF,CAAA;AACE,EACA,WADF,CACE,IADF,EACE,IADF,EACE,KADF,EACE,IADF,EACE,YADF,EACE,YADF,EACE,MADF,EACE;AAWE,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,OAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,KAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,YAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,YAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,MAAJ,GAAI,MAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;AAEO,MAAA,OAAP,CAAO;AAAA,EAAc,IAArB,CAAA;AAAqB,EACnB,WADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CAAA;AACE,EACA,KADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,MADF,CAAA;AACE,EACA,WADF,CACE,IADF,EACE,WADF,EACE,IADF,EACE,WADF,EACE,KADF,EACE,YADF,EACE,IADF,EACE,WADF,EACE,YADF,EACE,YADF,EACE,MADF,EACE;AAeE,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,WAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,WAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,KAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,YAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,WAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,YAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,YAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,MAAJ,GAAI,MAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;AAEA,SAAA,WAAA,GAAA;AACE,EAAF,OAAE;AAAA,IAAO,IAAA,OAAT;AAAS,MACD,cADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,uCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,uBADR;AACQ,MACF,YADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,8CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,sBADR;AACQ,MACF,SADN;AACM,MACA,IADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,sCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,QADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,gCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,2BADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,UADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,uBADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,0CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,oBADR;AACQ,MACF,UADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,oCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,gBADR;AACQ,MACF,QADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,4CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,eADR;AACQ,MACF,SADN;AACM,MACA,IADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,gCADN;AACM,KAAN;AACM,IACF,IAAA,YADJ,CACI,aADJ,EACI,CADJ,EACI,CADJ,EACI,CADJ,EACI,CADJ,EACI,CADJ,EACI,yBAAA,CADJ;AACI,IACwE,IAAA,OAD5E;AAC4E,MACpE,iBADR;AACQ,MACF,WADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,2BADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,aADR;AACQ,MACF,QADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,8CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,wBADR;AACQ,MACF,YADN;AACM,MACA,IADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,2CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,UADR;AACQ,MACF,QADN;AACM,MACA,GADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,kCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,mBADR;AACQ,MACF,SADN;AACM,MACA,IADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,4CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,YADR;AACQ,MACF,WADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,6CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,uBADR;AACQ,MACF,MADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,2BADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,iBADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,2CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,iBADR;AACQ,MACF,MADN;AACM,MACA,IADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,0CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,cADR;AACQ,MACF,MADN;AACM,MACA,IADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,+CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,aADR;AACQ,MACF,MADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,8CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,uBADR;AACQ,MACF,MADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,sCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,WADR;AACQ,MACF,SADN;AACM,MACA,IADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,0CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,eADR;AACQ,MACF,MADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,4CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,kBADR;AACQ,MACF,QADN;AACM,MACA,GADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,oCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,gBADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,+CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,0BADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,yCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,aADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,6CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,mBADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,+BADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,mBADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,+BADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,eADR;AACQ,MACF,OADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,gCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,kBADR;AACQ,MACF,SADN;AACM,MACA,IADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,8CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,iBADR;AACQ,MACF,WADN;AACM,MACA,IADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,yCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,qBADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,iCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,eADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,2CADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,4BADR;AACQ,MACF,SADN;AACM,MACA,IADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,CADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,yCADN;AACM,KAAN;AACM,IACF,IAAA,OADJ;AACI,MACI,UADR;AACQ,MACF,SADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,KADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,0CADN;AACM,KAAN;AACM,GAAN,CAAA;AAGA,CAAA;AAEO,MAAA,cAAP,CAAO;AAAA,EAAqB,IAA5B,CAAA;AAA4B,EAC1B,WADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CAAA;AACE,EACA,KADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CAAA;AACE,EACA,SADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,MADF,CAAA;AACE,EACA,WADF,CACE,IADF,EACE,IADF,EACE,KADF,EACE,IADF,EACE,SADF,EACE,MADF,EACE;AAUE,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,SAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,KAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,SAAJ,GAAI,SAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,SAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,CAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,MAAJ,GAAI,MAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;AAEA,SAAA,WAAA,GAAA;AACE,EAAF,OAAE;AAAA,IAAO,IAAA,cAAT;AAAS,MACD,4BADR;AACQ,MACF,GADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,+BADN;AACM,KAAN;AACM,IACF,IAAA,cADJ,CACI,mBADJ,EACI,IADJ,EACI,CADJ,EACI,CADJ,EACI,CADJ,EACI,iBAAA,CADJ;AACI,IACyE,IAAA,cAD7E;AAC6E,MACrE,0BADR;AACQ,MACF,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,qCADN;AACM,KAAN;AACM,IACF,IAAA,cADJ,CACI,qBADJ,EACI,IADJ,EACI,CADJ,EACI,CADJ,EACI,CADJ,EACI,2BAAA,CADJ;AACI,IACqF,IAAA,cADzF,CACyF,cADzF,EACyF,GADzF,EACyF,CADzF,EACyF,CADzF,EACyF,CADzF,EACyF,wCAAA,CADzF;AACyF,IACM,IAAA,cAD/F;AAC+F,MACvF,qBADR;AACQ,MACF,GADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,2CADN;AACM,KAAN;AACM,IACF,IAAA,cADJ;AACI,MACI,8BADR;AACQ,MACF,IADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,8CADN;AACM,KAAN;AACM,IACF,IAAA,cADJ;AACI,MACI,yBADR;AACQ,MACF,GADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,4CADN;AACM,KAAN;AACM,IACF,IAAA,cADJ;AACI,MACI,sBADR;AACQ,MACF,GADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,oCADN;AACM,KAAN;AACM,GAAN,CAAA;AAGA,CAAA;AAEO,MAAA,MAAP,CAAO;AAAA,EAAa,IAApB,CAAA;AAAoB,EAClB,WADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CAAA;AACE,EACA,MADF,CAAA;AACE,EACA,KADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CAAA;AACE,EACA,UADF,CAAA;AACE,EACA,SADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,YADF,CAAA;AACE,EACA,EADF,CAAA;AACE,EACA,MADF,CAAA;AACE,EACA,SADF,CAAA;AACE,EACA,WADF,CACE,IADF,EACE,IADF,EACE,MADF,EACE,KADF,EACE,IADF,EACE,UADF,EACE,SADF,EACE,EADF,EACE,SADF,EACE;AAaE,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,QAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,MAAJ,GAAI,MAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,KAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,UAAJ,GAAI,UAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,SAAJ,GAAI,SAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,SAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,YAAJ,GAAI,CAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,EAAJ,GAAI,EAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,MAAJ,GAAI,cAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,SAAJ,GAAI,SAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;AAEA,SAAA,UAAA,GAAA;AACE,EAAF,OAAE;AAAA,IAAO,IAAA,MAAT,CAAS,kBAAT,EAAS,GAAT,EAAS,KAAT,EAAS,CAAT,EAAS,CAAT,EAAS,CAAT,EAAS,CAAT,EAAS,CAAT,EAAS,CAAA,OAAA,CAAA,CAAT;AAAS,IACiE,IAAA,MAD1E,CAC0E,gBAD1E,EAC0E,GAD1E,EAC0E,KAD1E,EAC0E,CAD1E,EAC0E,CAD1E,EAC0E,CAD1E,EAC0E,CAD1E,EAC0E,CAD1E,EAC0E,CAAA,QAAA,CAAA,CAD1E;AAC0E,IACD,IAAA,MADzE,CACyE,uBADzE,EACyE,GADzE,EACyE,KADzE,EACyE,CADzE,EACyE,CADzE,EACyE,CADzE,EACyE,CADzE,EACyE,CADzE,EACyE,CAAA,OADzE,EACyE,QAAA,CAAA,CADzE;AACyE,IACgB,IAAA,MADzF,CACyF,uBADzF,EACyF,GADzF,EACyF,KADzF,EACyF,CADzF,EACyF,CADzF,EACyF,CADzF,EACyF,CADzF,EACyF,CADzF,EACyF,CAAA,OAAA,CAAA,CADzF;AACyF,IACT,IAAA,MADhF,CACgF,aADhF,EACgF,GADhF,EACgF,KADhF,EACgF,CADhF,EACgF,CADhF,EACgF,CADhF,EACgF,CADhF,EACgF,CADhF,EACgF,CAAA,MAAA,CAAA,CADhF;AACgF,IACb,IAAA,MADnE,CACmE,sBADnE,EACmE,GADnE,EACmE,KADnE,EACmE,CADnE,EACmE,CADnE,EACmE,CADnE,EACmE,CADnE,EACmE,CADnE,EACmE,CAAA,OADnE,EACmE,MAAA,CAAA,CADnE;AACmE,IACmB,IAAA,MADtF,CACsF,kBADtF,EACsF,GADtF,EACsF,KADtF,EACsF,EADtF,EACsF,CADtF,EACsF,CADtF,EACsF,CADtF,EACsF,CADtF,EACsF,CAAA,OADtF,EACsF,QAAA,CAAA,CADtF;AACsF,IACD,IAAA,MADrF,CACqF,yBADrF,EACqF,GADrF,EACqF,KADrF,EACqF,EADrF,EACqF,CADrF,EACqF,CADrF,EACqF,CADrF,EACqF,CADrF,EACqF,CAAA,OADrF,EACqF,QAAA,CAAA,CADrF;AACqF,IACO,IAAA,MAD5F,CAC4F,aAD5F,EAC4F,GAD5F,EAC4F,KAD5F,EAC4F,CAD5F,EAC4F,CAD5F,EAC4F,CAD5F,EAC4F,CAD5F,EAC4F,CAD5F,EAC4F,CAAA,OAAA,CAAA,CAD5F;AAC4F,IACvB,IAAA,MADrE,CACqE,iBADrE,EACqE,GADrE,EACqE,OADrE,EACqE,CADrE,EACqE,CADrE,EACqE,CADrE,EACqE,CADrE,EACqE,CADrE,EACqE,CAAA,OADrE,EACqE,MADrE,EACqE,QAAA,CAAA,CADrE;AACqE,IACyB,IAAA,MAD9F,CAC8F,kBAD9F,EAC8F,GAD9F,EAC8F,SAD9F,EAC8F,CAD9F,EAC8F,CAD9F,EAC8F,CAD9F,EAC8F,CAD9F,EAC8F,CAD9F,EAC8F,CAAA,QAAA,CAAA,CAD9F;AAC8F,IAChB,IAAA,MAD9E,CAC8E,oBAD9E,EAC8E,IAD9E,EAC8E,MAD9E,EAC8E,EAD9E,EAC8E,CAD9E,EAC8E,CAD9E,EAC8E,CAD9E,EAC8E,CAD9E,EAC8E,CAAA,OAD9E,EAC8E,QAAA,CAAA,CAD9E;AAC8E,IACW,IAAA,MADzF,CACyF,aADzF,EACyF,GADzF,EACyF,MADzF,EACyF,EADzF,EACyF,CADzF,EACyF,CADzF,EACyF,CADzF,EACyF,CADzF,EACyF,CAAA,OADzF,EACyF,QAAA,CAAA,CADzF;AACyF,IACP,IAAA,MADlF,CACkF,YADlF,EACkF,GADlF,EACkF,KADlF,EACkF,EADlF,EACkF,CADlF,EACkF,CADlF,EACkF,CADlF,EACkF,CADlF,EACkF,CAAA,OAAA,CAAA,CADlF;AACkF,IACZ,IAAA,MADtE,CACsE,2BADtE,EACsE,IADtE,EACsE,KADtE,EACsE,EADtE,EACsE,CADtE,EACsE,CADtE,EACsE,CADtE,EACsE,CADtE,EACsE,CAAA,OAAA,CAAA,CADtE;AACsE,IACe,IAAA,MADrF,CACqF,wBADrF,EACqF,GADrF,EACqF,MADrF,EACqF,EADrF,EACqF,EADrF,EACqF,CADrF,EACqF,CADrF,EACqF,CADrF,EACqF,CAAA,OADrF,EACqF,QAAA,CAAA,CADrF;AACqF,IACS,IAAA,MAD9F,CAC8F,aAD9F,EAC8F,GAD9F,EAC8F,MAD9F,EAC8F,EAD9F,EAC8F,CAD9F,EAC8F,CAD9F,EAC8F,CAD9F,EAC8F,CAD9F,EAC8F,CAAA,OAD9F,EAC8F,QAAA,CAAA,CAD9F;AAC8F,IACZ,IAAA,MADlF,CACkF,yBADlF,EACkF,GADlF,EACkF,MADlF,EACkF,EADlF,EACkF,CADlF,EACkF,CADlF,EACkF,CADlF,EACkF,CADlF,EACkF,CAAA,MADlF,EACkF,OAAA,CAAA,CADlF;AACkF,IACU,IAAA,MAD5F,CAC4F,iBAD5F,EAC4F,GAD5F,EAC4F,MAD5F,EAC4F,EAD5F,EAC4F,EAD5F,EAC4F,CAD5F,EAC4F,CAD5F,EAC4F,CAD5F,EAC4F,CAAA,OAAA,CAAA,CAD5F;AAC4F,GAA5F,CAAA;AAGA,CAAA;AAEA,SAAA,sBAAA,GAAA;AACE,EAAF,MAAE,SAAF,GAAE;AAAA,IAAkB;AAAA,MAChB,QADJ,EACI,WAAA;AAEI,QAAR,MAAQ,MAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ;AAAA,UAAwB,QAAhC;AAAgC,UACtB,QADV;AACU,UACA,QADV;AACU,UACA,SADV;AACU,UACA,WADV;AACU,UACA,YADV;AACU,UACA,UADV;AACU,UACA,cADV;AACU,UACA,SADV;AACU,UACA,WADV;AACU,UACA,UADV;AACU,UACA,SADV;AACU,UACA,KADV;AACU,UACA,cADV;AACU,SACA,CADV,CAAA;AAIQ,QAAR,MAAQ,MAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,CAAA,aAAR,EAAQ,SAAR,EAAQ,cAAR,EAAQ,eAAA,CAAA,CAAR,CAAA;AAEQ,QAAR,OAAQ,MAAR,GAAQ,GAAR,GAAQ,MAAR,CAAA;AAAQ,OAAR;AAA8B,KAA9B;AACM,IACF;AAAA,MACA,QADJ,EACI,WAAA;AAEI,QAAR,MAAQ,IAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ;AAAA,UAAsB,IAA9B;AAA8B,UACpB,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,SACA,CADV,CAAA;AAIQ,QAAR,MAAQ,IAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ;AAAA,UAAsB,IAA9B;AAA8B,UACpB,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,UACA,IADV;AACU,SACA,CADV,CAAA;AAIQ,QAAR,MAAQ,MAAR,GAAQ,GAAR,CAAQ,IAAR,CAAQ,CAAA,MAAR,EAAQ,MAAR,EAAQ,SAAR,EAAQ,MAAA,CAAA,CAAR,CAAA;AAEQ,QAAR,OAAQ,IAAR,GAAQ,IAAR,GAAQ,MAAR,CAAA;AAAQ,OAAR;AAA6B,KAA7B;AACM,GAAN,CAAA;AAIE,EAAF,MAAE,QAAF,GAAE,GAAF,CAAE,IAAF,CAAE,SAAA,CAAF,CAAA;AAEE,EAAF,OAAE,QAAF,CAAE,QAAF,EAAA,CAAA;AACA,CAAA;AAEA,SAAA,qBAAA,CAAA,OAAA,EAAA,QAAA,EAAA;AAIE,EAAF,MAAE,OAAF,GAAE,EAAF,CAAA;AAEE,EAAF,KAAA,IAAE,CAAF,GAAE,CAAF,EAAE,CAAF,GAAE,QAAF,CAAE,MAAF,EAAE,CAAF,EAAA,EAAE;AACE,IAAJ,IAAI,QAAJ,CAAI,CAAA,CAAJ,CAAI,IAAJ,IAAI,OAAJ,CAAI,IAAJ,EAAI;AACE,MAAN,OAAA,CAAM,IAAN,CAAM,QAAN,CAAM,CAAA,CAAA,CAAN,CAAA;AAAM,KAAN;AAA8B,GAA9B;AAIE,EAAF,OAAE,OAAF,CAAA;AACA,CAAA;AAEA,SAAA,2BAAA,CAAA,OAAA,EAAA,QAAA,EAAA;AAIE,EAAF,MAAE,OAAF,GAAE,EAAF,CAAA;AAEE,EAAF,KAAA,IAAE,CAAF,GAAE,CAAF,EAAE,CAAF,GAAE,QAAF,CAAE,MAAF,EAAE,CAAF,EAAA,EAAE;AACE,IAAJ,IAAI,QAAJ,CAAI,CAAA,CAAJ,CAAI,IAAJ,IAAI,OAAJ,CAAI,IAAJ,EAAI;AACE,MAAN,OAAA,CAAM,IAAN,CAAM,QAAN,CAAM,CAAA,CAAA,CAAN,CAAA;AAAM,KAAN;AAA8B,GAA9B;AAIE,EAAF,OAAE,OAAF,CAAA;AACA,CAAA;;;;;;ADnmEA,EAAA,IAAM,IAAN,GAAa,GAAb,CAAiB,YAAjB,CAA8B,EAAE,CAAhC,CAAA;AACE,EAAF,MAAA,CAAS,GAAT,CAAa,UAAb,CAAwB,IAAI,CAAA,CAA5B,CAAA;AACM,EAAN,IAAM,QAAN,GAAiBA,QAAjB,EAAA,CAAA;;AAwCA,EAAA,OAAA,CAAA,EAAA,QAAA,CAAA,IAAA,IAAA,CAAA,iCAAA,EAAA,QAAA,CAAA,KAAA,GAAA,CAAA,qEAAA,CAAA,EAAA,EAAA,CAAA,+BAAA,CAAA,EAAA,EAAA,CAAA,iVAAA,EAAA,aAAA,CAAA,OAAA,EAA+C,IAA/C,EAAmD,CAAA,CAAA,CAAnD,uSAAA,EAAmD,MAAnD,CAMO,QANP,CAMgB,IAAI,CANpB,CAAA,gHAAA,EAAA,MAAA,CAQmC,QARnC,CAQ4C,SAR5C,CAQsD,IAAI,CAR1D,CAAA,iHAAA,EAAA,MAAA,CASqC,QATrC,CAS8C,YAAY,CAC5B,CAV9B,2GAAA,EAU8B,MAV9B,CAU8B,QAV9B,CAUuC,SAAS,CAAA,CAVhD,8GAAA,EAUgD,MAVhD,CAWkC,QAXlC,CAW2C,QAX3C,CAWoD,IAAI,CAAA,CAXxD,gHAAA,EAWwD,MAXxD,CAYmC,QAZnC,CAY4C,QAZ5C,CAYqD,aAAa,CAAA,CAZlE,yGAAA,EAYkE,MAZlE,CAa8B,QAb9B,CAauC,KAbvC,CAa6C,IAAI,CAAA,CAbjD,0GAAA,EAaiD,MAbjD,CAgBK,QAhBL,CAgBc,QAAQ,CAhBtB,CAAA,CAAA,EAAA,MAAA,CAgByB,QAhBzB,CAgBkC,QAhBlC,CAgB2C,IAAI,CAAA,CAhB/C;AAgB+C,KAA/C,EACM,MADN,CACM,QADN,CACe,QADf,CACwB,IADxB,GAC+B,QAD/B,CACwC,QAAQ,CAI3C,CALL,gHAAA,EAKK,MALL,CAKK,QALL,CAKc,SAAS,CAAA,CALvB,CAAA,EAKuB,MALvB,CAK0B,QAL1B,CAKmC,QALnC,CAK4C,KAAK,CAAA,CALjD;AAKiD,KAAjD,EACM,MADN,CACM,QADN,CACe,QADf,CACwB,KADxB,GACgC,QADhC,CACyC,SAAS,CAI7C,CALL,sHAAA,EAKK,MALL,CAKK,QALL,CAKc,cAAc,CAAA,CAL5B,CAAA,EAK4B,MAL5B,CAK+B,QAL/B,CAKwC,QALxC,CAKiD,UAAU,CAAA,CAL3D;AAK2D,KAA3D,EACM,MADN,CACM,QADN,CACe,QADf,CACwB,UADxB,GACqC,QADrC,CAC8C,cAAc,CAAA,CAD5D,gHAAA,EAC4D,MAD5D,CAG8B,QAH9B,CAGuC,QAHvC,CAGgD,KAAK,CAHrD,CAAA,2GAAA,EAAA,MAAA,CAI8B,QAJ9B,CAIuC,QAJvC,CAIgD,KAAK,CAAA,CAJrD,uGAAA,EAIqD,MAJrD,CAK2B,QAL3B,CAKoC,QALpC,CAK6C,EAAE,CACpB,CAN3B,wGAAA,EAM2B,MAN3B,CAM2B,QAN3B,CAMoC,QANpC,CAM6C,EAAE,CAAA,CAN/C,kHAAA,EAM+C,MAN/C,CAOqC,QAPrC,CAO8C,QAP9C,CAOuD,WAAW,CAC7B,CARrC,iHAAA,EAQqC,MARrC,CAQqC,QARrC,CAQ8C,QAR9C,CAQuD,WAAW,CAAA,CARlE,kHAAA,EAQkE,MARlE,CASqC,QATrC,CAS8C,WAAW,CAGhD,CAZT,qHAAA,EAYS,MAZT,CAYS,IAAA,IAZT,CAYc,YAZd,CAY2B,OAAO,CAZlC,CAYoC,MAZpC,CAY2C,QAZ3C,CAYoD,SAAS,CAIpD,CAAA,CAhBT,6HAAA,EAgBS,MAhBT,CAgBS,IAAA,IAhBT,CAgBc,YAhBd,CAgB2B,OAAO,CAhBlC,CAgBoC,MAhBpC,CAgB2C,QAhB3C,CAgBoD,WAhBpD,GAgBkE,KAAK,CAAA,CAAA,CAhBvE;AAgBuE,oIAAvE,EAAA,MAAA,CAGmC,QAHnC,CAG4C,QAH5C,CAGqD,SAAS,CAAA,CAH9D,iHAAA,EAG8D,MAH9D,CAIoC,QAJpC,CAI6C,WAAW,CAAA,CAJxD,gFAAA,EAIwD,IAJxD,CAQS,QART,CAQkB,QARlB,EAQ0B,CAR1B,OAAA,KAQ0B;AAEnB,IAAP,OAAO,CAAP,2BAAA,EAAO,MAAP,CAAO,OAAP,CAAe,IAAI,CAAK,CAAxB,GAAA,EAAwB,MAAxB,CAAwB,OAAxB,CAAgC,MAAM,CAAA,CAAtC,OAAA,CAAA,CAAA;AAAsC,GAM7B,CAAA,CANT,uEAAA,EAMS,IANT,CAMS,QANT,CAMkB,OANlB,EAMyB,CANzB,MAAA,KAMyB;AAElB,IAAP,OAAO,CAAP,2BAAA,EAAO,MAAP,CAAO,MAAP,CAAc,IAAI,CAAI,CAAtB,EAAA,EAAsB,MAAtB,CAAsB,MAAtB,CAA6B,MAAM,CAAI,CAAvC,EAAA,EAAuC,MAAvC,CAAuC,MAAvC,CAA8C,SAA9C,CAAwD,IAAxD,CAA6D,IAAI,CAAA,CAAA,CAAjE;AAAiE,UAAjE,CAAA,CAAA;AAAiE,GAMxD,CAAA,CANT,uEAAA,EAMS,IANT,CAMS,QANT,CAMkB,QANlB,EAM0B,CAN1B,OAAA,KAM0B;AAEnB,IAAP,OAAO,CAAP,2BAAA,EAAO,MAAP,CAAO,OAAP,CAAe,IAAI,CAAI,CAAvB,EAAA,EAAuB,MAAvB,CAAuB,OAAvB,CAA+B,MAAM,CAAA,CAArC,OAAA,CAAA,CAAA;AAAqC,GAArC,CAAA,CAAA,UAAA,CAAA,CAAA;;;;;"}