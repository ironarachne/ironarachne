{"version":3,"file":"generator-d2b2f956.js","sources":["../../../../src/lib/religion/generator.ts","../../../../src/lib/religion/religion.ts","../../../../src/lib/religion/realms/generator.ts","../../../../src/lib/religion/realms/realmconcepts.ts","../../../../src/lib/religion/realms/generatorconfig.ts","../../../../src/lib/religion/appearancetraits.ts","../../../../src/lib/religion/realms/realmconcept.ts","../../../../src/lib/appearance.ts","../../../../src/lib/religion/pantheons/generator.ts","../../../../src/lib/religion/pantheons/pantheon.ts","../../../../src/lib/religion/pantheons/pantheonmember.ts","../../../../src/lib/religion/pantheons/generatorconfig.ts","../../../../src/lib/religion/domains/generator.ts","../../../../src/lib/religion/domains/generatorconfig.ts","../../../../src/lib/religion/deities/generator.ts","../../../../src/lib/religion/deities/generatorconfig.ts","../../../../src/lib/religion/deities/deity.ts","../../../../src/lib/religion/realms/realm.ts","../../../../src/lib/religion/domains/domainset.ts","../../../../src/lib/relationships/generator.ts","../../../../src/lib/relationships/relationship.ts","../../../../src/lib/religion/generatorconfig.ts","../../../../src/lib/religion/categories/categories.ts","../../../../src/lib/religion/categories/shamanism.ts","../../../../src/lib/religion/categories/polytheism.ts","../../../../src/lib/religion/categories/monotheism.ts","../../../../src/lib/religion/categories/category.ts"],"sourcesContent":["\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport ReligionGeneratorConfig from \"./generatorconfig.js\";\nimport PantheonGenerator from \"./pantheons/generator.js\";\nimport PantheonGeneratorConfig from \"./pantheons/generatorconfig.js\";\nimport RealmGenerator from \"./realms/generator.js\";\nimport RealmGeneratorConfig from \"./realms/generatorconfig.js\";\nimport Religion from \"./religion.js\";\n\nexport default class ReligionGenerator {\n  config: ReligionGeneratorConfig;\n\n  constructor(config: ReligionGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): Religion {\n    let realmGenConfig = new RealmGeneratorConfig();\n    let realmGen = new RealmGenerator(realmGenConfig);\n    const realms = realmGen.generate();\n\n    const category = RND.item(this.config.categories);\n\n    let pantheonGenConfig = new PantheonGeneratorConfig();\n    pantheonGenConfig.realms = realms;\n    pantheonGenConfig.minDeities = category.minDeities;\n    pantheonGenConfig.maxDeities = category.maxDeities;\n    pantheonGenConfig.femaleNameGenerator = this.config.femaleNameGenerator;\n    pantheonGenConfig.maleNameGenerator = this.config.maleNameGenerator;\n    let pantheonGen = new PantheonGenerator(pantheonGenConfig);\n    let pantheon = pantheonGen.generate();\n    pantheon.description = category.description;\n\n    const religion = new Religion(this.config.nameGenerator.generate(1)[0]);\n    religion.realms = realms;\n    religion.pantheon = pantheon;\n\n    if (category.hasLeader) {\n      religion.pantheon.leader = random.int(0, religion.pantheon.members.length - 1);\n\n      let leaderTitle = \"Queen of the Gods\";\n      if (religion.pantheon.members[religion.pantheon.leader].deity.gender.name === \"male\") {\n        leaderTitle = \"King of the Gods\";\n      }\n\n      religion.pantheon.members[religion.pantheon.leader].deity.titles.push(leaderTitle);\n      religion.pantheon.description += ` ${\n        religion.pantheon.members[religion.pantheon.leader].deity.name\n      } is the ${leaderTitle}.`;\n    }\n\n    religion.description = pantheon.description\n      + \" \"\n      + randomGatheringTimes()\n      + \" \"\n      + Words.capitalize(randomGatheringPlace())\n      + \".\";\n\n    return religion;\n  }\n}\n\nfunction randomGatheringPlace(): string {\n  let description = RND.item([\n    \"{follower} gather in {place} for {service}\",\n    \"{follower} congregate in {place} to be led in {service} by {leader}\",\n    \"{follower} meet in {place} to engage in {service} and hear from {leader}\",\n    \"At {place}, {follower} come together for {service} led by {leader}\",\n    \"Join {follower} at {place} for {service} and fellowship with {leader}\",\n    \"{follower} assemble in {place} to participate in {service} and share with {leader}\",\n    \"{follower} unite at {place} for {service} and to learn from {leader}\",\n    \"At {place}, {follower} come together to seek guidance and wisdom from {leader} through {service}\",\n  ]);\n\n  const follower = RND.item([\n    \"adherents\",\n    \"believers\",\n    \"disciples\",\n    \"devotees\",\n    \"faithful\",\n    \"followers\",\n    \"pilgrims\",\n    \"worshippers\",\n    \"zealots\",\n  ]);\n\n  const place = RND.item([\n    \"temples\",\n    \"churches\",\n    \"mosques\",\n    \"synagogues\",\n    \"chapels\",\n    \"shrines\",\n    \"sanctuaries\",\n    \"meeting halls\",\n    \"community centers\",\n    \"outdoor arenas\",\n  ]);\n\n  const service = RND.item([\n    \"silent meditation\",\n    \"guided meditation\",\n    \"chanting\",\n    \"prayer\",\n    \"sacrament\",\n    \"communion\",\n    \"worship\",\n    \"ritual dance\",\n    \"ritual music\",\n    \"structured recitation\",\n    \"spontaneous sharing\",\n    \"teachings and discussions\",\n    \"ritual sacrifice\",\n  ]);\n\n  const leader = RND.item([\n    \"priest\",\n    \"priestess\",\n    \"minister\",\n    \"shaman\",\n    \"spiritual guide\",\n    \"community leader\",\n    \"wise elder\",\n    \"prophet\",\n    \"guru\",\n    \"ascended master\",\n    \"enlightened one\",\n    \"mystic\",\n    \"oracle\",\n  ]);\n\n  description = description\n    .replace(\"{follower}\", follower)\n    .replace(\"{place}\", place)\n    .replace(\"{service}\", service)\n    .replace(\"{leader}\", Words.article(leader) + \" \" + leader);\n\n  return description;\n}\n\nfunction randomGatheringTimes(): string {\n  let description = RND.item([\n    \"Regular gatherings happen once a week.\",\n    \"Regular gatherings happen daily.\",\n    \"Regular gatherings happen once a month.\",\n    \"Weekly gatherings take place every {weekday}.\",\n    \"They come together every {weekday} for a time of {service}.\",\n    \"Their community meets {frequency} for {service} at {time}.\",\n    \"Their gatherings occur {frequency}, bringing {follower} together for {service}.\",\n    \"They gather {frequency} at {place} for {service} and {activity}.\",\n    \"Every {weekday} they gather for {service}, followed by {activity}.\",\n    \"Their gatherings happen {frequency} at {place} and feature {service}, {activity}, and {food/drink}.\",\n    \"People are invited to the {occasion} gathering, where they partake in {service} and {activity}.\",\n  ]);\n\n  description = description\n    .replace(\n      \"{weekday}\",\n      RND.item([\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]),\n    )\n    .replace(\"{frequency}\", RND.item([\"weekly\", \"bi-weekly\", \"monthly\", \"quarterly\", \"annually\"]))\n    .replace(\n      \"{follower}\",\n      RND.item([\"worshipers\", \"devotees\", \"believers\", \"faithful\", \"followers\", \"pilgrims\"]),\n    )\n    .replace(\n      \"{service}\",\n      RND.item([\"prayer\", \"worship\", \"meditation\", \"reflection\", \"ritual\", \"sermon\", \"teaching\"]),\n    )\n    .replace(\"{time}\", RND.item([\"sunrise\", \"midday\", \"sunset\", \"evening\", \"night\"]))\n    .replace(\n      \"{place}\",\n      RND.item([\n        \"the temple\",\n        \"the church\",\n        \"the mosque\",\n        \"the synagogue\",\n        \"the chapel\",\n        \"the shrine\",\n        \"the sanctuary\",\n        \"the meeting hall\",\n      ]),\n    )\n    .replace(\n      \"{activity}\",\n      RND.item([\n        \"fellowship\",\n        \"conversation\",\n        \"sharing\",\n        \"food and drink\",\n        \"community service\",\n        \"study\",\n      ]),\n    )\n    .replace(\"{occasion}\", RND.item([\"special\", \"holiday\", \"festive\", \"solemn\"]));\n\n  return description;\n}\n","\"use strict\";\n\nimport Pantheon from \"./pantheons/pantheon.js\";\nimport Realm from \"./realms/realm.js\";\n\nexport default class Religion {\n  name: string;\n  description: string;\n  realms: Realm[];\n  pantheon: Pantheon | null;\n\n  constructor(name: string) {\n    this.name = name;\n    this.description = \"\";\n    this.realms = [];\n    this.pantheon = null;\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport * as AppearanceTraits from \"../appearancetraits.js\";\nimport RealmGeneratorConfig from \"./generatorconfig.js\";\nimport Realm from \"./realm.js\";\nimport * as RealmConcepts from \"./realmconcepts.js\";\n\nexport default class RealmGenerator {\n  config: RealmGeneratorConfig;\n\n  constructor(config: RealmGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): Realm[] {\n    const realms = [];\n\n    const numberOfRealms = this.config.numberOfRealms;\n\n    let allConcepts = RealmConcepts.all();\n    allConcepts = RND.shuffle(allConcepts);\n\n    for (let i = 0; i < numberOfRealms; i++) {\n      const concept = allConcepts.pop();\n\n      if (typeof concept == \"object\") {\n        const realmName = RND.item(concept.nameOptions);\n\n        const appearanceTraits = AppearanceTraits.getAllAppearanceTraitsForRealmConcept(concept);\n\n        let description = RND.item(concept.descriptionOptions).replace(\n          \"{name}\",\n          Words.uncapitalize(realmName),\n        );\n        description = Words.capitalize(description);\n\n        const realm = new Realm(realmName, description, [], appearanceTraits);\n\n        realms.push(realm);\n      }\n    }\n\n    return realms;\n  }\n}\n","\"use strict\";\n\nimport RealmConcept from \"./realmconcept.js\";\n\nexport function all(): RealmConcept[] {\n  return [\n    new RealmConcept(\n      \"sky\",\n      [\n        \"The Eternal Heavens\",\n        \"The Heavens Above\",\n        \"Heaven\",\n        \"The Sky\",\n        \"The Heavens\",\n        \"The Celestial Realm\",\n        \"The Empyrean\",\n        \"The Firmament\",\n      ],\n      [\"sky\", \"clouds\", \"sun\", \"moon\", \"stars\", \"rainbows\", \"light\"],\n      [\"mercurial\", \"caring\", \"wise\", \"flexible\", \"majestic\", \"powerful\", \"graceful\", \"serene\"],\n      [\n        \"Far above the mortal world, {name} is a realm of light and splendor.\",\n        \"{name} is a realm of light and beauty, where celestial beings roam.\",\n        \"The skies of {name} are awash with vibrant colors and shimmering stars.\",\n      ],\n    ),\n    new RealmConcept(\n      \"earth\",\n      [\n        \"The Earth\",\n        \"The Mortal Realm\",\n        \"The Material Plane\",\n        \"The Mundane World\",\n        \"The Physical Plane\",\n        \"The Human World\",\n      ],\n      [\"earth\", \"mountains\", \"rivers\", \"forests\", \"deserts\", \"oceans\", \"caves\", \"valleys\"],\n      [\"stable\", \"stubborn\", \"physical\", \"grounded\", \"tenacious\", \"reliable\", \"practical\"],\n      [\n        \"{name} is where mortals reside, going about their daily lives.\",\n        \"{name} is the home of all mortal beings, full of bustling cities and quiet countryside.\",\n      ],\n    ),\n    new RealmConcept(\n      \"forest\",\n      [\n        \"The Forest\",\n        \"The Eternal Forest\",\n        \"The Divine Forest\",\n        \"The Sylvan Realm\",\n        \"The Verdant Wilds\",\n        \"The Green Domain\",\n      ],\n      [\"forest\", \"trees\", \"plants\", \"animals\", \"rivers\", \"mountains\"],\n      [\"caring\", \"stable\", \"peaceful\", \"graceful\", \"majestic\", \"wise\", \"mystical\"],\n      [\n        \"Hidden far from the mortal world, {name} is deep and mysterious, full of secrets and ancient magic.\",\n        \"{name} is an infinite forest of beauty and mystery, where the spirits of the wild roam free.\",\n        \"The forests of {name} are alive with the sound of birdsong and rustling leaves.\",\n      ],\n    ),\n    new RealmConcept(\n      \"underworld\",\n      [\n        \"The Underworld\",\n        \"The Afterlife\",\n        \"The Kingdom of Death\",\n        \"The Great Beyond\",\n        \"The Netherworld\",\n        \"The Land of the Dead\",\n      ],\n      [\"death\", \"shadow\", \"bones\", \"ghosts\", \"souls\", \"void\"],\n      [\"angry\", \"brooding\", \"peaceful\", \"wise\", \"merciful\", \"judgmental\", \"powerful\"],\n      [\n        \"{name} is where souls go to rest after death, guided by the spirits of the departed.\",\n        \"{name} is a realm of perpetual darkness where the dead rest forever, watched over by the reapers of the underworld.\",\n        \"The halls of {name} are filled with the whispers of the dead, their spirits forever lingering in the shadows.\",\n      ],\n    ),\n    new RealmConcept(\n      \"ocean\",\n      [\n        \"The Vast Sea\",\n        \"The Sea\",\n        \"The Endless Ocean\",\n        \"The Divine Sea\",\n        \"The Ever-Changing Tides\",\n        \"The Fathomless Depths\",\n        \"The Coral Kingdom\",\n        \"The Ocean of Storms\",\n      ],\n      [\"water\", \"salt\", \"waves\", \"foam\", \"currents\", \"whirlpools\", \"tides\", \"depths\"],\n      [\"mercurial\", \"aloof\", \"cruel\", \"flexible\", \"violent\", \"majestic\", \"mysterious\"],\n      [\n        \"{name} is a realm apart from mortal seas, full of life and infinitely deep.\",\n        \"The deep and restless waters of {name} hide many secrets.\",\n        \"Beneath the surface of {name} lies a kingdom of wonder and terror.\",\n      ],\n    ),\n    new RealmConcept(\n      \"mountain\",\n      [\n        \"The Great Mountain\",\n        \"The Mountain\",\n        \"The Divine Mountain\",\n        \"The Endless Peak\",\n        \"The Celestial Summit\",\n        \"The Sky-Splitting Colossus\",\n        \"The Stone Sentinel\",\n        \"The Cradle of the Gods\",\n      ],\n      [\"earth\", \"rock\", \"stone\", \"ice\", \"snow\", \"summit\", \"peak\", \"valley\"],\n      [\"aloof\", \"wise\", \"physical\", \"stable\", \"majestic\", \"immovable\", \"mysterious\"],\n      [\n        \"{name} is far larger than any mountain of the mortal world.\",\n        \"{name} is covered in lush forests and cascading waterfalls, a towering paradise.\",\n        \"Beneath the peaks and valleys of {name} lies a realm of fire and darkness.\",\n      ],\n    ),\n    new RealmConcept(\n      \"void\",\n      [\n        \"The Nameless Void\",\n        \"The Endless Void\",\n        \"The Void\",\n        \"The Dark Beyond\",\n        \"The Endless Dark\",\n        \"The Abyss\",\n        \"The Great Emptiness\",\n        \"The Eternal Nothingness\",\n      ],\n      [\"alien\", \"darkness\", \"emptiness\", \"silence\", \"cold\", \"nothingness\", \"absence\"],\n      [\"alien\", \"clever\", \"unknowable\", \"silent\", \"watchful\", \"impenetrable\"],\n      [\n        \"{name} is home to things unknowable and alien.\",\n        \"There are mysteries in {name} that no mortal can hope to perceive, let alone understand.\",\n        \"{name} is a realm of eternal darkness and emptiness, where the very fabric of reality is twisted and distorted.\",\n      ],\n    ),\n    new RealmConcept(\n      \"dream\",\n      [\n        \"The Realm of Dreams\",\n        \"The Dreamlands\",\n        \"The Land of Nod\",\n        \"The Ethereal Plane\",\n        \"The Realm of Imagination\",\n        \"The World of Sleep\",\n      ],\n      [\"ethereal\", \"fantastical\", \"dreamlike\", \"otherworldly\", \"surreal\", \"shimmering\"],\n      [\"mysterious\", \"whimsical\", \"fickle\", \"curious\", \"enigmatic\", \"playful\"],\n      [\n        \"{name} is a place where the impossible becomes reality and where the line between dreams and waking life is blurred.\",\n        \"The ethereal beauty of {name} is home to creatures born of pure imagination and fantasy.\",\n        \"In {name}, the landscape constantly shifts and changes, shaped by the whims of the dreamers who call it home.\",\n        \"The dreamscape of {name} is a realm of infinite possibilities, where anything can happen and nothing is truly impossible.\",\n        \"{name} is a place where the innermost thoughts and desires of mortals manifest into reality, for better or for worse.\",\n        \"Those who journey into {name} often find themselves caught in a never-ending cycle of dreams and nightmares.\",\n      ],\n    ),\n  ];\n}\n","\"use strict\";\n\nexport default class RealmGeneratorConfig {\n  numberOfRealms: number;\n  requireDualistic: boolean;\n\n  constructor() {\n    this.numberOfRealms = 2;\n    this.requireDualistic = false;\n  }\n}\n","\"use strict\";\n\nimport * as AppearanceTrait from \"../appearance.js\";\nimport RealmConcept from \"./realms/realmconcept.js\";\n\nexport function all() {\n  return [\n    new AppearanceTrait.AppearanceTrait(\"six feathered wings\", \"wings\", [\"sky\"]),\n    new AppearanceTrait.AppearanceTrait(\"four feathered wings\", \"wings\", [\"sky\"]),\n    new AppearanceTrait.AppearanceTrait(\"two large feathered wings\", \"wings\", [\"sky\"]),\n    new AppearanceTrait.AppearanceTrait(\"large leathery wings\", \"wings\", [\"sky\", \"death\"]),\n    new AppearanceTrait.AppearanceTrait(\"a lion's tail'\", \"tail\", [\"earth\", \"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"a whip-like tail\", \"tail\", [\"earth\", \"death\"]),\n    new AppearanceTrait.AppearanceTrait(\"two tails\", \"tail\", [\"alien\"]),\n    new AppearanceTrait.AppearanceTrait(\"the horns of a goat\", \"horns\", [\"earth\", \"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"the horns of a ram\", \"horns\", [\"earth\", \"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"the antlers of a stag\", \"horns\", [\"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"the antlers of a deer\", \"horns\", [\"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"short, pointed horns\", \"horns\", [\"earth\", \"death\"]),\n    new AppearanceTrait.AppearanceTrait(\"tall, straight horns\", \"horns\", [\"earth\", \"death\"]),\n    new AppearanceTrait.AppearanceTrait(\"glowing blue eyes\", \"eyes\", [\"water\"]),\n    new AppearanceTrait.AppearanceTrait(\"glowing yellow eyes\", \"eyes\", [\"sky\", \"water\"]),\n    new AppearanceTrait.AppearanceTrait(\"glowing red eyes\", \"eyes\", [\"earth\", \"death\", \"alien\"]),\n    new AppearanceTrait.AppearanceTrait(\"glowing orange eyes\", \"eyes\", [\"earth\", \"sky\"]),\n    new AppearanceTrait.AppearanceTrait(\"eyes that burn with an inner fire\", \"eyes\", [\"sky\"]),\n    new AppearanceTrait.AppearanceTrait(\"four eyes\", \"eyes\", [\"alien\"]),\n    new AppearanceTrait.AppearanceTrait(\"six eyes\", \"eyes\", [\"alien\"]),\n    new AppearanceTrait.AppearanceTrait(\"eight eyes\", \"eyes\", [\"alien\"]),\n    new AppearanceTrait.AppearanceTrait(\"no eyes\", \"eyes\", [\"death\", \"alien\"]),\n    new AppearanceTrait.AppearanceTrait(\"reptilian eyes\", \"eyes\", [\"forest\", \"earth\"]),\n    new AppearanceTrait.AppearanceTrait(\"scales instead of skin\", \"skin\", [\"earth\", \"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"skin that glows faintly\", \"skin\", [\"sky\"]),\n    new AppearanceTrait.AppearanceTrait(\"skin made of living rock\", \"skin\", [\"earth\"]),\n    new AppearanceTrait.AppearanceTrait(\"blue skin\", \"skin\", [\"water\"]),\n    new AppearanceTrait.AppearanceTrait(\"green skin\", \"skin\", [\"water\"]),\n    new AppearanceTrait.AppearanceTrait(\"crystalline skin\", \"skin\", [\"earth\"]),\n    new AppearanceTrait.AppearanceTrait(\"translucent grey skin\", \"skin\", [\"death\"]),\n    new AppearanceTrait.AppearanceTrait(\"dull grey skin\", \"skin\", [\"death\"]),\n    new AppearanceTrait.AppearanceTrait(\"skin covered in leaves\", \"skin\", [\"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"skin made of star-lit blackness\", \"skin\", [\"alien\"]),\n    new AppearanceTrait.AppearanceTrait(\"eight tentacles\", \"tentacles\", [\"alien\"]),\n    new AppearanceTrait.AppearanceTrait(\"six tentacles\", \"tentacles\", [\"alien\"]),\n    new AppearanceTrait.AppearanceTrait(\"four tentacles\", \"tentacles\", [\"alien\"]),\n    new AppearanceTrait.AppearanceTrait(\"the head of a lion\", \"head\", [\"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"the head of a bear\", \"head\", [\"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"the head of a dragon\", \"head\", [\"earth\", \"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"the head of a swan\", \"head\", [\"sky\", \"water\"]),\n    new AppearanceTrait.AppearanceTrait(\"the head of a deer\", \"head\", [\"forest\"]),\n    new AppearanceTrait.AppearanceTrait(\"the head of a cat\", \"head\", [\"earth\", \"desert\"]),\n    new AppearanceTrait.AppearanceTrait(\"the head of a wolf\", \"head\", [\"earth\", \"forest\"]),\n  ];\n}\n\nexport function getAllAppearanceTraitsForRealmConcept(concept: RealmConcept) {\n  const traits = all();\n\n  let result: AppearanceTrait.AppearanceTrait[] = [];\n\n  for (let i = 0; i < concept.appearanceTags.length; i++) {\n    const discovered = AppearanceTrait.getAllTraitsWithTag(traits, concept.appearanceTags[i]);\n\n    result = [...result, ...discovered];\n  }\n\n  return result;\n}\n","\"use strict\";\n\nexport default class RealmConcept {\n  name: string;\n  nameOptions: string[];\n  appearanceTags: string[];\n  personalityTags: string[];\n  descriptionOptions: string[];\n\n  constructor(\n    name: string,\n    nameOptions: string[],\n    appearanceTags: string[],\n    personalityTags: string[],\n    descriptionOptions: string[],\n  ) {\n    this.name = name;\n    this.nameOptions = nameOptions;\n    this.appearanceTags = appearanceTags;\n    this.personalityTags = personalityTags;\n    this.descriptionOptions = descriptionOptions;\n  }\n}\n","\"use strict\";\n\nexport class AppearanceTrait {\n  phrase: string;\n  bodyPart: string;\n  tags: string[];\n\n  constructor(phrase: string, bodyPart: string, tags: string[]) {\n    this.phrase = phrase;\n    this.bodyPart = bodyPart;\n    this.tags = tags;\n  }\n}\n\nexport function getAllTraitsWithTag(traits: AppearanceTrait[], tag: string) {\n  const results = [];\n\n  for (let i = 0; i < traits.length; i++) {\n    if (traits[i].tags.includes(tag)) {\n      results.push(traits[i]);\n    }\n  }\n\n  return results;\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport RelationshipGenerator from \"../../relationships/generator.js\";\nimport Relationship from \"../../relationships/relationship.js\";\nimport DeityGenerator from \"../deities/generator.js\";\nimport DeityGeneratorConfig from \"../deities/generatorconfig.js\";\nimport DomainSet from \"../domains/domainset.js\";\nimport DomainGenerator from \"../domains/generator.js\";\nimport DomainGeneratorConfig from \"../domains/generatorconfig.js\";\nimport PantheonGeneratorConfig from \"./generatorconfig.js\";\nimport Pantheon from \"./pantheon.js\";\nimport PantheonMember from \"./pantheonmember.js\";\n\nexport default class PantheonGenerator {\n  config: PantheonGeneratorConfig;\n\n  constructor(config: PantheonGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): Pantheon {\n    let pantheon = new Pantheon();\n\n    let deityGenConfig = new DeityGeneratorConfig();\n    deityGenConfig.realms = this.config.realms;\n    deityGenConfig.femaleNameGenerator = this.config.femaleNameGenerator;\n    deityGenConfig.maleNameGenerator = this.config.maleNameGenerator;\n\n    const numberOfDeities = random.int(this.config.minDeities, this.config.maxDeities);\n\n    const domainSets = randomDomainSets(numberOfDeities);\n\n    for (let i = 0; i < domainSets.length; i++) {\n      let member = new PantheonMember();\n      deityGenConfig.domainSet = domainSets[i];\n      let deityGen = new DeityGenerator(deityGenConfig);\n\n      let deity = deityGen.generate();\n      member.deity = deity;\n\n      pantheon.members.push(member);\n    }\n\n    let relationshipGenerator = new RelationshipGenerator(0);\n    let numberOfRelationships = random.int(1, 3);\n\n    for (let j = 0; j < numberOfRelationships; j++) {\n      for (let i = 0; i < pantheon.members.length; i++) {\n        relationshipGenerator.strength = random.int(-2, 2);\n        const target = random.int(0, pantheon.members.length - 1);\n        if (target != i) {\n          let alreadyExists = false;\n          for (let k = 0; k < pantheon.members[i].relationships.length; k++) {\n            if (pantheon.members[i].relationships[k].target == target) {\n              alreadyExists = true;\n            }\n          }\n          if (!alreadyExists) {\n            let outward = relationshipGenerator.generate();\n            outward.target = target;\n            pantheon.members[i].relationships.push(outward);\n\n            let inward = relationshipGenerator.generate();\n            inward.target = i;\n            pantheon.members[target].relationships.push(inward);\n          }\n        }\n      }\n    }\n\n    if (pantheon.members.length > 1) {\n      for (let i = 0; i < pantheon.members.length; i++) {\n        let relationships = [];\n\n        for (let x = 0; x < pantheon.members[i].relationships.length; x++) {\n          relationships.push(\n            getRelationshipPhrase(\n              pantheon.members[i].relationships[x],\n              pantheon.members[pantheon.members[i].relationships[x].target].deity.name,\n            ),\n          );\n        }\n\n        const relationshipDescription = \" \" + pantheon.members[i].deity.name + \" \" + Words.arrayToPhrase(relationships)\n          + \".\";\n\n        pantheon.members[i].deity.description += relationshipDescription;\n      }\n    }\n\n    return pantheon;\n  }\n}\n\nfunction getRelationshipPhrase(relationship: Relationship, targetName: string): string {\n  return RND.item([`${relationship.verb} ${targetName}`]);\n}\n\nfunction randomDomainSets(numberOfSets: number): DomainSet[] {\n  let domainGenConfig = new DomainGeneratorConfig();\n  let domainGen = new DomainGenerator(domainGenConfig);\n\n  let sets = [];\n  let allDomains = RND.shuffle(domainGenConfig.domains);\n\n  for (let i = 0; i < numberOfSets; i++) {\n    let domains = [];\n\n    for (let j = 0; j < domainGen.config.numberOfDomains + 1; j++) {\n      domains.push(allDomains.pop());\n    }\n\n    domainGen.config.domains = domains;\n\n    let domainSet = domainGen.generate();\n\n    sets.push(domainSet);\n  }\n\n  return sets;\n}\n","\"use strict\";\n\nimport PantheonMember from \"./pantheonmember.js\";\n\nexport default class Pantheon {\n  name: string;\n  description: string;\n  members: PantheonMember[];\n  leader: number;\n\n  constructor() {\n    this.name = \"\";\n    this.description = \"\";\n    this.members = [];\n    this.leader = -1;\n  }\n}\n","\"use strict\";\n\nimport Relationship from \"../../relationships/relationship.js\";\nimport Deity from \"../deities/deity.js\";\n\nexport default class PantheonMember {\n  deity: Deity;\n  relationships: Relationship[];\n\n  constructor() {\n    this.relationships = [];\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport Domain from \"../domains/domain.js\";\nimport * as Domains from \"../domains/domains.js\";\nimport Realm from \"../realms/realm.js\";\n\nexport default class PantheonGeneratorConfig {\n  domains: Domain[];\n  realms: Realm[];\n  minDeities: number;\n  maxDeities: number;\n  femaleNameGenerator: MUN.Generator;\n  maleNameGenerator: MUN.Generator;\n\n  constructor() {\n    this.domains = Domains.all();\n    this.realms = [];\n    this.minDeities = 1;\n    this.maxDeities = 16;\n\n    let genSet = new MUN.HumanSet();\n\n    if (genSet.female == null) {\n      throw new Error(\"no female name generator in set\");\n    } else if (genSet.male == null) {\n      throw new Error(\"no male name generator in set\");\n    }\n\n    this.femaleNameGenerator = genSet.female;\n    this.maleNameGenerator = genSet.male;\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport DomainSet from \"./domainset.js\";\nimport DomainGeneratorConfig from \"./generatorconfig.js\";\n\nexport default class DomainGenerator {\n  config: DomainGeneratorConfig;\n\n  constructor(config: DomainGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): DomainSet {\n    let domainSet = new DomainSet();\n\n    this.config.domains = RND.shuffle(this.config.domains);\n\n    let primary = this.config.domains.pop();\n    if (primary !== undefined) {\n      domainSet.primary = primary;\n    } else {\n      throw new Error(\"No primary domain found.\");\n    }\n\n    for (let i = 0; i < this.config.numberOfDomains; i++) {\n      const d = this.config.domains.pop();\n      if (d === undefined) {\n        throw new Error(\"No secondary domain found.\");\n      }\n\n      domainSet.secondaries.push(d);\n    }\n\n    return domainSet;\n  }\n}\n","\"use strict\";\n\nimport Domain from \"./domain.js\";\nimport * as Domains from \"./domains.js\";\n\nexport default class DomainGeneratorConfig {\n  numberOfDomains: number;\n  domains: Domain[];\n\n  constructor() {\n    this.numberOfDomains = 1;\n    this.domains = Domains.all();\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Deity from \"./deity.js\";\nimport DeityGeneratorConfig from \"./generatorconfig.js\";\n\nexport default class DeityGenerator {\n  config: DeityGeneratorConfig;\n\n  constructor(config: DeityGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): Deity {\n    let possibleHolyItems: string[] = [];\n    let possibleHolySymbols: string[] = [];\n\n    const characterDetails = this.config.characterGenerator.generate();\n\n    if (this.config.maleNameGenerator === null) {\n      throw new Error(\"male name generator not set\");\n    } else if (this.config.femaleNameGenerator === null) {\n      throw new Error(\"female name generator not set\");\n    }\n    let deityName = this.config.femaleNameGenerator.generate(1)[0];\n    if (characterDetails.gender.name == \"male\") {\n      deityName = this.config.maleNameGenerator.generate(1)[0];\n    }\n\n    let deity = new Deity(\n      deityName,\n      characterDetails.species,\n      characterDetails.gender,\n      characterDetails.ageCategory,\n      RND.item(this.config.realms),\n      this.config.domainSet,\n    );\n\n    possibleHolyItems = this.config.domainSet.primary.holyItems;\n    possibleHolySymbols = this.config.domainSet.primary.holySymbols;\n\n    deity.holyItem = RND.item(possibleHolyItems);\n    deity.holySymbol = RND.item(possibleHolySymbols);\n\n    const chanceOfRealmTrait = random.int(1, 100);\n\n    const physicalTraits = characterDetails.physicalTraits;\n    let appearanceTraits = [];\n\n    for (let i = 0; i < physicalTraits.length; i++) {\n      appearanceTraits.push(physicalTraits[i].description);\n    }\n\n    if (chanceOfRealmTrait > 80) {\n      appearanceTraits.push(RND.item(deity.realm.appearanceTraits).phrase);\n    }\n\n    deity.personalityTraits = characterDetails.personalityTraits;\n    deity.personality = describePersonality(deity);\n    deity.appearance = Words.arrayToPhrase(appearanceTraits);\n    deity.description = deity.describe();\n\n    return deity;\n  }\n}\n\nfunction describePersonality(deity: Deity): string {\n  let traits = [];\n\n  for (let i = 0; i < deity.personalityTraits.length; i++) {\n    traits.push(deity.personalityTraits[i].descriptor);\n  }\n\n  return Words.capitalize(deity.gender.subjectivePronoun) + \" is \" + Words.arrayToPhrase(traits);\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport CharacterGenerator from \"../../characters/generator.js\";\nimport * as PremadeConfigs from \"../../characters/premadeconfigs.js\";\nimport DomainSet from \"../domains/domainset.js\";\nimport Realm from \"../realms/realm.js\";\n\nexport default class DeityGeneratorConfig {\n  domainSet: DomainSet;\n  realms: Realm[];\n  characterGenerator: CharacterGenerator;\n  femaleNameGenerator: MUN.Generator | null;\n  maleNameGenerator: MUN.Generator | null;\n\n  constructor() {\n    let charGenConfig = PremadeConfigs.getFantasy();\n\n    this.realms = [];\n    this.characterGenerator = new CharacterGenerator(charGenConfig);\n\n    let genSet = new MUN.HumanSet();\n\n    this.femaleNameGenerator = genSet.female;\n    this.maleNameGenerator = genSet.male;\n  }\n}\n","\"use strict\";\n\nimport * as Words from \"@ironarachne/words\";\nimport AgeCategory from \"../../age/agecategory.js\";\nimport PersonalityTrait from \"../../characters/personality/personalitytrait.js\";\nimport Gender from \"../../gender.js\";\nimport type Species from \"../../species/species.js\";\nimport DomainSet from \"../domains/domainset.js\";\nimport Realm from \"../realms/realm.js\";\n\nexport default class Deity {\n  name: string;\n  species: Species;\n  gender: Gender;\n  ageCategory: AgeCategory;\n  domains: DomainSet;\n  titles: string[];\n  realm: Realm;\n  description: string;\n  personalityTraits: PersonalityTrait[];\n  personality: string;\n  appearance: string;\n  holyItem: string;\n  holySymbol: string;\n  isAlive: boolean;\n\n  constructor(\n    name: string,\n    species: Species,\n    gender: Gender,\n    ageCategory: AgeCategory,\n    realm: Realm,\n    domains: DomainSet,\n  ) {\n    this.name = name;\n    this.species = species;\n    this.gender = gender;\n    this.ageCategory = ageCategory;\n    this.domains = domains;\n    this.titles = [];\n    this.realm = realm;\n    this.description = \"\";\n    this.personality = \"\";\n    this.appearance = \"\";\n    this.holyItem = \"\";\n    this.holySymbol = \"\";\n    this.isAlive = true;\n  }\n\n  describe(): string {\n    const speciesAdj = this.species.adjective;\n    const subjectivePronoun = this.gender.subjectivePronoun;\n    let noun = \"god\";\n    const domainNames = [];\n\n    domainNames.push(this.domains.primary.name);\n\n    for (let i = 0; i < this.domains.secondaries.length; i++) {\n      domainNames.push(this.domains.secondaries[i].name);\n    }\n\n    if (this.gender.name === \"female\") {\n      noun = \"goddess\";\n    }\n\n    let description = `${this.name} appears as ${Words.article(speciesAdj)} ${speciesAdj} ${this.ageCategory.noun}.`;\n    description += ` ${Words.capitalize(subjectivePronoun)} has ${this.appearance}. ${this.personality}.`;\n    description += ` ${this.name} is the ${noun} of ${Words.arrayToPhrase(domainNames)}.`;\n    description += ` ${Words.capitalize(subjectivePronoun)} resides in ${\n      Words.uncapitalize(\n        this.realm.name,\n      )\n    }.`;\n\n    return description;\n  }\n}\n","\"use strict\";\n\nexport default class Realm {\n  name: string;\n  description: string;\n  personalityTraits: string[];\n  appearanceTraits: string[];\n\n  constructor(\n    name: string,\n    description: string,\n    personalityTraits: string[],\n    appearanceTraits: any[],\n  ) {\n    this.name = name;\n    this.description = description;\n    this.personalityTraits = personalityTraits;\n    this.appearanceTraits = appearanceTraits;\n  }\n}\n","\"use strict\";\n\nimport Domain from \"./domain.js\";\n\nexport default class DomainSet {\n  primary: Domain;\n  secondaries: Domain[];\n\n  constructor() {\n    this.secondaries = [];\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport Relationship from \"./relationship.js\";\n\nexport default class RelationshipGenerator {\n  strength: number;\n\n  constructor(strength: number) {\n    this.strength = strength;\n  }\n\n  generate(): Relationship {\n    let verb = \"\";\n    let noun = \"\";\n\n    if (this.strength == -1) {\n      verb = RND.item([\"dislikes\", \"distrusts\", \"mistrusts\", \"is annoyed by\"]);\n      noun = \"enemy\";\n    } else if (this.strength == -2) {\n      verb = RND.item([\"fears\", \"hates\", \"loathes\", \"can't stand\"]);\n      noun = \"enemy\";\n    } else if (this.strength == 0) {\n      verb = RND.item([\n        \"is intrigued by\",\n        \"is ambivalent towards\",\n        \"is neutral towards\",\n        \"is suspicious of\",\n      ]);\n      noun = \"acquaintance\";\n    } else if (this.strength == 1) {\n      verb = RND.item([\"likes\", \"is amused by\", \"enjoys the company of\", \"enjoys\", \"trusts\"]);\n      noun = \"friend\";\n    } else {\n      verb = RND.item([\"loves\", \"deeply trusts\", \"adores\"]);\n      noun = \"friend\";\n    }\n\n    return new Relationship(noun, verb, 0, this.strength);\n  }\n}\n","\"use strict\";\n\nexport default class Relationship {\n  noun: string;\n  target: number;\n  verb: string;\n  strength: number;\n\n  constructor(noun: string, verb: string, target: number, strength: number) {\n    this.noun = noun;\n    this.verb = verb;\n    this.target = target;\n    this.strength = strength;\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as Categories from \"./categories/categories.js\";\nimport ReligionCategory from \"./categories/category.js\";\n\nexport default class ReligionGeneratorConfig {\n  categories: ReligionCategory[];\n  nameGenerator: MUN.Generator;\n  femaleNameGenerator: MUN.Generator;\n  maleNameGenerator: MUN.Generator;\n\n  constructor() {\n    this.categories = Categories.all();\n\n    let genSet = new MUN.HumanSet();\n\n    if (genSet.family === null) {\n      throw new Error(\"No family name generator found.\");\n    } else if (genSet.female === null) {\n      throw new Error(\"No female name generator found\");\n    } else if (genSet.male === null) {\n      throw new Error(\"No male name generator found\");\n    }\n\n    this.nameGenerator = genSet.family;\n    this.femaleNameGenerator = genSet.female;\n    this.maleNameGenerator = genSet.male;\n  }\n}\n","\"use strict\";\n\nimport ReligionCategory from \"./category.js\";\nimport Monotheism from \"./monotheism.js\";\nimport Polytheism from \"./polytheism.js\";\nimport Shamanism from \"./shamanism.js\";\n\nexport function all(): ReligionCategory[] {\n  return [new Monotheism(), new Polytheism(), new Shamanism()];\n}\n","\"use strict\";\n\nimport ReligionCategory from \"./category.js\";\n\nexport default class Shamanism extends ReligionCategory {\n  constructor() {\n    super();\n    this.name = \"shamanism\";\n    this.description = \"This religion is shamanistic.\";\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ReligionCategory from \"./category.js\";\n\nexport default class Polytheism extends ReligionCategory {\n  constructor() {\n    super();\n    this.name = \"polytheism\";\n    this.description = \"This religion \" + RND.item([\"has several gods\", \"is polytheistic\"]) + \".\";\n    this.hasDeities = true;\n    this.hasLeader = true;\n    this.minDeities = 2;\n    this.maxDeities = 16;\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport ReligionCategory from \"./category.js\";\n\nexport default class Monotheism extends ReligionCategory {\n  constructor() {\n    super();\n    this.name = \"monotheism\";\n    this.description = \"This religion \" + RND.item([\"has a single all-powerful god\", \"is monotheistic\"]) + \".\";\n    this.hasDeities = true;\n    this.minDeities = 1;\n    this.maxDeities = 1;\n  }\n}\n","\"use strict\";\n\nexport default class ReligionCategory {\n  name: string;\n  description: string;\n  hasDeities: boolean;\n  hasLeader: boolean;\n  minDeities: number;\n  maxDeities: number;\n\n  constructor() {\n    this.name = \"\";\n    this.description = \"\";\n    this.hasDeities = false;\n    this.hasLeader = false;\n    this.minDeities = 0;\n    this.maxDeities = 0;\n  }\n}\n"],"names":["AppearanceTraits.getAllAppearanceTraitsForRealmConcept","RealmConcepts.all","AppearanceTrait.getAllTraitsWithTag","all","AppearanceTrait.AppearanceTrait","Domains.all","PremadeConfigs.getFantasy","Categories.all"],"mappings":"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AAI,GAAA,UAAA,CAAJ,CAAA;AAAI,GAAJ;AAGE,EAAF,OAAE,MAAF,CAAA;AACA,CAAA;AD/DA,MAAA,oBAAA,CAAA;AAAA,EAA0C,cAA1C,CAAA;AAA0C,EACxC,gBADF,CAAA;AACE,EACA,WADF,GACE;AAGE,IAAJ,IAAA,CAAI,cAAJ,GAAI,CAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,gBAAJ,GAAI,KAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;ADNO,SAAA,GAAP,GAAO;AACL,EAAF,OAAE;AAAA,IAAO,IAAA,YAAT;AAAS,MACD,KADR;AACQ,MACF;AAAA,QACA,qBADN;AACM,QACE,mBADR;AACQ,QACA,QADR;AACQ,QACA,SADR;AACQ,QACA,aADR;AACQ,QACA,qBADR;AACQ,QACA,cADR;AACQ,QACA,eADR;AACQ,OAAR;AACQ,MACF,CAAA,KADN,EACM,QADN,EACM,KADN,EACM,MADN,EACM,OADN,EACM,UADN,EACM,OAAA,CADN;AACM,MAC6D,CAAA,WADnE,EACmE,QADnE,EACmE,MADnE,EACmE,UADnE,EACmE,UADnE,EACmE,UADnE,EACmE,UADnE,EACmE,QAAA,CADnE;AACmE,MAC2B;AAAA,QACxF,sEADN;AACM,QACE,qEADR;AACQ,QACA,yEADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,YADJ;AACI,MACI,OADR;AACQ,MACF;AAAA,QACA,WADN;AACM,QACE,kBADR;AACQ,QACA,oBADR;AACQ,QACA,mBADR;AACQ,QACA,oBADR;AACQ,QACA,iBADR;AACQ,OAAR;AACQ,MACF,CAAA,OADN,EACM,WADN,EACM,QADN,EACM,SADN,EACM,SADN,EACM,QADN,EACM,OADN,EACM,SAAA,CADN;AACM,MACmF,CAAA,QADzF,EACyF,UADzF,EACyF,UADzF,EACyF,UADzF,EACyF,WADzF,EACyF,UADzF,EACyF,WAAA,CADzF;AACyF,MACA;AAAA,QACnF,gEADN;AACM,QACE,yFADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,YADJ;AACI,MACI,QADR;AACQ,MACF;AAAA,QACA,YADN;AACM,QACE,oBADR;AACQ,QACA,mBADR;AACQ,QACA,kBADR;AACQ,QACA,mBADR;AACQ,QACA,kBADR;AACQ,OAAR;AACQ,MACF,CAAA,QADN,EACM,OADN,EACM,QADN,EACM,SADN,EACM,QADN,EACM,WAAA,CADN;AACM,MAC8D,CAAA,QADpE,EACoE,QADpE,EACoE,UADpE,EACoE,UADpE,EACoE,UADpE,EACoE,MADpE,EACoE,UAAA,CADpE;AACoE,MACa;AAAA,QAC3E,qGADN;AACM,QACE,8FADR;AACQ,QACA,iFADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,YADJ;AACI,MACI,YADR;AACQ,MACF;AAAA,QACA,gBADN;AACM,QACE,eADR;AACQ,QACA,sBADR;AACQ,QACA,kBADR;AACQ,QACA,iBADR;AACQ,QACA,sBADR;AACQ,OAAR;AACQ,MACF,CAAA,OADN,EACM,QADN,EACM,OADN,EACM,QADN,EACM,OADN,EACM,MAAA,CADN;AACM,MACsD,CAAA,OAD5D,EAC4D,UAD5D,EAC4D,UAD5D,EAC4D,MAD5D,EAC4D,UAD5D,EAC4D,YAD5D,EAC4D,UAAA,CAD5D;AAC4D,MACwB;AAAA,QAC9E,sFADN;AACM,QACE,qHADR;AACQ,QACA,+GADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,YADJ;AACI,MACI,OADR;AACQ,MACF;AAAA,QACA,cADN;AACM,QACE,SADR;AACQ,QACA,mBADR;AACQ,QACA,gBADR;AACQ,QACA,yBADR;AACQ,QACA,uBADR;AACQ,QACA,mBADR;AACQ,QACA,qBADR;AACQ,OAAR;AACQ,MACF,CAAA,OADN,EACM,MADN,EACM,OADN,EACM,MADN,EACM,UADN,EACM,YADN,EACM,OADN,EACM,QAAA,CADN;AACM,MAC8E,CAAA,WADpF,EACoF,OADpF,EACoF,OADpF,EACoF,UADpF,EACoF,SADpF,EACoF,UADpF,EACoF,YAAA,CADpF;AACoF,MACC;AAAA,QAC/E,6EADN;AACM,QACE,2DADR;AACQ,QACA,oEADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,YADJ;AACI,MACI,UADR;AACQ,MACF;AAAA,QACA,oBADN;AACM,QACE,cADR;AACQ,QACA,qBADR;AACQ,QACA,kBADR;AACQ,QACA,sBADR;AACQ,QACA,4BADR;AACQ,QACA,oBADR;AACQ,QACA,wBADR;AACQ,OAAR;AACQ,MACF,CAAA,OADN,EACM,MADN,EACM,OADN,EACM,KADN,EACM,MADN,EACM,QADN,EACM,MADN,EACM,QAAA,CADN;AACM,MACoE,CAAA,OAD1E,EAC0E,MAD1E,EAC0E,UAD1E,EAC0E,QAD1E,EAC0E,UAD1E,EAC0E,WAD1E,EAC0E,YAAA,CAD1E;AAC0E,MACS;AAAA,QAC7E,6DADN;AACM,QACE,kFADR;AACQ,QACA,4EADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,YADJ;AACI,MACI,MADR;AACQ,MACF;AAAA,QACA,mBADN;AACM,QACE,kBADR;AACQ,QACA,UADR;AACQ,QACA,iBADR;AACQ,QACA,kBADR;AACQ,QACA,WADR;AACQ,QACA,qBADR;AACQ,QACA,yBADR;AACQ,OAAR;AACQ,MACF,CAAA,OADN,EACM,UADN,EACM,WADN,EACM,SADN,EACM,MADN,EACM,aADN,EACM,SAAA,CADN;AACM,MAC8E,CAAA,OADpF,EACoF,QADpF,EACoF,YADpF,EACoF,QADpF,EACoF,UADpF,EACoF,cAAA,CADpF;AACoF,MACR;AAAA,QACtE,gDADN;AACM,QACE,0FADR;AACQ,QACA,iHADR;AACQ,OAAR;AACQ,KAAR;AACM,IACF,IAAA,YADJ;AACI,MACI,OADR;AACQ,MACF;AAAA,QACA,qBADN;AACM,QACE,gBADR;AACQ,QACA,iBADR;AACQ,QACA,oBADR;AACQ,QACA,0BADR;AACQ,QACA,oBADR;AACQ,OAAR;AACQ,MACF,CAAA,UADN,EACM,aADN,EACM,WADN,EACM,cADN,EACM,SADN,EACM,YAAA,CADN;AACM,MACgF,CAAA,YADtF,EACsF,WADtF,EACsF,QADtF,EACsF,SADtF,EACsF,WA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AME,EAAF,OAAE,WAAF,CAAA;AACA,CAAA;AAEA,SAAA,oBAAA,GAAA;AACE,EAAF,IAAE,WAAF,GAAE,GAAF,CAAE,IAAF,CAAE;AAAA,IAA2B,wCAA7B;AAA6B,IACzB,kCADJ;AACI,IACA,yCADJ;AACI,IACA,+CADJ;AACI,IACA,6DADJ;AACI,IACA,4DADJ;AACI,IACA,iFADJ;AACI,IACA,kEADJ;AACI,IACA,oEADJ;AACI,IACA,qGADJ;AACI,IACA,iGADJ;AACI,GACA,CADJ,CAAA;AAIE,EAAF,WAAA,GAAE,WAAF,CAAE,OAAF;AAAE,IACG,WADL;AACK,IACC,GADN,CACM,IADN,CACM,CAAA,QADN,EACM,SADN,EACM,WADN,EACM,UADN,EACM,QADN,EACM,UADN,EACM,QAAA,CAAA,CADN;AACM,GAAN,CAC6F,OAD7F,CAC6F,aAD7F,EAC6F,GAD7F,CAC6F,IAD7F,CAC6F,CAAA,QAD7F,EAC6F,WAD7F,EAC6F,SAD7F,EAC6F,WAD7F,EAC6F,UAAA,CAAA,CAAA,CAD7F,CAC6F,OAD7F;AAC6F,IAGxF,YAHL;AAGK,IACC,GADN,CACM,IADN,CACM,CAAA,YADN,EACM,UADN,EACM,WADN,EACM,UADN,EACM,WADN,EACM,UAAA,CAAA,CADN;AACM,GAAN,CAC2F,OAD3F;AAC2F,IAEtF,WAFL;AAEK,IACC,GADN,CACM,IADN,CACM,CAAA,QADN,EACM,SADN,EACM,YADN,EACM,YADN,EACM,QADN,EACM,QADN,EACM,UAAA,CAAA,CADN;AACM,GAAN,CACgG,OADhG,CACgG,QADhG,EACgG,GADhG,CACgG,IADhG,CACgG,CAAA,SADhG,EACgG,QADhG,EACgG,QADhG,EACgG,SADhG,EACgG,OAAA,CAAA,CAAA,CADhG,CACgG,OADhG;AACgG,IAG3F,SAHL;AAGK,IACC,GADN,CACM,IADN,CACM;AAAA,MACS,YADf;AACe,MACP,YADR;AACQ,MACA,YADR;AACQ,MACA,eADR;AACQ,MACA,YADR;AACQ,MACA,YADR;AACQ,MACA,eADR;AACQ,MACA,kBADR;AACQ,KACA,CADR;AACQ,GAAR,CACO,OADP;AACO,IAEF,YAFL;AAEK,IACC,GADN,CACM,IADN,CACM;AAAA,MACS,YADf;AACe,MACP,cADR;AACQ,MACA,SADR;AACQ,MACA,gBADR;AACQ,MACA,mBADR;AACQ,MACA,OADR;AACQ,KACA,CADR;AACQ,GAAR,CACO,OADP,CACO,YADP,EACO,GADP,CACO,IADP,CACO,CAAA,SADP,EACO,SADP,EACO,SADP,EACO,QAAA,CAAA,CAAA,CADP,CAAA;AAKE,EAAF,OAAE,WAAF,CAAA;AACA;;;;"}