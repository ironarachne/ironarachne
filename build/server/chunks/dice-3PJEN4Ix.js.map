{"version":3,"file":"dice-3PJEN4Ix.js","sources":["../../../../src/lib/dice.ts"],"sourcesContent":["import random from \"random\";\n\nexport class DicePool {\n  d4: number;\n  d6: number;\n  d8: number;\n  d10: number;\n  d12: number;\n  d20: number;\n  d100: number;\n  modifier: number;\n  modifierType: string;\n\n  constructor() {\n    this.d4 = 0;\n    this.d6 = 0;\n    this.d8 = 0;\n    this.d10 = 0;\n    this.d12 = 0;\n    this.d20 = 0;\n    this.d100 = 0;\n    this.modifier = 0;\n    this.modifierType = \"+\";\n  }\n\n  getAverageResult(): number {\n    let result = this.getMinResult() + this.getMaxResult();\n\n    result = Math.floor(result / 2);\n\n    return result;\n  }\n\n  getMaxResult(): number {\n    let result = 0;\n    result += this.d4 * 4;\n    result += this.d6 * 6;\n    result += this.d8 * 8;\n    result += this.d10 * 10;\n    result += this.d12 * 12;\n    result += this.d20 * 20;\n    result += this.d100 * 100;\n\n    if (this.modifierType == \"*\") {\n      result *= this.modifier;\n    } else if (this.modifierType == \"+\") {\n      result += this.modifier;\n    } else {\n      result -= this.modifier;\n    }\n\n    return result;\n  }\n\n  getMinResult(): number {\n    let result = 0;\n    result += this.d4;\n    result += this.d6;\n    result += this.d8;\n    result += this.d10;\n    result += this.d12;\n    result += this.d20;\n    result += this.d100;\n\n    if (this.modifierType == \"*\") {\n      result *= this.modifier;\n    } else if (this.modifierType == \"+\") {\n      result += this.modifier;\n    } else {\n      result -= this.modifier;\n    }\n\n    return result;\n  }\n}\n\nexport function toDicePool(expression: string): DicePool {\n  let numDice = 0;\n  let numSides = 0;\n  let modifier = 0;\n  let modifierType = \"+\";\n  let parts = [];\n  let modParts = [];\n\n  let dicePool = new DicePool();\n\n  if (expression.includes(\"-\")) {\n    modifierType = \"-\";\n    modParts = expression.split(\"-\");\n    modifier = Number(modParts[1]);\n  } else if (expression.includes(\"x\")) {\n    modifierType = \"*\";\n    modParts = expression.split(\"x\");\n    modifier = Number(modParts[1]);\n  } else if (expression.includes(\"+\")) {\n    modParts = expression.split(\"+\");\n    modifier = Number(modParts[1]);\n  } else {\n    modParts = expression.split(\"+\"); // no modifier\n  }\n\n  dicePool.modifier = modifier;\n  dicePool.modifierType = modifierType;\n\n  parts = modParts[0].split(\"d\");\n\n  numDice = Number(parts[0]);\n  numSides = Number(parts[1]);\n\n  if (numSides == 4) {\n    dicePool.d4 = numDice;\n  } else if (numSides == 6) {\n    dicePool.d6 = numDice;\n  } else if (numSides == 8) {\n    dicePool.d8 = numDice;\n  } else if (numSides == 10) {\n    dicePool.d10 = numDice;\n  } else if (numSides == 12) {\n    dicePool.d12 = numDice;\n  } else if (numSides == 20) {\n    dicePool.d20 = numDice;\n  } else if (numSides == 100) {\n    dicePool.d100 = numDice;\n  }\n\n  return dicePool;\n}\n\nexport function describeDice(dice: DicePool) {\n  let diceExpression = \"\";\n\n  if (dice.d100 > 0) {\n    if (diceExpression !== \"\") {\n      diceExpression += \"+\";\n    }\n    diceExpression += dice.d100 + \"d100\";\n  }\n\n  if (dice.d20 > 0) {\n    if (diceExpression !== \"\") {\n      diceExpression += \"+\";\n    }\n    diceExpression += dice.d20 + \"d20\";\n  }\n\n  if (dice.d12 > 0) {\n    if (diceExpression !== \"\") {\n      diceExpression += \"+\";\n    }\n    diceExpression += dice.d12 + \"d12\";\n  }\n\n  if (dice.d10 > 0) {\n    if (diceExpression !== \"\") {\n      diceExpression += \"+\";\n    }\n    diceExpression += dice.d10 + \"d10\";\n  }\n\n  if (dice.d8 > 0) {\n    if (diceExpression !== \"\") {\n      diceExpression += \"+\";\n    }\n    diceExpression += dice.d8 + \"d8\";\n  }\n\n  if (dice.d6 > 0) {\n    if (diceExpression !== \"\") {\n      diceExpression += \"+\";\n    }\n    diceExpression += dice.d6 + \"d6\";\n  }\n\n  if (dice.d4 > 0) {\n    if (diceExpression !== \"\") {\n      diceExpression += \"+\";\n    }\n    diceExpression += dice.d4 + \"d4\";\n  }\n\n  if (dice.modifier > 0) {\n    if (diceExpression !== \"\") {\n      diceExpression += \"+\";\n    }\n    diceExpression += dice.modifier;\n  }\n\n  return diceExpression;\n}\n\nexport function rangeToDiceExpression(range: number) {\n  let remains = range;\n\n  const dice = new DicePool();\n\n  while (remains >= 100 && remains > 0) {\n    remains -= 100;\n    dice.d100++;\n  }\n  while (remains >= 20 && remains > 0) {\n    remains -= 20;\n    dice.d20++;\n  }\n  while (remains >= 12 && remains > 0) {\n    remains -= 12;\n    dice.d12++;\n  }\n  while (remains >= 10 && remains > 0) {\n    remains -= 10;\n    dice.d10++;\n  }\n  while (remains >= 8 && remains > 0) {\n    remains -= 8;\n    dice.d8++;\n  }\n  while (remains >= 6 && remains > 0) {\n    remains -= 6;\n    dice.d6++;\n  }\n  while (remains >= 4 && remains > 0) {\n    remains -= 4;\n    dice.d4++;\n  }\n\n  dice.modifier = remains;\n\n  return dice;\n}\n\nexport function roll(expression: string): number {\n  let phrases: string[] = [];\n  let expressionType = \"straight\";\n  let parts = [];\n  let useModifier = true;\n  let modValue = 0;\n\n  if (expression.includes(\"+\")) {\n    phrases = expression.split(\"+\");\n    expressionType = \"added\";\n  } else if (expression.includes(\"-\")) {\n    phrases = expression.split(\"-\");\n    expressionType = \"subtracted\";\n  } else if (expression.includes(\"x\")) {\n    phrases = expression.split(\"x\");\n    expressionType = \"multiplied\";\n  } else {\n    useModifier = false;\n  }\n\n  if (useModifier) {\n    for (let i = 1; i < phrases.length; i++) {\n      let modParts = phrases[i].split(\"d\");\n\n      if (modParts.length > 1) {\n        let n = Number(modParts[0]);\n        let s = Number(modParts[1]);\n        modValue += rollSimple(n, s);\n      } else {\n        modValue += Number(phrases[i]);\n      }\n    }\n    parts = phrases[0].split(\"d\");\n  } else {\n    parts = expression.split(\"d\");\n  }\n\n  let roll = rollSimple(Number(parts[0]), Number(parts[1]));\n\n  if (expressionType == \"added\") {\n    roll += modValue;\n  } else if (expressionType == \"subtracted\") {\n    roll -= modValue;\n  } else if (expressionType == \"multiplied\") {\n    roll *= modValue;\n  }\n\n  return roll;\n}\n\nfunction rollSimple(n: number, s: number): number {\n  let result = 0;\n\n  for (let i = 0; i < n; i++) {\n    result += random.int(1, s);\n  }\n\n  return result;\n}\n\nexport function simplify(dice: DicePool): DicePool {\n  // This function takes a set of dice and simplifies them to a single die type, dropping everything else\n  const result = new DicePool();\n\n  if (dice.d100 > 0) {\n    result.d100 = dice.d100;\n    return result;\n  }\n\n  if (dice.d20 > 0) {\n    result.d20 = dice.d20;\n    return result;\n  }\n\n  if (dice.d12 > 0) {\n    result.d12 = dice.d12;\n    return result;\n  }\n\n  if (dice.d10 > 0) {\n    result.d10 = dice.d10;\n    return result;\n  }\n\n  if (dice.d8 > 0) {\n    result.d8 = dice.d8;\n    return result;\n  }\n\n  if (dice.d6 > 0) {\n    result.d6 = dice.d6;\n    return result;\n  }\n\n  if (dice.d4 > 0) {\n    result.d4 = dice.d4;\n    return result;\n  }\n\n  if (dice.modifier > 0) {\n    result.modifier = dice.modifier;\n    return result;\n  }\n\n  return result;\n}\n"],"names":[],"mappings":"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"}