{"version":3,"file":"common-696ed696.js","sources":["../../../../src/lib/species/common.ts","../../../../src/lib/species/modifiers/zombie.ts","../../../../src/lib/species/modifiers/vampire.ts","../../../../src/lib/species/modifiers/skeleton.ts"],"sourcesContent":["\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport * as Skeleton from \"./modifiers/skeleton.js\";\nimport * as Vampire from \"./modifiers/vampire.js\";\nimport * as Zombie from \"./modifiers/zombie.js\";\nimport type Species from \"./species.js\";\n\nexport function byAnyTag(tags: string[], options: Species[]): Species[] {\n  let result = [];\n\n  let unique = true;\n\n  for (let i = 0; i < options.length; i++) {\n    unique = true;\n    for (let j = 0; j < tags.length; j++) {\n      if (options[i].tags.includes(tags[j]) && unique) {\n        result.push(options[i]);\n        unique = false;\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function byEnvironment(environment: string, options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].environments.includes(environment) || options[i].environments.length == 0) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function byName(name: string, options: Species[]): Species {\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].name == name) {\n      return options[i];\n    }\n  }\n\n  throw new Error(`No species found with name ${name}.`);\n}\n\nexport function byTag(tag: string, options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].tags.includes(tag)) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function getModifiedVariants(options: Species[]): Species[] {\n  let result: Species[] = [];\n\n  result = result.concat(getSkeletonVariants(options));\n  result = result.concat(getVampireVariants(options));\n  result = result.concat(getZombieVariants(options));\n\n  return result;\n}\n\nexport function getSkeletonVariants(options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    let skeleton = Skeleton.modify(options[i]);\n    result.push(skeleton);\n  }\n\n  return result;\n}\n\nexport function getVampireVariants(options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    let vampire = Vampire.modify(options[i]);\n    result.push(vampire);\n  }\n\n  return result;\n}\n\nexport function getZombieVariants(options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    let zombie = Zombie.modify(options[i]);\n    result.push(zombie);\n  }\n\n  return result;\n}\n\nexport function randomUniqueSet(options: Species[], count: number): Species[] {\n  let result: Species[] = [];\n\n  options = RND.shuffle(options);\n\n  if (options.length >= count) {\n    for (let i = 0; i < count; i++) {\n      let item: Species | undefined = options.pop();\n      if (item !== undefined) {\n        result.push(item);\n      }\n    }\n  } else {\n    throw new Error(\"Not enough options to choose from.\");\n  }\n\n  return result;\n}\n\nexport function randomWeighted(options: Species[]): Species {\n  return RND.weighted(options);\n}\n\nexport function withCreatureType(creatureType: string, options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].creatureTypes.includes(creatureType)) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function withoutTag(tag: string, options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (!options[i].tags.includes(tag)) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n","\"use strict\";\n\nimport type Species from \"../species.js\";\n\nexport function modify(species: Species): Species {\n  let result: Species = JSON.parse(JSON.stringify(species));\n\n  let modifierName = \"zombie\";\n\n  result.name = `${modifierName} ${result.name}`;\n  result.pluralName = `${modifierName} ${result.pluralName}`;\n  result.adjective = `${modifierName} ${result.adjective}`;\n  result.abilities.push(\"can only be killed by removing the head\");\n\n  let newTags = [];\n\n  for (let i = 0; i < result.tags.length; i++) {\n    if (result.tags[i] != \"sentient\") {\n      newTags.push(result.tags[i]);\n    }\n  }\n\n  result.tags = newTags;\n\n  result.abilities.push(\"can bite others to transform them into zombies\");\n  result.tags.push(\"zombie\");\n  result.tags.push(\"undead\");\n  result.threatLevel += 1;\n\n  return result;\n}\n","\"use strict\";\n\nimport type Species from \"../species.js\";\n\nexport function modify(species: Species): Species {\n  let result: Species = JSON.parse(JSON.stringify(species));\n\n  let modifierName = \"vampire\";\n\n  result.name = `${modifierName} ${result.name}`;\n  result.pluralName = `${modifierName} ${result.pluralName}`;\n  result.adjective = `${modifierName} ${result.adjective}`;\n  result.abilities.push(\"drain blood to gain life\");\n  result.abilities.push(\"transform into a bat\");\n  result.abilities.push(\"transform into a wolf\");\n  result.abilities.push(\"transform into mist\");\n  result.abilities.push(\"see in the dark\");\n  result.abilities.push(\"can only be killed by a stake through the heart or by direct sunlight\");\n  result.tags.push(\"vampire\");\n  result.tags.push(\"undead\");\n  result.threatLevel += 5;\n\n  return result;\n}\n","\"use strict\";\n\nimport type Species from \"../species.js\";\n\nexport function modify(species: Species): Species {\n  let result: Species = JSON.parse(JSON.stringify(species));\n\n  let modifierName = \"skeletal\";\n\n  result.name = `${modifierName} ${result.name}`;\n  result.pluralName = `${modifierName} ${result.pluralName}`;\n  result.adjective = `${modifierName} ${result.adjective}`;\n  result.abilities.push(\"unharmed by piercing damage\");\n  result.tags.push(\"skeleton\");\n  result.tags.push(\"undead\");\n  result.threatLevel += 1;\n\n  return result;\n}\n"],"names":["Zombie.modify","Vampire.modify","Skeleton.modify","modify"],"mappings":"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"}