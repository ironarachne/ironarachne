{"version":3,"file":"_page.svelte-df2a156f.js","sources":["../../../../src/routes/fantasy/family/+page.svelte","../../../../src/lib/characters/family/families.ts"],"sourcesContent":["<script lang=\"ts\">\n  import * as CommonSpecies from '$lib/species/common';\n  import * as RND from \"@ironarachne/rng\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n  import * as Families from \"$lib/characters/family/families.js\";\n  import * as MUN from \"@ironarachne/made-up-names\";\n  import type Gender from \"$lib/gender/gender\";\n  import type Species from \"$lib/species/species\";\n  import type NameGenerator from '@ironarachne/made-up-names/dist/generator';\n\n  let seed = RND.randomString(13);\n  let availableSpecies = CommonSpecies.sentient();\n  let selectedSpecies = \"any\";\n  let species = CommonSpecies.randomWeighted(availableSpecies);\n  let iterations = 2;\n  const generatorSets = MUN.allSets();\n  let nameGeneratorSet;\n\n  try {\n    nameGeneratorSet = MUN.getSetByName(species.name, generatorSets);\n  } catch (e) {\n    console.debug(e);\n    nameGeneratorSet = MUN.getSetByName(\"fantasy\", generatorSets);\n  }\n\n  let familyNameGen: NameGenerator = nameGeneratorSet.family;\n  let femaleNameGen: NameGenerator = nameGeneratorSet.female;\n  let maleNameGen: NameGenerator = nameGeneratorSet.male;\n  let lastNameTradition = \"male\";\n  let config = Families.getDefaultConfig();\n  config.species = species;\n  config.iterations = iterations;\n  config.rootFamilyNameGenerator = familyNameGen;\n  config.rootFemaleNameGenerator = femaleNameGen;\n  config.rootMaleNameGenerator = maleNameGen;\n  config.dominantFamilyNameGender = getDominantGender();\n\n  let family = Families.generate(config);\n\n  function generate() {\n    random.use(seedrandom(seed));\n    species = getSpecies(selectedSpecies);\n\n    try {\n      nameGeneratorSet = MUN.getSetByName(species.name, generatorSets);\n    } catch (e) {\n      console.debug(e);\n      nameGeneratorSet = MUN.getSetByName(\"fantasy\", generatorSets);\n    }\n\n    familyNameGen = nameGeneratorSet.family;\n    femaleNameGen = nameGeneratorSet.female;\n    maleNameGen = nameGeneratorSet.male;\n    config.species = species;\n    config.iterations = iterations;\n    config.rootFamilyNameGenerator = familyNameGen;\n    config.rootFemaleNameGenerator = femaleNameGen;\n    config.rootMaleNameGenerator = maleNameGen;\n    config.dominantFamilyNameGender = getDominantGender();\n\n    family = Families.generate(config);\n  }\n\n  function getDominantGender(): Gender {\n    for (let i=0;i<species.genders.length;i++) {\n      if (species.genders[i].name == lastNameTradition) {\n        return species.genders[i];\n      }\n    }\n\n    throw new Error(\"Dominant gender not set\");\n  }\n\n  function getSpecies(name: string): Species {\n    if (name == \"any\") {\n      return CommonSpecies.randomWeighted(availableSpecies);\n    }\n\n    for (let i=0;i<availableSpecies.length;i++) {\n      if (availableSpecies[i].name == name) {\n        return availableSpecies[i];\n      }\n    }\n\n    throw new Error(\"Species not found\");\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/fantasy.scss';\n</style>\n\n<svelte:head>\n  <title>Fantasy Family Generator | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"fantasy main\">\n  <h1>Fantasy Family Generator</h1>\n\n  <p>This generator creates a family. Note that more than 10 iterations can be quite slow. More than 30 may or may not crash your browser.</p>\n\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\"/>\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"iterations\">Iterations</label>\n    <input type=\"number\" name=\"iterations\" bind:value={iterations} id=\"iterations\" min=\"1\" max=\"10\" />\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"species\">Species</label>\n    <select id=\"species\" bind:value={selectedSpecies}>\n      <option>any</option>\n      {#each availableSpecies as option}\n      <option>{option.name}</option>\n      {/each}\n    </select>\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"last-name-tradition\">Last name tradition (gender)</label>\n    <select id=\"last-name-tradition\" bind:value={lastNameTradition}>\n      <option>male</option>\n      <option>female</option>\n    </select>\n  </div>\n\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n\n  <h2>The {family.name} Family</h2>\n\n  {#each family.members as member}\n    <h3>{member.character.firstName} {member.character.lastName}</h3>\n    <p>{member.character.age}-year-old {member.character.species.name} {member.character.ageCategory.noun} {#if member.character.status == \"dead\"}(dead){/if}</p>\n    <p>{member.character.description}</p>\n    {#if member.mate != -1}\n      <p><strong>Mate:</strong> {Families.getMate(family, member).character.firstName} {Families.getMate(family, member).character.lastName}</p>\n    {/if}\n    {#if member.children.length > 0}\n      <h4>Children</h4>\n      <ul>\n        {#each Families.getChildren(family, member) as child}\n          <li>{child.character.firstName} {child.character.lastName}</li>\n        {/each}\n      </ul>\n    {/if}\n    {#if member.parents.length > 0}\n      <h4>Parents</h4>\n      <ul>\n        {#each Families.getParents(family, member) as parent}\n          <li>{parent.character.firstName} {parent.character.lastName}</li>\n        {/each}\n      </ul>\n    {/if}\n  {/each}\n</section>\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Characters from \"$lib/characters/characters.js\";\nimport type Gender from \"$lib/gender/gender.js\";\nimport * as SizeMatrix from \"$lib/size/size_matrix.js\";\nimport human from \"$lib/species/sentient/human.js\";\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as RND from \"@ironarachne/rng\";\nimport random from \"random\";\nimport type Character from \"../character\";\nimport type Family from \"./family\";\nimport type FamilyGeneratorConfig from \"./family_generator_config\";\nimport type FamilyMember from \"./family_member\";\n\nexport function generate(config: FamilyGeneratorConfig): Family {\n  let family: Family = {\n    name: \"\",\n    familyNameGenerator: config.rootFamilyNameGenerator,\n    femaleNameGenerator: config.rootFemaleNameGenerator,\n    maleNameGenerator: config.rootMaleNameGenerator,\n    members: [],\n  };\n\n  let genderNames = [];\n  for (let i = 0; i < config.species.genders.length; i++) {\n    genderNames.push(config.species.genders[i].name);\n  }\n\n  let charGenConfig = {\n    speciesOptions: [config.species],\n    ageCategoryNames: [config.species.ageCategories[3].name],\n    familyNameGenerator: family.familyNameGenerator,\n    femaleNameGenerator: family.femaleNameGenerator,\n    maleNameGenerator: family.maleNameGenerator,\n    genderNameOptions: genderNames,\n    useAdaptiveNames: false,\n    physicalTraitOverrides: [],\n  };\n\n  let parent1: FamilyMember = {\n    id: 0,\n    character: Characters.generate(charGenConfig),\n    parents: [],\n    children: [],\n    mate: 0,\n  };\n  parent1.character.age += 5;\n  parent1.character.description = Characters.describe(parent1.character);\n\n  let mateGender = getMateGender(parent1.character.gender, config.species.genders);\n  charGenConfig.genderNameOptions = [mateGender.name];\n  let parent2: FamilyMember = {\n    id: 1,\n    character: Characters.generate(charGenConfig),\n    parents: [],\n    children: [],\n    mate: 0,\n  };\n  parent2.character.age += 5;\n  parent2.character.description = Characters.describe(parent2.character);\n\n  if (parent1.character.gender.name == config.dominantFamilyNameGender.name) {\n    parent2.character.lastName = parent1.character.lastName;\n    family.name = parent1.character.lastName;\n  } else {\n    parent1.character.lastName = parent2.character.lastName;\n    family.name = parent2.character.lastName;\n  }\n\n  parent1.mate = parent2.id;\n  parent2.mate = parent1.id;\n\n  family.members.push(parent1);\n  family.members.push(parent2);\n\n  for (let i = 0; i < config.iterations; i++) {\n    family = iterate(family, config);\n  }\n\n  return family;\n}\n\nexport function getChildren(family: Family, parent: FamilyMember): FamilyMember[] {\n  let children: FamilyMember[] = [];\n  for (let i = 0; i < parent.children.length; i++) {\n    children.push(family.members[parent.children[i]]);\n  }\n\n  return children;\n}\n\nexport function getDefaultConfig(): FamilyGeneratorConfig {\n  let generatorSets = MUN.allSets();\n  let generatorSet = MUN.getSetByName(\"human\", generatorSets);\n  let config = {\n    species: human,\n    iterations: 10,\n    rootFamilyNameGenerator: generatorSet.family,\n    rootFemaleNameGenerator: generatorSet.female,\n    rootMaleNameGenerator: generatorSet.male,\n    dominantFamilyNameGender: human.genders[1],\n  };\n\n  return config;\n}\n\nexport function getMate(family: Family, person: FamilyMember): FamilyMember {\n  return family.members[person.mate];\n}\n\nexport function getParents(family: Family, person: FamilyMember): FamilyMember[] {\n  let parents = [];\n  for (let i = 0; i < person.parents.length; i++) {\n    parents.push(family.members[person.parents[i]]);\n  }\n\n  return parents;\n}\n\nexport function iterate(family: Family, config: FamilyGeneratorConfig): Family {\n  const ageStep = 5;\n\n  for (let i = 0; i < family.members.length; i++) {\n    if (family.members[i].character.status == \"alive\") {\n      family.members[i].character.age += ageStep;\n    }\n\n    if (\n      family.members[i].character.age\n        > AgeCategories.getMaxAge(family.members[i].character.species.ageCategories)\n    ) {\n      // This person died of old age\n      family.members[i].character.status = \"dead\";\n    } else {\n      // This person aged normally\n      let newAgeCategory = AgeCategories.getCategoryFromAge(\n        family.members[i].character.age,\n        family.members[i].character.species.ageCategories,\n      );\n\n      if (newAgeCategory.name != family.members[i].character.ageCategory.name) {\n        // This person aged into a new age category and needs a new height and weight\n        let sizeGeneratorConfig = SizeMatrix.getSizeConfig(\n          family.members[i].character.gender.name,\n          newAgeCategory.name,\n          family.members[i].character.species.sizeGeneratorConfigMatrix,\n        );\n\n        family.members[i].character.height = random.int(sizeGeneratorConfig.minHeight, sizeGeneratorConfig.maxHeight);\n        family.members[i].character.weight = random.int(sizeGeneratorConfig.minWeight, sizeGeneratorConfig.maxWeight);\n      }\n      family.members[i].character.ageCategory = newAgeCategory;\n    }\n\n    family.members[i].character.description = Characters.describe(family.members[i].character);\n\n    if (family.members[i].character.status == \"dead\") {\n      continue;\n    }\n\n    if (RND.simple(100) > 98) {\n      // There's a 2% chance something horrible kills this person\n      family.members[i].character.status = \"dead\";\n      continue;\n    }\n\n    if (needsChildren(family.members[i]) && RND.simple(100) > 30) {\n      let numberOfChildren = random.int(1, 4);\n      for (let j = 0; j < numberOfChildren; j++) {\n        let child = getNewChild(i, family.members[i].mate, family);\n        let newMember: FamilyMember = {\n          id: family.members.length,\n          character: child,\n          children: [],\n          parents: [i, family.members[i].mate],\n          mate: -1,\n        };\n        family.members[i].children.push(newMember.id);\n        family.members[family.members[i].mate].children.push(newMember.id);\n\n        if (\n          family.members[i].character.gender.name == config.dominantFamilyNameGender.name\n        ) {\n          newMember.character.lastName = family.members[i].character.lastName;\n        } else {\n          newMember.character.lastName = family.members[family.members[i].mate].character.lastName;\n        }\n\n        family.members.push(newMember);\n      }\n    }\n\n    if (needsMate(family.members[i]) && RND.simple(100) > 50) {\n      let mate = getNewMate(family.members[i], family);\n      let newMember: FamilyMember = { id: family.members.length, character: mate, children: [], parents: [], mate: i };\n      family.members[i].mate = newMember.id;\n\n      if (family.members[i].character.gender.name == config.dominantFamilyNameGender.name) {\n        newMember.character.lastName = family.members[i].character.lastName;\n      } else {\n        family.members[i].character.lastName = newMember.character.lastName;\n      }\n\n      family.members.push(newMember);\n    }\n  }\n\n  return family;\n}\n\nfunction getNewChild(parent1Index: number, parent2Index: number, family: Family): Character {\n  let parent1 = family.members[parent1Index].character;\n  let parent2 = family.members[parent2Index].character;\n\n  let physicalTraits = parent1.physicalTraits.concat(parent2.physicalTraits);\n  let uniqueNames: string[] = [];\n  let traitOverrides = [];\n  physicalTraits = RND.shuffle(physicalTraits);\n  for (let i = 0; i < physicalTraits.length; i++) {\n    if (!uniqueNames.includes(physicalTraits[i].name)) {\n      traitOverrides.push(physicalTraits[i]);\n      uniqueNames.push(physicalTraits[i].name);\n    }\n  }\n\n  let charConfig = Characters.getDefaultCharacterGeneratorConfig();\n  charConfig.speciesOptions = [parent1.species, parent2.species];\n  charConfig.ageCategoryNames = [\"infant\", \"toddler\"];\n  charConfig.familyNameGenerator = family.familyNameGenerator;\n  charConfig.femaleNameGenerator = family.femaleNameGenerator;\n  charConfig.maleNameGenerator = family.maleNameGenerator;\n  let genderNames = [];\n  for (let i = 0; i < parent1.species.genders.length; i++) {\n    genderNames.push(parent1.species.genders[i].name);\n  }\n  charConfig.genderNameOptions = genderNames;\n  charConfig.physicalTraitOverrides = traitOverrides;\n\n  let child = Characters.generate(charConfig);\n\n  return child;\n}\n\nfunction getNewMate(member: FamilyMember, family: Family): Character {\n  let gender = member.character.gender;\n\n  let charConfig = Characters.getDefaultCharacterGeneratorConfig();\n  charConfig.speciesOptions = [member.character.species];\n  charConfig.ageCategoryNames = [\"adult\"];\n  charConfig.familyNameGenerator = family.familyNameGenerator;\n  charConfig.femaleNameGenerator = family.femaleNameGenerator;\n  charConfig.maleNameGenerator = family.maleNameGenerator;\n  charConfig.genderNameOptions = [getMateGender(gender, member.character.species.genders).name];\n\n  let mate = Characters.generate(charConfig);\n\n  return mate;\n}\n\nfunction getMateGender(gender1: Gender, genders: Gender[]): Gender {\n  for (let i = 0; i < genders.length; i++) {\n    if (genders[i].name != gender1.name) {\n      return genders[i];\n    }\n  }\n\n  return gender1;\n}\n\nfunction needsChildren(member: FamilyMember): boolean {\n  if (\n    member.mate != -1\n    && member.children.length == 0\n    && member.character.ageCategory.name == \"adult\"\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction needsMate(member: FamilyMember): boolean {\n  if (member.character.ageCategory.name == \"adult\" && member.mate == -1) {\n    return true;\n  }\n\n  return false;\n}\n"],"names":["Families.getParents","Families.getMate","Families.getChildren","Families.generate","Families.getDefaultConfig","CommonSpecies.randomWeighted","CommonSpecies.sentient","Characters.generate","Characters.getDefaultCharacterGeneratorConfig","Characters.describe","SizeMatrix.getSizeConfig","AgeCategories.getCategoryFromAge","AgeCategories.getMaxAge"],"mappings":"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"}