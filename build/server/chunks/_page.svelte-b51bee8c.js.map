{"version":3,"file":"_page.svelte-b51bee8c.js","sources":["../../../../src/routes/fantasy/family/+page.svelte","../../../../src/lib/characters/family/generator.ts","../../../../src/lib/characters/family/family.ts","../../../../src/lib/characters/family/familymember.ts","../../../../src/lib/characters/family/generatorconfig.ts"],"sourcesContent":["<script lang=\"ts\">\n  import * as CommonSpecies from '$lib/species/common';\n  import * as FantasySpecies from \"$lib/species/fantasy\";\n  import * as RND from \"@ironarachne/rng\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n  import FamilyGeneratorConfig from \"$lib/characters/family/generatorconfig\";\n  import FamilyGenerator from \"$lib/characters/family/generator\";\n  import type Gender from \"$lib/gender\";\n  import type Species from \"$lib/species/species\";\n  import type NameGenerator from '@ironarachne/made-up-names/dist/generator';\n\n  let seed = RND.randomString(13);\n  let availableSpecies = FantasySpecies.all();\n  let selectedSpecies = \"any\";\n  let species = CommonSpecies.randomWeighted(availableSpecies);\n  let iterations = 2;\n  if (species.nameGeneratorSet.family === null) {\n    throw new Error(\"Species does not have a family name generator.\")\n  }\n  if (species.nameGeneratorSet.female === null) {\n    throw new Error(\"Species does not have a female name generator.\")\n  }\n  if (species.nameGeneratorSet.male === null) {\n    throw new Error(\"Species does not have a male name generator.\")\n  }\n  let familyNameGen: NameGenerator = species.nameGeneratorSet.family;\n  let femaleNameGen: NameGenerator = species.nameGeneratorSet.female;\n  let maleNameGen: NameGenerator = species.nameGeneratorSet.male;\n  let lastNameTradition = \"male\";\n  let config = new FamilyGeneratorConfig(species, iterations, familyNameGen, femaleNameGen, maleNameGen, getDominantGender());\n  let generator = new FamilyGenerator(config);\n  let family = generator.generate();\n\n  function generate() {\n    random.use(seedrandom(seed));\n    species = getSpecies(selectedSpecies);\n    if (species.nameGeneratorSet.family === null) {\n      throw new Error(\"Species does not have a family name generator.\")\n    }\n    if (species.nameGeneratorSet.female === null) {\n      throw new Error(\"Species does not have a female name generator.\")\n    }\n    if (species.nameGeneratorSet.male === null) {\n      throw new Error(\"Species does not have a male name generator.\")\n    }\n    familyNameGen = species.nameGeneratorSet.family;\n    femaleNameGen = species.nameGeneratorSet.female;\n    maleNameGen = species.nameGeneratorSet.male;\n    config = new FamilyGeneratorConfig(species, iterations, familyNameGen, femaleNameGen, maleNameGen, getDominantGender());\n    generator.config = config;\n    family = generator.generate();\n  }\n\n  function getDominantGender(): Gender {\n    for (let i=0;i<species.genders.length;i++) {\n      if (species.genders[i].name == lastNameTradition) {\n        return species.genders[i];\n      }\n    }\n\n    throw new Error(\"Dominant gender not set\");\n  }\n\n  function getSpecies(name: string): Species {\n    if (name == \"any\") {\n      return CommonSpecies.randomWeighted(availableSpecies);\n    }\n\n    for (let i=0;i<availableSpecies.length;i++) {\n      if (availableSpecies[i].name == name) {\n        return availableSpecies[i];\n      }\n    }\n\n    throw new Error(\"Species not found\");\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/fantasy.scss';\n</style>\n\n<svelte:head>\n  <title>Fantasy Family Generator | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"fantasy main\">\n  <h1>Fantasy Family Generator</h1>\n\n  <p>This generator creates a family. Note that more than 10 iterations can be quite slow. More than 30 may or may not crash your browser.</p>\n\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\"/>\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"iterations\">Iterations</label>\n    <input type=\"number\" name=\"iterations\" bind:value={iterations} id=\"iterations\" min=\"1\" max=\"10\" />\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"species\">Species</label>\n    <select id=\"species\" bind:value={selectedSpecies}>\n      <option>any</option>\n      {#each availableSpecies as option}\n      <option>{option.name}</option>\n      {/each}\n    </select>\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"last-name-tradition\">Last name tradition (gender)</label>\n    <select id=\"last-name-tradition\" bind:value={lastNameTradition}>\n      <option>male</option>\n      <option>female</option>\n    </select>\n  </div>\n\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n\n  <h2>The {family.name} Family</h2>\n\n  {#each family.members as member}\n    <h3>{member.character.firstName} {member.character.lastName}</h3>\n    <p>{member.character.age}-year-old {member.character.species.name} {member.character.ageCategory.noun} {#if member.character.status == \"dead\"}(dead){/if}</p>\n    <p>{member.character.description}</p>\n    {#if member.mate != -1}\n      <p><strong>Mate:</strong> {family.getMate(member).character.firstName} {family.getMate(member).character.lastName}</p>\n    {/if}\n    {#if member.children.length > 0}\n      <h4>Children</h4>\n      <ul>\n        {#each family.getChildren(member) as child}\n          <li>{child.character.firstName} {child.character.lastName}</li>\n        {/each}\n      </ul>\n    {/if}\n    {#if member.parents.length > 0}\n      <h4>Parents</h4>\n      <ul>\n        {#each family.getParents(member) as parent}\n          <li>{parent.character.firstName} {parent.character.lastName}</li>\n        {/each}\n      </ul>\n    {/if}\n  {/each}\n</section>\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport random from \"random\";\nimport * as AgeCategories from \"../../age/agecategories.js\";\nimport Gender from \"../../gender.js\";\nimport Character from \"../character.js\";\nimport CharacterGenerator from \"../generator.js\";\nimport CharacterGeneratorConfig from \"../generatorconfig.js\";\nimport Family from \"./family.js\";\nimport FamilyMember from \"./familymember.js\";\nimport FamilyGeneratorConfig from \"./generatorconfig.js\";\n\nexport default class FamilyGenerator {\n  config: FamilyGeneratorConfig;\n\n  constructor(config: FamilyGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): Family {\n    let family = new Family();\n    family.familyNameGenerator = this.config.rootFamilyNameGenerator;\n    family.femaleNameGenerator = this.config.rootFemaleNameGenerator;\n    family.maleNameGenerator = this.config.rootMaleNameGenerator;\n\n    let charGenConfig = new CharacterGeneratorConfig();\n    charGenConfig.speciesOptions = [this.config.species];\n    charGenConfig.ageCategories = [\"young adult\"];\n    charGenConfig.familyNameGenerator = family.familyNameGenerator;\n    charGenConfig.femaleNameGenerator = family.femaleNameGenerator;\n    charGenConfig.maleNameGenerator = family.maleNameGenerator;\n\n    let genderNames = [];\n    for (let i = 0; i < this.config.species.genders.length; i++) {\n      genderNames.push(this.config.species.genders[i].name);\n    }\n    charGenConfig.genderNameOptions = genderNames;\n\n    let charGen = new CharacterGenerator(charGenConfig);\n\n    let parent1 = new FamilyMember(0);\n    parent1.character = charGen.generate();\n    parent1.character.age += 5;\n    parent1.character.description = charGen.describe(parent1.character);\n\n    let mateGender = getMateGender(parent1.character.gender, this.config.species.genders);\n    charGen.config.genderNameOptions = [mateGender.name];\n    let parent2 = new FamilyMember(1);\n    parent2.character = charGen.generate();\n    parent2.character.age += 5;\n    parent2.character.description = charGen.describe(parent2.character);\n\n    if (parent1.character.gender.name == this.config.dominantFamilyNameGender.name) {\n      parent2.character.lastName = parent1.character.lastName;\n      family.name = parent1.character.lastName;\n    } else {\n      parent1.character.lastName = parent2.character.lastName;\n      family.name = parent2.character.lastName;\n    }\n\n    parent1.mate = parent2.id;\n    parent2.mate = parent1.id;\n\n    family.members.push(parent1);\n    family.members.push(parent2);\n\n    for (let i = 0; i < this.config.iterations; i++) {\n      family = this.iterate(family);\n    }\n\n    return family;\n  }\n\n  iterate(family: Family): Family {\n    const ageStep = 5;\n    let charGenConfig = new CharacterGeneratorConfig();\n    const charGen = new CharacterGenerator(charGenConfig);\n\n    for (let i = 0; i < family.members.length; i++) {\n      if (family.members[i].character.status == \"alive\") {\n        family.members[i].character.age += ageStep;\n      }\n\n      if (\n        family.members[i].character.age\n          > AgeCategories.getMaxAge(family.members[i].character.gender.ageCategories)\n      ) {\n        family.members[i].character.status = \"dead\";\n      } else {\n        let newAgeCategory = AgeCategories.getCategoryFromAge(\n          family.members[i].character.age,\n          family.members[i].character.gender.ageCategories,\n        );\n        if (newAgeCategory.name != family.members[i].character.ageCategory.name) {\n          family.members[i].character.height = newAgeCategory.randomHeight();\n          family.members[i].character.weight = newAgeCategory.randomWeight();\n        }\n        family.members[i].character.ageCategory = newAgeCategory;\n      }\n\n      family.members[i].character.description = charGen.describe(family.members[i].character);\n\n      if (family.members[i].character.status == \"dead\") {\n        continue;\n      }\n\n      if (RND.simple(100) > 98) {\n        // There's a 2% chance something horrible kills this person\n        family.members[i].character.status = \"dead\";\n        continue;\n      }\n\n      if (needsChildren(family.members[i]) && RND.simple(100) > 30) {\n        let numberOfChildren = random.int(1, 4);\n        for (let j = 0; j < numberOfChildren; j++) {\n          let child = getNewChild(i, family.members[i].mate, family);\n          let newMember = new FamilyMember(family.members.length);\n          newMember.character = child;\n          newMember.parents = [i, family.members[i].mate];\n          family.members[i].children.push(newMember.id);\n          family.members[family.members[i].mate].children.push(newMember.id);\n\n          if (\n            family.members[i].character.gender.name == this.config.dominantFamilyNameGender.name\n          ) {\n            newMember.character.lastName = family.members[i].character.lastName;\n          } else {\n            newMember.character.lastName = family.members[family.members[i].mate].character.lastName;\n          }\n\n          family.members.push(newMember);\n        }\n      }\n\n      if (needsMate(family.members[i]) && RND.simple(100) > 50) {\n        let mate = getNewMate(family.members[i], family);\n        let newMember = new FamilyMember(family.members.length);\n        newMember.character = mate;\n        newMember.mate = i;\n        family.members[i].mate = newMember.id;\n\n        if (family.members[i].character.gender.name == this.config.dominantFamilyNameGender.name) {\n          newMember.character.lastName = family.members[i].character.lastName;\n        } else {\n          family.members[i].character.lastName = newMember.character.lastName;\n        }\n\n        family.members.push(newMember);\n      }\n    }\n\n    return family;\n  }\n}\n\nfunction getNewChild(parent1Index: number, parent2Index: number, family: Family): Character {\n  let parent1 = family.members[parent1Index].character;\n  let parent2 = family.members[parent2Index].character;\n\n  let physicalTraits = parent1.physicalTraits.concat(parent2.physicalTraits);\n  let uniqueNames: string[] = [];\n  let traitOverrides = [];\n  physicalTraits = RND.shuffle(physicalTraits);\n  for (let i = 0; i < physicalTraits.length; i++) {\n    if (!uniqueNames.includes(physicalTraits[i].name)) {\n      traitOverrides.push(physicalTraits[i]);\n      uniqueNames.push(physicalTraits[i].name);\n    }\n  }\n\n  let charConfig = new CharacterGeneratorConfig();\n  charConfig.speciesOptions = [parent1.species, parent2.species];\n  charConfig.ageCategories = [\"infant\", \"toddler\"];\n  charConfig.familyNameGenerator = family.familyNameGenerator;\n  charConfig.femaleNameGenerator = family.femaleNameGenerator;\n  charConfig.maleNameGenerator = family.maleNameGenerator;\n  let genderNames = [];\n  for (let i = 0; i < parent1.species.genders.length; i++) {\n    genderNames.push(parent1.species.genders[i].name);\n  }\n  charConfig.genderNameOptions = genderNames;\n  charConfig.physicalTraitOverrides = traitOverrides;\n\n  let charGen = new CharacterGenerator(charConfig);\n\n  let child = charGen.generate();\n\n  return child;\n}\n\nfunction getNewMate(member: FamilyMember, family: Family): Character {\n  let gender = member.character.gender;\n\n  let charConfig = new CharacterGeneratorConfig();\n  charConfig.speciesOptions = [member.character.species];\n  charConfig.ageCategories = [\"adult\"];\n  charConfig.familyNameGenerator = family.familyNameGenerator;\n  charConfig.femaleNameGenerator = family.femaleNameGenerator;\n  charConfig.maleNameGenerator = family.maleNameGenerator;\n  charConfig.genderNameOptions = [getMateGender(gender, member.character.species.genders).name];\n\n  let charGen = new CharacterGenerator(charConfig);\n\n  let mate = charGen.generate();\n\n  return mate;\n}\n\nfunction getMateGender(gender1: Gender, genders: Gender[]): Gender {\n  for (let i = 0; i < genders.length; i++) {\n    if (genders[i].name != gender1.name) {\n      return genders[i];\n    }\n  }\n\n  return gender1;\n}\n\nfunction needsChildren(member: FamilyMember): boolean {\n  if (\n    member.mate != -1\n    && member.children.length == 0\n    && member.character.ageCategory.name == \"adult\"\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction needsMate(member: FamilyMember): boolean {\n  if (member.character.ageCategory.name == \"adult\" && member.mate == -1) {\n    return true;\n  }\n\n  return false;\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport FamilyMember from \"./familymember.js\";\n\nexport default class Family {\n  name: string;\n  members: FamilyMember[];\n  familyNameGenerator: MUN.Generator;\n  femaleNameGenerator: MUN.Generator;\n  maleNameGenerator: MUN.Generator;\n\n  constructor() {\n    this.name = \"\";\n    this.members = [];\n  }\n\n  getChildren(parent: FamilyMember): FamilyMember[] {\n    let children = [];\n    for (let i = 0; i < parent.children.length; i++) {\n      children.push(this.members[parent.children[i]]);\n    }\n\n    return children;\n  }\n\n  getMate(person: FamilyMember): FamilyMember {\n    return this.members[person.mate];\n  }\n\n  getParents(person: FamilyMember): FamilyMember[] {\n    let parents = [];\n    for (let i = 0; i < person.parents.length; i++) {\n      parents.push(this.members[person.parents[i]]);\n    }\n\n    return parents;\n  }\n}\n","\"use strict\";\n\nimport Character from \"../character.js\";\n\nexport default class FamilyMember {\n  id: number;\n  character: Character;\n  children: number[];\n  parents: number[];\n  mate: number;\n\n  constructor(id: number) {\n    this.id = id;\n    this.children = [];\n    this.parents = [];\n    this.mate = -1;\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport Gender from \"../../gender.js\";\nimport type Species from \"../../species/species.js\";\n\nexport default class FamilyGeneratorConfig {\n  species: Species;\n  iterations: number;\n  rootFamilyNameGenerator: MUN.Generator;\n  rootFemaleNameGenerator: MUN.Generator;\n  rootMaleNameGenerator: MUN.Generator;\n  dominantFamilyNameGender: Gender;\n\n  constructor(\n    species: Species,\n    iterations: number,\n    nameGenFamily: MUN.Generator,\n    nameGenFemale: MUN.Generator,\n    nameGenMale: MUN.Generator,\n    dominantFamilyNameGender: Gender,\n  ) {\n    this.species = species;\n    this.iterations = iterations;\n    this.rootFamilyNameGenerator = nameGenFamily;\n    this.rootFemaleNameGenerator = nameGenFemale;\n    this.rootMaleNameGenerator = nameGenMale;\n    this.dominantFamilyNameGender = dominantFamilyNameGender;\n  }\n}\n"],"names":["CommonSpecies.randomWeighted","FantasySpecies.all","AgeCategories.getCategoryFromAge","AgeCategories.getMaxAge"],"mappings":";;;;;;;;;;;;AIMA,MAAA,qBAAA,CAAA;AAAA,EAA2C,OAA3C,CAAA;AAA2C,EACzC,UADF,CAAA;AACE,EACA,uBADF,CAAA;AACE,EACA,uBADF,CAAA;AACE,EACA,qBADF,CAAA;AACE,EACA,wBADF,CAAA;AACE,EACA,WADF,CACE,OADF,EACE,UADF,EACE,aADF,EACE,aADF,EACE,WADF,EACE,wBADF,EACE;AAUE,IAAJ,IAAA,CAAI,OAAJ,GAAI,OAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,UAAJ,GAAI,UAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,uBAAJ,GAAI,aAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,uBAAJ,GAAI,aAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,qBAAJ,GAAI,WAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,wBAAJ,GAAI,wBAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;ADzBA,MAAA,YAAA,CAAA;AAAA,EAAkC,EAAlC,CAAA;AAAkC,EAChC,SADF,CAAA;AACE,EACA,QADF,CAAA;AACE,EACA,OADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CACE,EADF,EACE;AAGE,IAAJ,IAAA,CAAI,EAAJ,GAAI,EAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,QAAJ,GAAI,EAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,OAAJ,GAAI,EAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,CAAJ,CAAA,CAAA;AAAI,GAAJ;AAEA,CAAA;ADZA,MAAA,MAAA,CAAA;AAAA,EAA4B,IAA5B,CAAA;AAA4B,EAC1B,OADF,CAAA;AACE,EACA,mBADF,CAAA;AACE,EACA,mBADF,CAAA;AACE,EACA,iBADF,CAAA;AACE,EACA,WADF,GACE;AAGE,IAAJ,IAAA,CAAI,IAAJ,GAAI,EAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,OAAJ,GAAI,EAAJ,CAAA;AAAA,GAAA;AAAoB,EAClB,WADF,CACE,MADF,EACE;AAGE,IAAJ,IAAI,QAAJ,GAAI,EAAJ,CAAA;AACI,IAAJ,KAAA,IAAI,CAAJ,GAAI,CAAJ,EAAI,CAAJ,GAAI,MAAJ,CAAI,QAAJ,CAAI,MAAJ,EAAI,CAAJ,EAAA,EAAI;AACE,MAAN,QAAA,CAAM,IAAN,CAAM,IAAN,CAAM,OAAN,CAAM,MAAN,CAAM,QAAN,CAAM,CAAA,CAAA,CAAA,CAAN,CAAA;AAAM,KAAN;AAGI,IAAJ,OAAI,QAAJ,CAAA;AAAI,GAAJ;AAAW,EACT,OADF,CACE,MADF,EACE;AAGE,IAAJ,OAAI,IAAJ,CAAI,OAAJ,CAAI,MAAJ,CAAI,IAAA,CAAJ,CAAA;AAAI,GAAJ;AAAmC,EACjC,UADF,CACE,MADF,EACE;AAGE,IAAJ,IAAI,OAAJ,GAAI,EAAJ,CAAA;AACI,IAAJ,KAAA,IAAI,CAAJ,GAAI,CAAJ,EAAI,CAAJ,GAAI,MAAJ,CAAI,OAAJ,CAAI,MAAJ,EAAI,CAAJ,EAAA,EAAI;AACE,MAAN,OAAA,CAAM,IAAN,CAAM,IAAN,CAAM,OAAN,CAAM,MAAN,CAAM,OAAN,CAAM,CAAA,CAAA,CAAA,CAAN,CAAA;AAAM,KAAN;AAGI,IAAJ,OAAI,OAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;ADzBA,MAAA,eAAA,CAAA;AAAA,EAAqC,MAArC,CAAA;AAAqC,EACnC,WADF,CACE,MADF,EACE;AAGE,IAAJ,IAAA,CAAI,MAAJ,GAAI,MAAJ,CAAA;AAAI,GAAJ;AAAkB,EAChB,QADF,GACE;AAGE,IAAJ,IAAI,MAAJ,GAAI,IAAA,MAAJ,EAAA,CAAA;AACI,IAAJ,MAAA,CAAI,mBAAJ,GAAI,IAAJ,CAAI,MAAJ,CAAI,uBAAJ,CAAA;AACI,IAAJ,MAAA,CAAI,mBAAJ,GAAI,IAAJ,CAAI,MAAJ,CAAI,uBAAJ,CAAA;AACI,IAAJ,MAAA,CAAI,iBAAJ,GAAI,IAAJ,CAAI,MAAJ,CAAI,qBAAJ,CAAA;AAEI,IAAJ,IAAI,aAAJ,GAAI,IAAA,wBAAJ,EAAA,CAAA;AACI,IAAJ,aAAA,CAAI,cAAJ,GAAI,CAAA,IAAJ,CAAI,MAAJ,CAAI,OAAA,CAAJ,CAAA;AACI,IAAJ,aAAA,CAAI,aAAJ,GAAI,CAAA,aAAA,CAAJ,CAAA;AACI,IAAJ,aAAA,CAAI,mBAAJ,GAAI,MAAJ,CAAI,mBAAJ,CAAA;AACI,IAAJ,aAAA,CAAI,mBAAJ,GAAI,MAAJ,CAAI,mBAAJ,CAAA;AACI,IAAJ,aAAA,CAAI,iBAAJ,GAAI,MAAJ,CAAI,iBAAJ,CAAA;AAEI,IAAJ,IAAI,WAAJ,GAAI,EAAJ,CAAA;AACI,IAAJ,KAAA,IAAI,CAAJ,GAAI,CAAJ,EAAI,CAAJ,GAAI,IAAJ,CAAI,MAAJ,CAAI,OAAJ,CAAI,OAAJ,CAAI,MAAJ,EAAI,CAAJ,EAAA,EAAI;AACE,MAAN,WAAA,CAAM,IAAN,CAAM,IAAN,CAAM,MAAN,CAAM,OAAN,CAAM,OAAN,CAAM,CAAA,CAAN,CAAM,IAAA,CAAN,CAAA;AAAM,KAAN;AAEI,IAAJ,aAAA,CAAI,iBAAJ,GAAI,WAAJ,CAAA;AAEI,IAAJ,IAAI,OAAJ,GAAI,IAAA,kBAAJ,CAAI,aAAA,CAAJ,CAAA;AAEI,IAAJ,IAAI,OAAJ,GAAI,IAAA,YAAJ,CAAI,CAAA,CAAJ,CAAA;AACI,IAAJ,OAAA,CAAI,SAAJ,GAAI,OAAJ,CAAI,QAAJ,EAAA,CAAA;AACI,IAAJ,OAAA,CAAI,SAAJ,CAAI,GAAJ,IAAI,CAAJ,CAAA;AACI,IAAJ,OAAA,CAAI,SAAJ,CAAI,WAAJ,GAAI,OAAJ,CAAI,QAAJ,CAAI,OAAJ,CAAI,SAAA,CAAJ,CAAA;AAEI,IAAJ,IAAI,UAAJ,GAAI,aAAJ,CAAI,OAAJ,CAAI,SAAJ,CAAI,MAAJ,EAAI,IAAJ,CAAI,MAAJ,CAAI,OAAJ,CAAI,OAAA,CAAJ,CAAA;AACI,IAAJ,OAAA,CAAI,MAAJ,CAAI,iBAAJ,GAAI,CAAA,UAAJ,CAAI,IAAA,CAAJ,CAAA;AACI,IAAJ,IAAI,OAAJ,GAAI,IAAA,YAAJ,CAAI,CAAA,CAAJ,CAAA;AACI,IAAJ,OAAA,CAAI,SAAJ,GAAI,OAAJ,CAAI,QAAJ,EAAA,CAAA;AACI,IAAJ,OAAA,CAAI,SAAJ,CAAI,GAAJ,IAAI,CAAJ,CAAA;AACI,IAAJ,OAAA,CAAI,SAAJ,CAAI,WAAJ,GAAI,OAAJ,CAAI,QAAJ,CAAI,OAAJ,CAAI,SAAA,CAAJ,CAAA;AAEI,IAAJ,IAAI,OAAJ,CAAI,SAAJ,CAAI,MAAJ,CAAI,IAAJ,IAAI,IAAJ,CAAI,MAAJ,CAAI,wBAAJ,CAAI,IAAJ,EAAI;AACE,MAAN,OAAA,CAAM,SAAN,CAAM,QAAN,GAAM,OAAN,CAAM,SAAN,CAAM,QAAN,CAAA;AACM,MAAN,MAAA,CAAM,IAAN,GAAM,OAAN,CAAM,SAAN,CAAM,QAAN,CAAA;AAAM,KAAN,MAAsC;AAEhC,MAAN,OAAA,CAAM,SAAN,CAAM,QAAN,GAAM,OAAN,CAAM,SAAN,CAAM,QAAN,CAAA;AACM,MAAN,MAAA,CAAM,IAAN,GAAM,OAAN,CAAM,SAAN,CAAM,QAAN,CAAA;AAAM,KAAN;AAGI,IAAJ,OAAA,CAAI,IAAJ,GAAI,OAAJ,CAAI,EAAJ,CAAA;AACI,IAAJ,OAAA,CAAI,IAAJ,GAAI,OAAJ,CAAI,EAAJ,CAAA;AAEI,IAAJ,MAAA,CAAI,OAAJ,CAAI,IAAJ,CAAI,OAAA,CAAJ,CAAA;AACI,IAAJ,MAAA,CAAI,OAAJ,CAAI,IAAJ,CAAI,OAAA,CAAJ,CAAA;AAEI,IAAJ,KAAA,IAAI,CAAJ,GAAI,CAAJ,EAAI,CAAJ,GAAI,IAAJ,CAAI,MAAJ,CAAI,UAAJ,EAAI,CAAJ,EAAA,EAAI;AACE,MAAN,MAAA,GAAM,IAAN,CAAM,OAAN,CAAM,MAAA,CAAN,CAAA;AAAM,KAAN;AAGI,IAAJ,OAAI,MAAJ,CAAA;AAAI,GAAJ;AAAW,EACT,OADF,CACE,MADF,EACE;AAGE,IAAJ,MAAI,OAAJ,GAAI,CAAJ,CAAA;AACI,IAAJ,IAAI,aAAJ,GAAI,IAAA,wBAAJ,EAAA,CAAA;AACI,IAAJ,MAAI,OAAJ,GAAI,IAAA,kBAAJ,CAAI,aAAA,CAAJ,CAAA;AAEI,IAAJ,KAAA,IAAI,CAAJ,GAAI,CAAJ,EAAI,CAAJ,GAAI,MAAJ,CAAI,OAAJ,CAAI,MAAJ,EAAI,CAAJ,EAAA,EAAI;AACE,MAAN,IAAM,MAAN,CAAM,OAAN,CAAM,CAAA,CAAN,CAAM,SAAN,CAAM,MAAN,IAAM,OAAN,EAAM;AACE,QAAR,MAAA,CAAQ,OAAR,CAAQ,CAAA,CAAR,CAAQ,SAAR,CAAQ,GAAR,IAAQ,OAAR,CAAA;AAAQ,OAAR;AAGM,MAAN,IAAM,MAAN,CAAM,OAAN,CAAM,CAAA,CAAN,CAAM,SAAN,CAAM,GAAN,GAAMG,SAAN,CAAM,MAAN,CAAM,OAAN,CAAM,CAAA,CAAN,CAAM,SAAN,CAAM,MAAN,CAAM,aAAA,CAAN,EAAM;AAIE,QAAR,MAAA,CAAQ,OAAR,CAAQ,CAAA,CAAR,CAAQ,SAAR,CAAQ,MAAR,GAAQ,MAAR,CAAA;AAAQ,OAAR,MAA6C;AAErC,QAAR,IAAQ,cAAR,GAAQD,kBAAR;AAAQA,UAAmC,MAA3CA,CAA2C,OAA3CA,CAA2C,CAAA,CAA3CA,CAA2C,SAA3CA,CAA2C,GAA3CA;AAA2C,UACL,MADtC,CACsC,OADtC,CACsC,CAAA,CADtC,CACsC,SADtC,CACsC,MADtC,CACsC,aADtC;AACsC,SAAtC,CAAA;AAGQ,QAAR,IAAQ,cAAR,CAAQ,IAAR,IAAQ,MAAR,CAAQ,OAAR,CAAQ,CAAA,CAAR,CAAQ,SAAR,CAAQ,WAAR,CAAQ,IAAR,EAAQ;AACE,UAAV,MAAA,CAAU,OAAV,CAAU,CAAA,CAAV,CAAU,SAAV,CAAU,MAAV,GAAU,cAAV,CAAU,YAAV,EAAA,CAAA;AACU,UAAV,MAAA,CAAU,OAAV,CAAU,CAAA,CAAV,CAAU,SAAV,CAAU,MAAV,GAAU,cAAV,CAAU,YAAV,EAAA,CAAA;AAAA,SAAA;AAEQ,QAAR,MAAA,CAAQ,OAAR,CAAQ,CAAA,CAAR,CAAQ,SAAR,CAAQ,WAAR,GAAQ,cAAR,CAAA;AAAQ,OAAR;AAGM,MAAN,MAAA,CAAM,OAAN,CAAM,CAAA,CAAN,CAAM,SAAN,CAAM,WAAN,GAAM,OAAN,CAAM,QAAN,CAAM,MAAN,CAAM,OAAN,CAAM,CAAA,CAAN,CAAM,SAAA,CAAN,CAAA;AAEM,MAAN,IAAM,MAAN,CAAM,OAAN,CAAM,CAAA,CAAN,CAAM,SAAN,CAAM,MAAN,IAAM,MAAN,EAAM;AACE,QAAR,SAAA;AAAQ,OAAR;AAGM,MAAN,IAAM,GAAN,CAAM,MAAN,CAAM,GAAA,CAAN,GAAM,EAAN,EAAM;AAEE,QAAR,MAAA,CAAQ,OAAR,CAAQ,CAAA,CAAR,CAAQ,SAAR,CAAQ,MAAR,GAAQ,MAAR,CAAA;AACQ,QAAR,SAAA;AAAQ,OAAR;AAGM,MAAN,IAAM,aAAN,CAAM,MAAN,CAAM,OAAN,CAAM,CAAA,CAAA,CAAN,IAAM,GAAN,CAAM,MAAN,CAAM,GAAA,CAAN,GAAM,EAAN,EAAM;AACE,QAAR,IAAQ,gBAAR,GAAQ,MAAR,CAAQ,GAAR,CAAQ,CAAR,EAAQ,CAAA,CAAR,CAAA;AACQ,QAAR,KAAA,IAAQ,CAAR,GAAQ,CAAR,EAAQ,CAAR,GAAQ,gBAAR,EAAQ,CAAR,EAAA,EAAQ;AACE,UAAV,IAAU,KAAV,GAAU,WAAV,CAAU,CAAV,EAAU,MAAV,CAAU,OAAV,CAAU,CAAA,CAAV,CAAU,IAAV,EAAU,MAAA,CAAV,CAAA;AACU,UAAV,IAAU,SAAV,GAAU,IAAA,YAAV,CAAU,MAAV,CAAU,OAAV,CAAU,MAAA,CAAV,CAAA;AACU,UAAV,SAAA,CAAU,SAAV,GAAU,KAAV,CAAA;AACU,UAAV,SAAA,CAAU,OAAV,GAAU,CAAA,CAAV,EAAU,MAAV,CAAU,OAAV,CAAU,CAAA,CAAV,CAAU,IAAA,CAAV,CAAA;AACU,UAAV,MAAA,CAAU,OAAV,CAAU,CAAA,CAAV,CAAU,QAAV,CAAU,IAAV,CAAU,SAAV,CAAU,EAAA,CAAV,CAAA;AACU,UAAV,MAAA,CAAU,OAAV,CAAU,MAAV,CAAU,OAAV,CAAU,CAAA,CAAV,CAAU,IAAA,CAAV,CAAU,QAAV,CAAU,IAAV,CAAU,SAAV,CAAU,EAAA,CAAV,CAAA;AAEU,UAAV,IAAU,MAAV,CAAU,OAAV,CAAU,CAAA,CAAV,CAAU,SAAV,CAAU,MAAV,CAAU,IAAV,IAAU,IAAV,CAAU,MAAV,CAAU,wBAAV,CAAU,IAAV,EAAU;AAGE,YAAZ,SAAA,CAAY,SAAZ,CAAY,QAAZ,GAAY,MAAZ,CAAY,OAAZ,CAAY,CAAA,CAAZ,CAAY,SAAZ,CAAY,QAAZ,CAAA;AAAY,WAAZ,MAAuE;AAE3D,YAAZ,SAAA,CAAY,SAAZ,CAAY,QAAZ,GAAY,MAAZ,CAAY,OAAZ,CAAY,MAAZ,CAAY,OAAZ,CAAY,CAAA,CAAZ,CAAY,IAAA,CAAZ,CAAY,SAAZ,CAAY,QAAZ,CAAA;AAAY,WAAZ;AAGU,UAAV,MAAA,CAAU,OAAV,CAAU,IAAV,CAAU,SAAA,CAAV,CAAA;AAAU,SAAV;AAAuC,OAAvC;AAIM,MAAN,IAAM,SAAN,CAAM,MAAN,CAAM,OAAN,CAAM,CAAA,CAAA,CAAN,IAAM,GAAN,CAAM,MAAN,CAAM,GAAA,CAAN,GAAM,EAAN,EAAM;AACE,QAAR,IAAQ,IAAR,GAAQ,UAAR,CAAQ,MAAR,CAAQ,OAAR,CAAQ,CAAA,CAAR,EAAQ,MAAA,CAAR,CAAA;AACQ,QAAR,IAAQ,SAAR,GAAQ,IAAA,YAAR,CAAQ,MAAR,CAAQ,OAAR,CAAQ,MAAA,CAAR,CAAA;AACQ,QAAR,SAAA,CAAQ,SAAR,GAAQ,IAAR,CAAA;AACQ,QAAR,SAAA,CAAQ,IAAR,GAAQ,CAAR,CAAA;AACQ,QAAR,MAAA,CAAQ,OAAR,CAAQ,CAAA,CAAR,CAAQ,IAAR,GAAQ,SAAR,CAAQ,EAAR,CAAA;AAEQ,QAAR,IAAQ,MAAR,CAAQ,OAAR,CAAQ,CAAA,CAAR,CAAQ,SAAR,CAAQ,MAAR,CAAQ,IAAR,IAAQ,IAAR,CAAQ,MAAR,CAAQ,wBAAR,CAAQ,IAAR,EAAQ;AACE,UAAV,SAAA,CAAU,SAAV,CAAU,QAAV,GAAU,MAAV,CAAU,OAAV,CAAU,CAAA,CAAV,CAAU,SAAV,CAAU,QAAV,CAAA;AAAU,SAAV,MAAqE;AAE3D,UAAV,MAAA,CAAU,OAAV,CAAU,CAAA,CAAV,CAAU,SAAV,CAAU,QAAV,GAAU,SAAV,CAAU,SAAV,CAAU,QAAV,CAAA;AAAU,SAAV;AAGQ,QAAR,MAAA,CAAQ,OAAR,CAAQ,IAAR,CAAQ,SAAA,CAAR,CAAA;AAAQ,OAAR;AAAqC,KAArC;AAII,IAAJ,OAAI,MAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;AAEA,SAAA,WAAA,CAAA,YAAA,EAAA,YAAA,EAAA,MAAA,EAAA;AACE,EAAF,IAAE,OAAF,GAAE,MAAF,CAAE,OAAF,CAAE,YAAA,CAAF,CAAE,SAAF,CAAA;AACE,EAAF,IAAE,OAAF,GAAE,MAAF,CAAE,OAAF,CAAE,YAAA,CAAF,CAAE,SAAF,CAAA;AAEE,EAAF,IAAE,cAAF,GAAE,OAAF,CAAE,cAAF,CAAE,MAAF,CAAE,OAAF,CAAE,cAAA,CAAF,CAAA;AACE,EAAF,IAAE,WAAF,GAAE,EAAF,CAAA;AACE,EAAF,IAAE,cAAF,GAAE,EAAF,CAAA;AACE,EAAF,cAAA,GAAE,GAAF,CAAE,OAAF,CAAE,cAAA,CAAF,CAAA;AACE,EAAF,KAAA,IAAE,CAAF,GAAE,CAAF,EAAE,CAAF,GAAE,cAAF,CAAE,MAAF,EAAE,CAAF,EAAA,EAAE;AACE,IAAJ,IAAI,CAAA,WAAJ,CAAI,QAAJ,CAAI,cAAJ,CAAI,CAAA,CAAJ,CAAI,IAAA,CAAJ,EAAI;AACE,MAAN,cAAA,CAAM,IAAN,CAAM,cAAN,CAAM,CAAA,CAAA,CAAN,CAAA;AACM,MAAN,WAAA,CAAM,IAAN,CAAM,cAAN,CAAM,CAAA,CAAN,CAAM,IAAA,CAAN,CAAA;AAAM,KAAN;AAA6C,GAA7C;AAIE,EAAF,IAAE,UAAF,GAAE,IAAA,wBAAF,EAAA,CAAA;AACE,EAAF,UAAA,CAAE,cAAF,GAAE,CAAA,OAAF,CAAE,OAAF,EAAE,OAAF,CAAE,OAAA,CAAF,CAAA;AACE,EAAF,UAAA,CAAE,aAAF,GAAE,CAAA,QAAF,EAAE,SAAA,CAAF,CAAA;AACE,EAAF,UAAA,CAAE,mBAAF,GAAE,MAAF,CAAE,mBAAF,CAAA;AACE,EAAF,UAAA,CAAE,mBAAF,GAAE,MAAF,CAAE,mBAAF,CAAA;AACE,EAAF,UAAA,CAAE,iBAAF,GAAE,MAAF,CAAE,iBAAF,CAAA;AACE,EAAF,IAAE,WAAF,GAAE,EAAF,CAAA;AACE,EAAF,KAAA,IAAE,CAAF,GAAE,CAAF,EAAE,CAAF,GAAE,OAAF,CAAE,OAAF,CAAE,OAAF,CAAE,MAAF,EAAE,CAAF,EAAA,EAAE;AACE,IAAJ,WAAA,CAAI,IAAJ,CAAI,OAAJ,CAAI,OAAJ,CAAI,OAAJ,CAAI,CAAA,CAAJ,CAAI,IAAA,CAAJ,CAAA;AAAI,GAAJ;AAEE,EAAF,UAAA,CAAE,iBAAF,GAAE,WAAF,CAAA;AACE,EAAF,UAAA,CAAE,sBAAF,GAAE,cAAF,CAAA;AAEE,EAAF,IAAE,OAAF,GAAE,IAAA,kBAAF,CAAE,UAAA,CAAF,CAAA;AAEE,EAAF,IAAE,KAAF,GAAE,OAAF,CAAE,QAAF,EAAA,CAAA;AAEE,EAAF,OAAE,KAAF,CAAA;AACA,CAAA;AAEA,SAAA,UAAA,CAAA,MAAA,EAAA,MAAA,EAAA;AACE,EAAF,IAAE,MAAF,GAAE,MAAF,CAAE,SAAF,CAAE,MAAF,CAAA;AAEE,EAAF,IAAE,UAAF,GAAE,IAAA,wBAAF,EAAA,CAAA;AACE,EAAF,UAAA,CAAE,cAAF,GAAE,CAAA,MAAF,CAAE,SAAF,CAAE,OAAA,CAAF,CAAA;AACE,EAAF,UAAA,CAAE,aAAF,GAAE,CAAA,OAAA,CAAF,CAAA;AACE,EAAF,UAAA,CAAE,mBAAF,GAAE,MAAF,CAAE,mBAAF,CAAA;AACE,EAAF,UAAA,CAAE,mBAAF,GAAE,MAAF,CAAE,mBAAF,CAAA;AACE,EAAF,UAAA,CAAE,iBAAF,GAAE,MAAF,CAAE,iBAAF,CAAA;AACE,EAAF,UAAA,CAAE,iBAAF,GAAE,CAAA,aAAF,CAAE,MAAF,EAAE,MAAF,CAAE,SAAF,CAAE,OAAF,CAAE,OAAA,CAAF,CAAE,IAAA,CAAF,CAAA;AAEE,EAAF,IAAE,OAAF,GAAE,IAAA,kBAAF,CAAE,UAAA,CAAF,CAAA;AAEE,EAAF,IAAE,IAAF,GAAE,OAAF,CAAE,QAAF,EAAA,CAAA;AAEE,EAAF,OAAE,IAAF,CAAA;AACA,CAAA;AAEA,SAAA,aAAA,CAAA,OAAA,EAAA,OAAA,EAAA;AACE,EAAF,KAAA,IAAE,CAAF,GAAE,CAAF,EAAE,CAAF,GAAE,OAAF,CAAE,MAAF,EAAE,CAAF,EAAA,EAAE;AACE,IAAJ,IAAI,OAAJ,CAAI,CAAA,CAAJ,CAAI,IAAJ,IAAI,OAAJ,CAAI,IAAJ,EAAI;AACE,MAAN,OAAM,OAAN,CAAM,CAAA,CAAN,CAAA;AAAM,KAAN;AAAsB,GAAtB;AAIE,EAAF,OAAE,OAAF,CAAA;AACA,CAAA;AAEA,SAAA,aAAA,CAAA,MAAA,EAAA;AACE,EAAF,IAAE,MAAF,CAAE,IAAF,IAAE,CAAF,CAAA,IAAE,MAAF,CAAE,QAAF,CAAE,MAAF,IAAE,CAAF,IAAE,MAAF,CAAE,SAAF,CAAE,WAAF,CAAE,IAAF,IAAE,OAAF,EAAE;AAKE,IAAJ,OAAI,IAAJ,CAAA;AAAI,GAAJ;AAGE,EAAF,OAAE,KAAF,CAAA;AACA,CAAA;AAEA,SAAA,SAAA,CAAA,MAAA,EAAA;AACE,EAAF,IAAE,MAAF,CAAE,SAAF,CAAE,WAAF,CAAE,IAAF,IAAE,OAAF,IAAE,MAAF,CAAE,IAAF,IAAE,CAAF,CAAA,EAAE;AACE,IAAJ,OAAI,IAAJ,CAAA;AAAI,GAAJ;AAGE,EAAF,OAAE,KAAF,CAAA;AACA,CAAA;;;;;;ADjOA,EAAA,IAAM,IAAN,GAAa,GAAb,CAAiB,YAAjB,CAA8B,EAAE,CAAhC,CAAA;AACM,EAAN,IAAM,gBAAN,GAAyBD,GAAzB,EAAA,CAAA;AAEA,EAAA,IAAM,OAAN,GAAgBD,cAAhB,CAA6C,gBAAgB,CAA7D,CAAA;AACA,EAAA,IAAM,UAAN,GAAmB,CAAnB,CAAA;AACM,EAAN,IAAM,OAAN,CAAc,gBAAd,CAA+B,MAA/B,KAA0C,IAA1C,EAA0C;AAC5B,IAAd,MAAc,IAAA,KAAd,CAAoB,gDAAgD,CAApE,CAAA;AAAoE,GAApE;AAEM,EAAN,IAAM,OAAN,CAAc,gBAAd,CAA+B,MAA/B,KAA0C,IAA1C,EAA0C;AAC5B,IAAd,MAAc,IAAA,KAAd,CAAoB,gDAAgD,CAApE,CAAA;AAAoE,GAApE;AAEM,EAAN,IAAM,OAAN,CAAc,gBAAd,CAA+B,IAA/B,KAAwC,IAAxC,EAAwC;AAC1B,IAAd,MAAc,IAAA,KAAd,CAAoB,8CAA8C,CAAlE,CAAA;AAAkE,GAAlE;AAEM,EAAN,IAAM,aAAN,GAAqC,OAArC,CAA6C,gBAA7C,CAA8D,MAA9D,CAAA;AACM,EAAN,IAAM,aAAN,GAAqC,OAArC,CAA6C,gBAA7C,CAA8D,MAA9D,CAAA;AACM,EAAN,IAAM,WAAN,GAAmC,OAAnC,CAA2C,gBAA3C,CAA4D,IAA5D,CAAA;AACA,EAAA,IAAM,iBAAN,GAA0B,MAA1B,CAAA;AACM,EAAN,IAAM,MAAN,GAAM,IAAa,qBAAnB,CAAyC,OAAzC,EAAkD,UAAlD,EAA8D,aAA9D,EAA6E,aAA7E,EAA4F,WAA5F,EAAyG,iBAAzG,EAAyG,CAAzG,CAAA;AACM,EAAN,IAAM,SAAN,GAAM,IAAgB,eAAtB,CAAsC,MAAM,CAA5C,CAAA;AACM,EAAN,IAAM,MAAN,GAAe,SAAf,CAAyB,QAAzB,EAAA,CAAA;AAsBW,EAAX,SAAW,iBAAX,GAAW;AACE,IAAb,KAAA,IAAa,CAAb,GAAe,CAAf,EAAiB,CAAjB,GAAmB,OAAnB,CAA2B,OAA3B,CAAmC,MAAnC,EAA0C,CAA1C,EAAA,EAA0C;AAC1C,MAAA,IAAU,OAAV,CAAkB,OAAlB,CAA0B,CAAC,CAA3B,CAA6B,IAA7B,IAAqC,iBAArC,EAAqC;AACtB,QAAf,OAAe,OAAf,CAAuB,OAAvB,CAA+B,CAAC,CAAhC,CAAA;AAAgC,OAAhC;;AAIc,IAAd,MAAc,IAAA,KAAd,CAAoB,yBAAyB,CAA7C,CAAA;AAA6C,GAA7C;;AAyCA,EAAA,OAAA,CAAA,EAAA,QAAA,CAAA,IAAA,IAAA,CAAA,kCAAA,EAAA,QAAA,CAAA,KAAA,GAAA,CAAA,sDAAA,CAAA,EAAA,EAAA,CAAA,gCAAA,CAAA,EAAA,EAAA,CAAA,ogBAAA,EAAA,aAAA,CAAA,OAAA,EAA+C,IAA/C,EAAmD,CAAA,CAAA,CAAnD,2OAAA,EAAmD,aAAnD,CAAmD,OAAnD,EAKuD,UALvD,EAKiE,CAAA,CAAA,CALjE,kPAAA,EAKiE,IALjE,CAYa,gBAZb,EAY6B,CAZ7B,MAAA,KAY6B;AACd,IAAf,OAAe,CAAf,OAAA,EAAe,aAAf,CAAe,OAAf,EAAe,MAAf,CAAsB,IAAtB,EAAe,CAAA,CAAA,CAAf,CAAA,EAAe,MAAf,CAAe,MAAf,CAAsB,IAAI,CAAA,CAA1B,SAAA,CAAA,CAAA;AAA0B,GAgBf,CAAA,CAhBX,olBAAA,EAgBW,MAhBX,CAgBW,MAhBX,CAgBkB,IAAI,CAEb,CAlBT,aAAA,EAkBS,IAlBT,CAkBS,MAlBT,CAkBgB,OAlBhB,EAkBuB,CAlBvB,MAAA,KAkBuB;AACvB,IAAA,OAAA,CAAA,0BAAA,EAAA,MAAA,CAAS,MAAT,CAAgB,SAAhB,CAA0B,SAAS,CAAnC,CAAA,CAAA,EAAA,MAAA,CAAsC,MAAtC,CAA6C,SAA7C,CAAuD,QAAQ,CAAA,CAA/D,+BAAA,EAA+D,MAA/D,CACQ,MADR,CACe,SADf,CACyB,GAAG,CAAY,CADxC,UAAA,EACwC,MADxC,CACwC,MADxC,CAC+C,SAD/C,CACyD,OADzD,CACiE,IAAI,CAAA,CADrE,CAAA,EACqE,MADrE,CACwE,MADxE,CAC+E,SAD/E,CACyF,WADzF,CACqG,IAAI,CADzG,CAAA,CAAA,EACgH,MADhH,CACuH,SADvH,CACiI,MADjI,IAC2I,MAD3I,GAEQ,CAFR,MAAA,CAAA,GAEQ,CAFR,CAEQ,CAFR,8BAAA,EAEQ,MAFR,CAEQ,MAFR,CAEe,SAFf,CAEyB,WAAW,CAFpC,CAAA,KAAA,EAGS,MAHT,CAGgB,IAHhB,IAGoB,CAHpB,CAAA,GAIiC,CAJjC,qGAAA,EAIiC,MAJjC,CAIiC,MAJjC,CAIwC,OAJxC,CAIgD,MAAM,CAJtD,CAIwD,SAJxD,CAIkE,SAAS,CAAG,CAJ9E,CAAA,EAI8E,MAJ9E,CAI8E,MAJ9E,CAIqF,OAJrF,CAI6F,MAAM,CAJnG,CAIqG,SAJrG,CAI+G,QAAQ,CAAA,CAJvH,IAAA,CAAA,GAMS,CANT,CAMS,CANT,CAAA,EAMS,MANT,CAMgB,QANhB,CAMyB,MANzB,GAMkC,CANlC,GAAA,CAAA,gGAAA,EAAA,IAAA,CASe,MATf,CASsB,WATtB,CASkC,MAAM,CATxC,EASwC,CATxC,KAAA,KASwC;AACxC,MAAA,OAAA,CAAA,0BAAA,EAAA,MAAA,CAAe,KAAf,CAAqB,SAArB,CAA+B,SAAS,CAAxC,CAAA,CAAA,EAAA,MAAA,CAA2C,KAA3C,CAAiD,SAAjD,CAA2D,QAAQ,CAAA,CAAnE,KAAA,CAAA,CAAA;AAAmE,KAAnE,CAAA,CAAA,MAAA,CAAA,GAIS,CAJT,CAIS,CAJT,CAAA,EAIS,MAJT,CAIgB,OAJhB,CAIwB,MAJxB,GAIiC,CAJjC,GAAA,CAAA,8FAAA,EAAA,IAAA,CAOe,MAPf,CAOsB,UAPtB,CAOiC,MAAM,CAPvC,EAOuC,CAPvC,MAAA,KAOuC;AACvC,MAAA,OAAA,CAAA,0BAAA,EAAA,MAAA,CAAe,MAAf,CAAsB,SAAtB,CAAgC,SAAS,CAAzC,CAAA,CAAA,EAAA,MAAA,CAA4C,MAA5C,CAAmD,SAAnD,CAA6D,QAAQ,CAAA,CAArE,KAAA,CAAA,CAAA;AAAqE,KAArE,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;"}