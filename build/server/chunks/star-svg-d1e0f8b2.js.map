{"version":3,"file":"star-svg-d1e0f8b2.js","sources":["../../../../src/lib/renderers/stars/star-svg.ts","../../../../src/lib/renderers/planets/planet-svg.ts","../../../../src/lib/renderers/starfields/starfield-svg.ts","../../../../src/lib/starsystem/generator.ts","../../../../src/lib/starsystem/generatorconfig.ts","../../../../src/lib/stars/generator.ts","../../../../src/lib/stars/generatorconfig.ts","../../../../src/lib/stars/classifications.ts","../../../../src/lib/stars/classification.ts","../../../../src/lib/starsystem/starsystem.ts","../../../../src/lib/stars/star.ts"],"sourcesContent":["\"use strict\";\n\nimport random from \"random\";\nimport Star from \"../../stars/star.js\";\nimport SVGStarfieldRenderer from \"../starfields/starfield-svg.js\";\n\nexport default class SVGStarRenderer {\n  width: number;\n  height: number;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  render(star: Star): string {\n    let starColor = \"\";\n\n    if (star.color == \"red\") {\n      starColor = \"rgb(255,43,10)\";\n    } else if (star.color == \"orange\") {\n      starColor = \"rgb(255,146,20)\";\n    } else if (star.color == \"yellow\") {\n      starColor = \"rgb(255,223,18)\";\n    } else if (star.color == \"yellow-white\") {\n      starColor = \"rgb(251, 255, 168)\";\n    } else if (star.color == \"white\") {\n      starColor = \"rgb(255,255,255)\";\n    } else if (star.color == \"blue-white\") {\n      starColor = \"rgb(198, 243, 247)\";\n    } else if (star.color == \"blue\") {\n      starColor = \"rgb(59,118,255)\";\n    }\n\n    const midX = Math.floor(this.width / 2);\n    const midY = Math.floor(this.height / 2);\n\n    const min = Math.min(this.width, this.height);\n    let radius = (Math.floor(min) * random.float(0.2, 0.4)) / 2;\n\n    if (star.classification == \"main sequence\") {\n      radius = (Math.floor(min) * random.float(0.6, 0.7)) / 2;\n    } else if (star.classification == \"giant\") {\n      radius = (Math.floor(min) * random.float(0.8, 0.9)) / 2;\n    } else if (star.classification == \"supergiant\") {\n      radius = (Math.floor(min) * random.float(0.9, 1.1)) / 2;\n    }\n\n    const glowRadius = Math.floor(radius * 1.4);\n\n    let starfieldRenderer = new SVGStarfieldRenderer(this.width, this.height);\n    const background = starfieldRenderer.render();\n\n    let svg = \"<svg width=\\\"\"\n      + this.width\n      + \"\\\" height=\\\"\"\n      + this.height\n      + \"\\\" viewBox=\\\"0 0 \"\n      + this.width\n      + \" \"\n      + this.height\n      + \"\\\">\";\n\n    svg += \"<defs><radialGradient id=\\\"starglow\\\"><stop offset=\\\"60%\\\" stop-color=\\\"\"\n      + starColor\n      + \"\\\" stop-opacity=\\\"0.8\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(255,255,255)\\\" stop-opacity=\\\"0\\\" /></radialGradient></defs>\";\n\n    svg += \"<filter id=\\\"starSurface\\\">\";\n    svg += \"<feFlood x=\\\"0%\\\" y=\\\"0%\\\" width=\\\"100%\\\" height=\\\"100%\\\" flood-color=\\\"\"\n      + starColor\n      + \"\\\" result=\\\"base\\\" />\";\n    svg += \"<feTurbulence type=\\\"fractalNoise\\\" baseFrequency=\\\"0.05\\\" numOctaves=\\\"2\\\" result=\\\"noise\\\" />\";\n    svg += \"<feBlend in2=\\\"base\\\" in=\\\"noise\\\" mode=\\\"multiply\\\" />\";\n    svg += \"</filter>\";\n\n    svg += `<mask id=\"starMask\"><circle cx=\"${midX}\" cy=\"${midY}\" r=\"${radius}\" fill=\"white\" /></mask>`;\n\n    svg += background;\n\n    svg += \"<circle cx=\\\"\" + midX + \"\\\" cy=\\\"\" + midY + \"\\\" r=\\\"\" + glowRadius + \"\\\" fill=\\\"url(#starglow)\\\" />\";\n\n    svg += \"<circle cx=\\\"\"\n      + midX\n      + \"\\\" cy=\\\"\"\n      + midY\n      + \"\\\" r=\\\"\"\n      + radius\n      + \"\\\" fill=\\\"\"\n      + starColor\n      + \"\\\" filter=\\\"url(#starSurface)\\\" mask=\\\"url(#starMask)\\\" />\";\n\n    svg += \"</svg>\";\n\n    return svg;\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport Planet from \"../../planets/planet.js\";\nimport SVGStarfieldRenderer from \"../starfields/starfield-svg.js\";\n\nimport random from \"random\";\n\nexport default class SVGPlanetRenderer {\n  width: number;\n  height: number;\n\n  constructor(width: number, height: number) {\n    this.height = height;\n    this.width = width;\n  }\n\n  render(planet: Planet): string {\n    const textureRenderer = getPlanetRenderer(planet.classification.name);\n    const texture = textureRenderer.renderSVG();\n\n    let sizeClass = \"medium\";\n\n    if (planet.diameter < 8000) {\n      sizeClass = \"small\";\n    } else if (planet.diameter > 19000) {\n      sizeClass = \"large\";\n    }\n\n    const midX = Math.floor(this.width / 2);\n    const midY = Math.floor(this.height / 2);\n\n    const planetId = random.int(0, 1000);\n\n    const min = Math.min(this.width, this.height);\n\n    let radius = 0.0;\n    const planetDiameterModifier = (planet.diameter - planet.classification.diameter_min)\n      / (planet.classification.diameter_max - planet.classification.diameter_min);\n    let rangeMin = 0.8;\n    let rangeMax = 0.9;\n\n    if (sizeClass === \"small\") {\n      rangeMin = 0.2;\n      rangeMax = 0.4;\n    } else if (sizeClass === \"medium\") {\n      rangeMin = 0.5;\n      rangeMax = 0.7;\n    }\n\n    let size = (rangeMax - rangeMin) * planetDiameterModifier + rangeMin;\n    radius = (Math.floor(min) * size) / 2;\n\n    const atmosphereRadius = Math.floor(radius * 1.1);\n\n    let starfieldRenderer = new SVGStarfieldRenderer(this.width, this.height);\n    const background = starfieldRenderer.render();\n\n    let svg = \"<svg width=\\\"\"\n      + this.width\n      + \"\\\" height=\\\"\"\n      + this.height\n      + \"\\\" viewBox=\\\"0 0 \"\n      + this.width\n      + \" \"\n      + this.height\n      + \"\\\">\";\n\n    svg += \"<defs>\";\n\n    svg += \"<radialGradient id=\\\"atmosphere-\"\n      + planetId\n      + \"\\\"><stop offset=\\\"95%\\\" stop-color=\\\"\"\n      + textureRenderer.atmosphereColor\n      + \"\\\" stop-opacity=\\\"0.8\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(255,255,255)\\\" stop-opacity=\\\"0\\\" /></radialGradient>\";\n\n    svg +=\n      \"<radialGradient id=\\\"planetShadow\\\" cx=\\\"0.5\\\" cy=\\\"0.5\\\" r=\\\"0.75\\\" fx=\\\"0.275\\\" fy=\\\"0.275\\\"><stop offset=\\\"0%\\\" stop-color=\\\"rgb(0,0,0)\\\" stop-opacity=\\\"0\\\" /><stop offset=\\\"80%\\\" stop-color=\\\"rgb(0,0,70)\\\" stop-opacity=\\\"0.8\\\" /><stop offset=\\\"90%\\\" stop-color=\\\"rgb(0,0,0)\\\" stop-opacity=\\\"0.8\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(0,00,40)\\\" stop-opacity=\\\"0.6\\\" /></radialGradient>\";\n\n    svg += \"<pattern id=\\\"planetTexture-\"\n      + planetId\n      + \"\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"1\\\">\"\n      + texture\n      + \"</pattern>\";\n\n    svg += \"</defs>\";\n\n    svg += background;\n\n    if (planet.has_atmosphere) {\n      svg += \"<circle cx=\\\"\"\n        + midX\n        + \"\\\" cy=\\\"\"\n        + midY\n        + \"\\\" r=\\\"\"\n        + atmosphereRadius\n        + \"\\\" fill=\\\"url(#atmosphere-\"\n        + planetId\n        + \")\\\" />\";\n    }\n\n    svg += \"<circle cx=\\\"\"\n      + midX\n      + \"\\\" cy=\\\"\"\n      + midY\n      + \"\\\" r=\\\"\"\n      + radius\n      + \"\\\" fill=\\\"url(#planetTexture-\"\n      + planetId\n      + \")\\\" />\";\n\n    svg += \"<circle cx=\\\"\" + midX + \"\\\" cy=\\\"\" + midY + \"\\\" r=\\\"\" + radius + \"\\\" fill=\\\"url(#planetShadow)\\\" />\";\n\n    return svg;\n  }\n}\n\nfunction getPlanetRenderer(planetType: string) {\n  const planetTypes = [\n    {\n      name: \"barren\",\n      hasAtmosphere: false,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = \"<svg x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" viewBox=\\\"0 0 256 256\\\">\";\n\n        svg += \"<defs>\";\n        svg += \"<radialGradient id=\\\"craterTrough\"\n          + hash\n          + \"\\\" cx=\\\"0.6\\\" cy=\\\"0.6\\\" fx=\\\"0.4\\\" fy=\\\"0.4\\\"><stop offset=\\\"0%\\\" stop-color=\\\"rgb(170,170,170)\\\" /><stop offset=\\\"5%\\\" stop-color=\\\"rgb(150,150,150)\\\" /><stop offset=\\\"95%\\\" stop-color=\\\"rgb(150,150,150)\\\" stop-opacity=\\\"0\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(110,110,110)\\\" /></radialGradient>\";\n\n        svg += \"<filter id=\\\"barrenTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.05\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\"/><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"15\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /></filter>\";\n\n        svg += \"</defs>\";\n        svg += \"<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" fill=\\\"rgb(150,150,150)\\\" />\";\n\n        const numberOfSplotches = random.int(6, 14);\n\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(110, 170);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"rgb(\"\n            + amount\n            + \", \"\n            + amount\n            + \", \"\n            + amount\n            + \")\\\" filter=\\\"url(#barrenTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        const numberOfCraters = random.int(55, 80);\n\n        for (let i = 0; i < numberOfCraters; i++) {\n          const x = random.int(20, 200);\n          const y = random.int(20, 200);\n          const r = random.int(3, 8);\n          const crater = \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"url(#craterTrough\"\n            + hash\n            + \")\\\" />\";\n          svg += crater;\n        }\n\n        svg += \"</svg>\";\n\n        return svg;\n      },\n    },\n    {\n      name: \"arid\",\n      hasAtmosphere: true,\n      atmosphereColor: \"rgb(170,224,211)\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = \"<svg x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" viewBox=\\\"0 0 256 256\\\">\";\n\n        svg += \"<defs>\";\n        svg += \"<radialGradient id=\\\"aridCrater\"\n          + hash\n          + \"\\\" cx=\\\"0.6\\\" cy=\\\"0.6\\\" fx=\\\"0.4\\\" fy=\\\"0.4\\\"><stop offset=\\\"0%\\\" stop-color=\\\"rgb(237,220,151)\\\" /><stop offset=\\\"5%\\\" stop-color=\\\"rgb(227,210,141)\\\" /><stop offset=\\\"95%\\\" stop-color=\\\"rgb(217,200,131)\\\" stop-opacity=\\\"0\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(197,190,121)\\\" /></radialGradient>\";\n\n        svg += \"<filter id=\\\"aridTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.05\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\"/><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"15\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /></filter>\";\n\n        svg += \"</defs>\";\n        svg += \"<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" fill=\\\"rgb(227,210,141)\\\" />\";\n\n        const numberOfSplotches = random.int(6, 14);\n\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(-10, 20);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"rgb(\"\n            + (227 + amount)\n            + \", \"\n            + (210 + amount)\n            + \", \"\n            + (141 + amount)\n            + \")\\\" filter=\\\"url(#aridTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        const numberOfCraters = random.int(25, 30);\n\n        for (let i = 0; i < numberOfCraters; i++) {\n          const x = random.int(20, 200);\n          const y = random.int(20, 200);\n          const r = random.int(3, 8);\n          const crater = \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"url(#aridCrater\"\n            + hash\n            + \")\\\" />\";\n          svg += crater;\n        }\n\n        svg += \"</svg>\";\n\n        return svg;\n      },\n    },\n    {\n      name: \"garden\",\n      hasAtmosphere: true,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = \"<svg x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" viewBox=\\\"0 0 256 256\\\">\";\n\n        svg += \"<defs>\";\n\n        svg += \"<radialGradient id=\\\"gardenContinentGradient\"\n          + hash\n          + \"\\\"><stop offset=\\\"0%\\\" stop-color=\\\"rgb(130,181,91)\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(120,153,55)\\\" /></radialGradient>\";\n\n        svg += \"<filter id=\\\"gardenTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.05\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\"/><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"15\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /></filter>\";\n\n        svg += \"<filter id=\\\"cloudTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.45\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\" /><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"30\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /><feGaussianBlur stdDeviation=\\\"0.2\\\" /></filter>\";\n\n        svg += \"</defs>\";\n        svg += \"<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" fill=\\\"rgb(36,27,161)\\\" />\";\n\n        const numberOfContinents = random.int(7, 18);\n\n        for (let i = 0; i < numberOfContinents; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(5, 30);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"url(#gardenContinentGradient\"\n            + hash\n            + \")\\\" filter=\\\"url(#gardenTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        const numberOfClouds = random.int(20, 30);\n\n        for (let i = 0; i < numberOfClouds; i++) {\n          const x = random.int(15, 100);\n          const y = random.int(15, 100);\n          const rx = random.int(5, 13);\n          const ry = random.int(5, 9);\n\n          svg += \"<ellipse cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" rx=\\\"\"\n            + rx\n            + \"\\\" ry=\\\"\"\n            + ry\n            + \"\\\" fill=\\\"white\\\" filter=\\\"url(#cloudTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        svg += \"</svg>\";\n\n        return svg;\n      },\n    },\n    {\n      name: \"jungle\",\n      hasAtmosphere: true,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = \"<svg x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" viewBox=\\\"0 0 256 256\\\">\";\n\n        svg += \"<defs>\";\n\n        svg += \"<linearGradient id=\\\"jungleLakeGradient\"\n          + hash\n          + \"\\\"><stop offset=\\\"0%\\\" stop-color=\\\"rgb(17,109,128)\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(7,99,118)\\\" /></linearGradient>\";\n\n        svg += \"<filter id=\\\"jungleTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.05\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\"/><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"15\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /></filter>\";\n\n        svg += \"<filter id=\\\"cloudTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.2\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\" /><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"30\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /><feGaussianBlur stdDeviation=\\\"0.1\\\" /></filter>\";\n\n        svg += \"</defs>\";\n        svg += \"<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" fill=\\\"rgb(8,94,40)\\\" />\";\n\n        const numberOfSplotches = random.int(6, 14);\n\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(-10, 20);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"rgb(\"\n            + (10 + amount)\n            + \", \"\n            + (96 + amount)\n            + \", \"\n            + (42 + amount)\n            + \")\\\" filter=\\\"url(#jungleTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        const numberOfOceans = random.int(4, 7);\n\n        for (let i = 0; i < numberOfOceans; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(5, 10);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"url(#jungleLakeGradient\"\n            + hash\n            + \")\\\" filter=\\\"url(#jungleTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        const numberOfClouds = random.int(40, 60);\n\n        for (let i = 0; i < numberOfClouds; i++) {\n          const x = random.int(15, 100);\n          const y = random.int(15, 100);\n          const rx = random.int(5, 9);\n          const ry = random.int(5, 9);\n\n          svg += \"<ellipse cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" rx=\\\"\"\n            + rx\n            + \"\\\" ry=\\\"\"\n            + ry\n            + \"\\\" fill=\\\"white\\\" filter=\\\"url(#cloudTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        svg += \"</svg>\";\n\n        return svg;\n      },\n    },\n    {\n      name: \"swamp\",\n      hasAtmosphere: true,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = \"<svg x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" viewBox=\\\"0 0 256 256\\\">\";\n\n        svg += \"<defs>\";\n\n        svg += \"<linearGradient id=\\\"swampLakeGradient\"\n          + hash\n          + \"\\\"><stop offset=\\\"0%\\\" stop-color=\\\"rgb(17,109,128)\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(7,99,118)\\\" /></linearGradient>\";\n\n        svg += \"<filter id=\\\"swampTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.05\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\"/><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"15\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /></filter>\";\n\n        svg += \"<filter id=\\\"cloudTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.2\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\" /><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"30\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /><feGaussianBlur stdDeviation=\\\"0.1\\\" /></filter>\";\n\n        svg += \"</defs>\";\n        svg += \"<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" fill=\\\"rgb(8,94,40)\\\" />\";\n\n        const numberOfSplotches = random.int(6, 14);\n\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(-10, 20);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"rgb(\"\n            + (10 + amount)\n            + \", \"\n            + (96 + amount)\n            + \", \"\n            + (42 + amount)\n            + \")\\\" filter=\\\"url(#swampTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        const numberOfOceans = random.int(4, 7);\n\n        for (let i = 0; i < numberOfOceans; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(5, 10);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"url(#swampLakeGradient\"\n            + hash\n            + \")\\\" filter=\\\"url(#swampTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        const numberOfClouds = random.int(40, 60);\n\n        for (let i = 0; i < numberOfClouds; i++) {\n          const x = random.int(15, 100);\n          const y = random.int(15, 100);\n          const rx = random.int(5, 9);\n          const ry = random.int(5, 9);\n\n          svg += \"<ellipse cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" rx=\\\"\"\n            + rx\n            + \"\\\" ry=\\\"\"\n            + ry\n            + \"\\\" fill=\\\"white\\\" filter=\\\"url(#cloudTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        svg += \"</svg>\";\n\n        return svg;\n      },\n    },\n    {\n      name: \"volcanic\",\n      hasAtmosphere: true,\n      atmosphereColor: \"rgb(224,153,47)\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = \"<svg x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" viewBox=\\\"0 0 256 256\\\">\";\n\n        svg += \"<defs>\";\n        svg += \"<radialGradient id=\\\"volcanicCrater\"\n          + hash\n          + \"\\\" cx=\\\"0.6\\\" cy=\\\"0.6\\\" fx=\\\"0.4\\\" fy=\\\"0.4\\\"><stop offset=\\\"0%\\\" stop-color=\\\"rgb(67,50,45)\\\" /><stop offset=\\\"5%\\\" stop-color=\\\"rgb(57,40,35)\\\" /><stop offset=\\\"95%\\\" stop-color=\\\"rgb(47,30,25)\\\" stop-opacity=\\\"0\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(37,20,15)\\\" /></radialGradient>\";\n\n        svg += \"<filter id=\\\"volcanicTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.05\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\"/><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"15\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /></filter>\";\n\n        svg += \"</defs>\";\n        svg += \"<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" fill=\\\"rgb(57,40,35)\\\" />\";\n\n        const numberOfSplotches = random.int(6, 14);\n\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(-10, 20);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"rgb(\"\n            + (57 + amount)\n            + \", \"\n            + (40 + amount)\n            + \", \"\n            + (35 + amount)\n            + \")\\\" filter=\\\"url(#volcanicTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        const numberOfLavaLakes = random.int(26, 30);\n\n        for (let i = 0; i < numberOfLavaLakes; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(1, 4);\n          const amount = random.int(-10, 20);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"rgb(\"\n            + (235 + amount)\n            + \", \"\n            + (132 + amount)\n            + \", \"\n            + (5 + amount)\n            + \")\\\" filter=\\\"url(#volcanicTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        svg += \"</svg>\";\n\n        return svg;\n      },\n    },\n    {\n      name: \"gas giant\",\n      hasAtmosphere: false,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = \"<svg x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" viewBox=\\\"0 0 256 256\\\">\";\n\n        svg += \"<defs>\";\n\n        svg += \"<filter id=\\\"bandFilter\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.05\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\"/><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"15\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /></filter>\";\n\n        svg += \"</defs>\";\n\n        const numberOfBands = random.int(10, 16);\n\n        let remainingHeight = 256;\n\n        const baseR = random.int(60, 255);\n        const baseG = random.int(60, 255);\n        const baseB = random.int(60, 255);\n\n        const baseColor = \"rgb(\" + baseR + \",\" + baseG + \",\" + baseB + \")\";\n\n        let bandsSVG = \"\";\n\n        for (let i = 0; i < numberOfBands; i++) {\n          const bandOffset = random.int(0, 5);\n          const bandHeight = random.int(3, 15);\n\n          const y = 256 - remainingHeight + bandHeight + bandOffset;\n\n          const r = baseR + random.int(-30, 30);\n          const g = baseG + random.int(-30, 30);\n          const b = baseB + random.int(-30, 30);\n\n          const bandSVG = \"<rect x=\\\"0\\\" y=\\\"\"\n            + y\n            + \"\\\" width=\\\"256\\\" height=\\\"\"\n            + bandHeight\n            + \"\\\" fill=\\\"rgb(\"\n            + r\n            + \", \"\n            + g\n            + \", \"\n            + b\n            + \")\\\" filter=\\\"url(#bandFilter\"\n            + hash\n            + \")\\\" />\";\n\n          bandsSVG += bandSVG;\n\n          remainingHeight -= bandHeight - bandOffset;\n        }\n\n        svg += \"<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" fill=\\\"\" + baseColor + \"\\\" />\";\n\n        svg += bandsSVG;\n\n        svg += \"</svg>\";\n\n        return svg;\n      },\n    },\n    {\n      name: \"toxic\",\n      hasAtmosphere: true,\n      atmosphereColor: \"rgb(171,224,45)\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = \"<svg x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" viewBox=\\\"0 0 256 256\\\">\";\n\n        svg += \"<defs>\";\n\n        svg += \"<linearGradient id=\\\"toxicLakeGradient\"\n          + hash\n          + \"\\\"><stop offset=\\\"0%\\\" stop-color=\\\"rgb(152,222,52)\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(172,232,67)\\\" /></linearGradient>\";\n\n        svg += \"<filter id=\\\"toxicTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.05\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\"/><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"15\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /></filter>\";\n\n        svg += \"</defs>\";\n        svg += \"<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" fill=\\\"rgb(168,155,39)\\\" />\";\n\n        const numberOfSplotches = random.int(6, 14);\n\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(-10, 20);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"rgb(\"\n            + (168 + amount)\n            + \", \"\n            + (155 + amount)\n            + \", \"\n            + (39 + amount)\n            + \")\\\" filter=\\\"url(#toxicTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        const numberOfToxicOceans = random.int(4, 7);\n\n        for (let i = 0; i < numberOfToxicOceans; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"url(#toxicLakeGradient\"\n            + hash\n            + \")\\\" filter=\\\"url(#toxicTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        svg += \"</svg>\";\n\n        return svg;\n      },\n    },\n    {\n      name: \"ice\",\n      hasAtmosphere: true,\n      atmosphereColor: \"rgb(125,229,255)\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = \"<svg x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" viewBox=\\\"0 0 256 256\\\">\";\n\n        svg += \"<defs>\";\n        svg += \"<radialGradient id=\\\"iceCrater\"\n          + hash\n          + \"\\\" cx=\\\"0.6\\\" cy=\\\"0.6\\\" fx=\\\"0.4\\\" fy=\\\"0.4\\\"><stop offset=\\\"0%\\\" stop-color=\\\"rgb(234,255,255)\\\" /><stop offset=\\\"5%\\\" stop-color=\\\"rgb(224,250,255)\\\" /><stop offset=\\\"95%\\\" stop-color=\\\"rgb(214,240,245)\\\" stop-opacity=\\\"0\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(204,230,235)\\\" /></radialGradient>\";\n\n        svg += \"<filter id=\\\"iceTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.05\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\"/><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"15\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /></filter>\";\n\n        svg += \"</defs>\";\n        svg += \"<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" fill=\\\"rgb(224,250,255)\\\" />\";\n\n        const numberOfSplotches = random.int(6, 14);\n\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(0, 20);\n\n          svg += \"<circle cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" r=\\\"\"\n            + r\n            + \"\\\" fill=\\\"rgb(\"\n            + (210 + amount)\n            + \", \"\n            + (230 + amount)\n            + \", \"\n            + (235 + amount)\n            + \")\\\" filter=\\\"url(#iceTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        svg += \"</svg>\";\n\n        return svg;\n      },\n    },\n    {\n      name: \"ocean\",\n      hasAtmosphere: true,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = \"<svg x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" viewBox=\\\"0 0 256 256\\\">\";\n\n        svg += \"<defs>\";\n\n        svg += \"<radialGradient id=\\\"oceanGradient\"\n          + hash\n          + \"\\\" cx=\\\"0.5\\\" cy=\\\"0.5\\\"><stop offset=\\\"0%\\\" stop-color=\\\"rgb(45,14,201)\\\" /><stop offset=\\\"100%\\\" stop-color=\\\"rgb(95,117,227)\\\" />\";\n\n        svg += \"<filter id=\\\"cloudTexture\"\n          + hash\n          + \"\\\"><feTurbulence type=\\\"turbulence\\\" baseFrequency=\\\"0.2\\\" numOctaves=\\\"2\\\" result=\\\"turbulence\\\" /><feDisplacementMap in2=\\\"turbulence\\\" in=\\\"SourceGraphic\\\" scale=\\\"30\\\" xChannelSelector=\\\"R\\\" yChannelSelector=\\\"G\\\" /><feGaussianBlur stdDeviation=\\\"0.1\\\" /></filter>\";\n\n        svg += \"</defs>\";\n\n        svg += \"<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"256\\\" height=\\\"256\\\" fill=\\\"url(#oceanGradient\" + hash + \")\\\" />\";\n\n        svg += \"</svg>\";\n\n        const numberOfClouds = random.int(20, 30);\n\n        for (let i = 0; i < numberOfClouds; i++) {\n          const x = random.int(15, 100);\n          const y = random.int(15, 100);\n          const rx = random.int(5, 9);\n          const ry = random.int(5, 9);\n\n          svg += \"<ellipse cx=\\\"\"\n            + x\n            + \"\\\" cy=\\\"\"\n            + y\n            + \"\\\" rx=\\\"\"\n            + rx\n            + \"\\\" ry=\\\"\"\n            + ry\n            + \"\\\" fill=\\\"white\\\" filter=\\\"url(#cloudTexture\"\n            + hash\n            + \")\\\" />\";\n        }\n\n        return svg;\n      },\n    },\n  ];\n\n  for (let i = 0; i < planetTypes.length; i++) {\n    if (planetTypes[i].name == planetType) {\n      return planetTypes[i];\n    }\n  }\n\n  return planetTypes[0];\n}\n","\"use strict\";\n\nimport random from \"random\";\n\nexport default class SVGStarfieldRenderer {\n  width: number;\n  height: number;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  render(): string {\n    let svg = \"<svg width=\\\"\"\n      + this.width\n      + \"\\\" height=\\\"\"\n      + this.height\n      + \"\\\" viewBox=\\\"0 0 \"\n      + this.width\n      + \" \"\n      + this.height\n      + \"\\\">\";\n\n    svg += \"<rect width=\\\"\" + this.width + \"\\\" height=\\\"\" + this.height + \"\\\" fill=\\\"black\\\" />\";\n\n    const numberOfStars = Math.floor(this.width * this.height * 0.005);\n\n    for (let i = 0; i < numberOfStars; i++) {\n      const x = random.int(0, this.width);\n      const y = random.int(0, this.height);\n\n      svg += \"<rect x=\\\"\"\n        + x\n        + \"\\\" y=\\\"\"\n        + y\n        + \"\\\" width=\\\"1\\\" height=\\\"1\\\" fill=\\\"\"\n        + randomStarColor()\n        + \"\\\" />\";\n    }\n\n    svg += \"</svg>\";\n\n    return svg;\n  }\n}\n\nfunction randomStarColor() {\n  const colorBase = random.int(80, 180);\n\n  let r = colorBase;\n  let g = colorBase;\n  let b = colorBase;\n\n  let tweaked = false;\n\n  const tweakBlueChance = random.int(1, 100);\n  if (tweakBlueChance > 70 && tweaked === false) {\n    b += random.int(10, 20);\n    tweaked = true;\n  }\n\n  const tweakRedChance = random.int(1, 100);\n  if (tweakRedChance > 70 && tweaked == false) {\n    r += random.int(10, 20);\n    tweaked = true;\n  }\n\n  const tweakGreenChance = random.int(1, 100);\n  if (tweakGreenChance > 70 && tweaked == false) {\n    g += random.int(10, 20);\n    tweaked = true;\n  }\n\n  return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n}\n","\"use strict\";\n\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport PlanetGenerator from \"../planets/generator.js\";\nimport PlanetGeneratorConfig from \"../planets/generatorconfig.js\";\nimport StarGenerator from \"../stars/generator.js\";\nimport StarGeneratorConfig from \"../stars/generatorconfig.js\";\nimport StarSystemGeneratorConfig from \"./generatorconfig.js\";\nimport StarSystem from \"./starsystem.js\";\n\nexport default class StarSystemGenerator {\n  config: StarSystemGeneratorConfig;\n\n  constructor(config: StarSystemGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate() {\n    let starsystem = new StarSystem();\n\n    let starGenConfig = new StarGeneratorConfig();\n    let starGen = new StarGenerator(starGenConfig);\n\n    const star = starGen.generate();\n\n    starsystem.name = star.name;\n\n    starsystem.stars.push(star);\n\n    // TODO: binary and trinary systems\n\n    const numberOfPlanets = random.int(this.config.minPlanets, this.config.maxPlanets);\n\n    let planetGenConfig = new PlanetGeneratorConfig();\n    let planetGenerator = new PlanetGenerator(planetGenConfig);\n\n    for (let i = 0; i < numberOfPlanets; i++) {\n      const planet = planetGenerator.generate();\n      starsystem.planets.push(planet);\n    }\n\n    starsystem.planets.sort(function(x, y) {\n      if (x.distance_from_sun < y.distance_from_sun) {\n        return -1;\n      }\n      if (x.distance_from_sun > y.distance_from_sun) {\n        return 1;\n      }\n      return 0;\n    });\n\n    for (let i = 0; i < starsystem.planets.length; i++) {\n      if (!starsystem.planets[i].is_inhabited) {\n        starsystem.planets[i].name = starsystem.name + \" \" + Words.romanize(i + 1);\n      }\n    }\n\n    starsystem.description = `The ${starsystem.name} system has ${numberOfPlanets} planets`;\n\n    const asteroidBeltChance = random.int(1, 100);\n\n    if (asteroidBeltChance > 70) {\n      starsystem.description += \" and an asteroid belt.\";\n    } else {\n      starsystem.description += \".\";\n    }\n\n    return starsystem;\n  }\n}\n","\"use strict\";\n\nexport default class StarSystemGeneratorConfig {\n  minPlanets: number;\n  maxPlanets: number;\n\n  constructor() {\n    this.minPlanets = 3;\n    this.maxPlanets = 12;\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport StarGeneratorConfig from \"./generatorconfig.js\";\n\nimport random from \"random\";\nimport Star from \"./star.js\";\n\nexport default class StarGenerator {\n  config: StarGeneratorConfig;\n\n  constructor(config: StarGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate() {\n    const classification = RND.weighted(this.config.possibleClassifications);\n\n    const star = new Star();\n\n    star.classification = classification.name;\n    star.radius = random.float(classification.radius_min, classification.radius_max) * 695508;\n    star.mass = random.float(classification.mass_min, classification.mass_max) * 1.989;\n    star.temperature = random.int(classification.temperature_min, classification.temperature_max);\n    star.luminosity = random.float(classification.luminosity_min, classification.luminosity_max) * 3.828;\n    star.color = star.getColorFromTemperature();\n\n    const article = Words.article(star.color);\n    star.description = `This is ${article} ${star.color} ${star.classification} star.`;\n    star.name = MUN.star();\n\n    return star;\n  }\n}\n","\"use strict\";\n\nimport StarClassification from \"./classification.js\";\nimport * as Classifications from \"./classifications.js\";\n\nexport default class StarGeneratorConfig {\n  possibleClassifications: StarClassification[];\n\n  constructor() {\n    this.possibleClassifications = Classifications.all();\n  }\n}\n","\"use strict\";\n\nimport StarClassification from \"./classification.js\";\n\nexport function all() {\n  return [\n    new StarClassification(\"main sequence\", 0.1, 0.5, 0.1, 0.5, 2000, 4000, 0.01, 0.05, 40),\n    new StarClassification(\"main sequence\", 0.6, 0.9, 0.6, 0.8, 4000, 5000, 0.1, 0.8, 45),\n    new StarClassification(\"main sequence\", 0.9, 1.1, 0.8, 1.3, 5000, 6000, 0.8, 3.0, 60),\n    new StarClassification(\"main sequence\", 1.1, 1.5, 1.3, 1.8, 6000, 8000, 3.0, 8.0, 30),\n    new StarClassification(\"main sequence\", 1.5, 4.0, 1.8, 5.0, 8000, 15000, 15.0, 25.0, 10),\n    new StarClassification(\"main sequence\", 4.0, 6.0, 8.0, 12.0, 15000, 25000, 900.0, 1100.0, 5),\n    new StarClassification(\n      \"main sequence\",\n      8.0,\n      12.0,\n      45.0,\n      55.0,\n      35000,\n      45000,\n      90000.0,\n      110000.0,\n      1,\n    ),\n    new StarClassification(\"giant\", 10.0, 50.0, 1.0, 5.0, 3000, 10000, 50.0, 1000.0, 2),\n    new StarClassification(\n      \"supergiant\",\n      30.0,\n      500.0,\n      10.0,\n      70.0,\n      4000,\n      40000,\n      30000.0,\n      1000000.0,\n      1,\n    ),\n  ];\n}\n","\"use strict\";\n\nexport default class StarClassification {\n  name: string;\n  radius_min: number; // relative to the sun\n  radius_max: number; // relative to the sun\n  mass_min: number; // relative to the sun\n  mass_max: number; // relative to the sun\n  temperature_min: number; // in K\n  temperature_max: number; // in K\n  luminosity_min: number; // relative to the sun\n  luminosity_max: number; // relative to the sun\n  commonality: number; // commonality in the universe\n\n  constructor(\n    name: string,\n    radius_min: number,\n    radius_max: number,\n    mass_min: number,\n    mass_max: number,\n    temperature_min: number,\n    temperature_max: number,\n    luminosity_min: number,\n    luminosity_max: number,\n    commonality: number,\n  ) {\n    this.name = name;\n    this.radius_min = radius_min;\n    this.radius_max = radius_max;\n    this.mass_min = mass_min;\n    this.mass_max = mass_max;\n    this.temperature_min = temperature_min;\n    this.temperature_max = temperature_max;\n    this.luminosity_min = luminosity_min;\n    this.luminosity_max = luminosity_max;\n    this.commonality = commonality;\n  }\n}\n","\"use strict\";\n\nimport Planet from \"../planets/planet.js\";\nimport Star from \"../stars/star.js\";\n\nexport default class StarSystem {\n  name: string;\n  description: string;\n  stars: Star[];\n  planets: Planet[];\n\n  constructor() {\n    this.name = \"\";\n    this.description = \"\";\n    this.stars = [];\n    this.planets = [];\n  }\n}\n","\"use strict\";\n\nexport default class Star {\n  name: string;\n  color: string;\n  description: string;\n  classification: string;\n  radius: number; // in km\n  mass: number; // in 10^30 kg\n  temperature: number; // in K\n  luminosity: number; // in 10^26 W\n\n  constructor() {\n    this.name = \"\";\n    this.color = \"\";\n    this.description = \"\";\n    this.classification = \"\";\n    this.radius = 0;\n    this.mass = 0;\n    this.temperature = 0;\n    this.luminosity = 0;\n  }\n\n  getColorFromTemperature() {\n    if (this.temperature < 3700) {\n      return \"red\";\n    } else if (this.temperature < 5200) {\n      return \"orange\";\n    } else if (this.temperature < 6000) {\n      return \"yellow\";\n    } else if (this.temperature < 7500) {\n      return \"yellow-white\";\n    } else if (this.temperature < 10000) {\n      return \"white\";\n    } else if (this.temperature < 30000) {\n      return \"blue-white\";\n    }\n\n    return \"blue\";\n  }\n}\n"],"names":["Classifications.all"],"mappings":"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F,GAD1F,EAC0F,GAD1F,EAC0F,GAD1F,EAC0F,GAD1F,EAC0F,GAD1F,EAC0F,GAD1F,EAC0F,GAD1F,EAC0F,GAD1F,EAC0F,EAAA,CAD1F;AAC0F,IACF,IAAA,kBADxF,CACwF,eADxF,EACwF,GADxF,EACwF,GADxF,EACwF,GADxF,EACwF,GADxF,EACwF,GADxF,EACwF,GADxF,EACwF,GADxF,EACwF,CADxF,EACwF,EAAA,CADxF;AACwF,IACA,IAAA,kBADxF,CACwF,eADxF,EACwF,GADxF,EACwF,GADxF,EACwF,GADxF,EACwF,GADxF,EACwF,GADxF,EACwF,GADxF,EACwF,CADxF,EACwF,CADxF,EACwF,EAAA,CADxF;AACwF,IACA,IAAA,kBADxF,CACwF,eADxF,EACwF,GADxF,EACwF,CADxF,EACwF,GADxF,EACwF,CADxF,EACwF,GADxF,EACwF,IADxF,EACwF,EADxF,EACwF,EADxF,EACwF,EAAA,CADxF;AACwF,IACG,IAAA,kBAD3F,CAC2F,eAD3F,EAC2F,CAD3F,EAC2F,CAD3F,EAC2F,CAD3F,EAC2F,EAD3F,EAC2F,IAD3F,EAC2F,IAD3F,EAC2F,GAD3F,EAC2F,IAD3F,EAC2F,CAAA,CAD3F;AAC2F,IACI,IAAA,kBAD/F;AAC+F,MACvF,eADR;AACQ,MACF,CADN;AACM,MACA,EADN;AACM,MACA,EADN;AACM,MACA,EADN;AACM,MACA,IADN;AACM,MACA,IADN;AACM,MACA,GADN;AACM,MACA,IADN;AACM,MACA,CADN;AACM,KAAN;AACM,IACF,IAAA,kBADJ,CACI,OADJ,EACI,EADJ,EACI,EADJ,EACI,CADJ,EACI,CADJ,EACI,GADJ,EACI,GADJ,EACI,EADJ,EACI,GADJ,EACI,CAAA,CADJ;AACI,IACkF,IAAA,kBADtF;AACsF,MAC9E,YADR;AACQ,MACF,EADN;AACM,MACA,GADN;AACM,MACA,EADN;AACM,MACA,EADN;AACM,MACA,GADN;AACM,MACA,GADN;AACM,MACA,GADN;AACM,MACA,GADN;AACM,MACA,CADN;AACM,KAAN;AAC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"}