{"version":3,"file":"_page.svelte-67767d13.js","sources":["../../../../src/routes/heraldry/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import * as Charges from \"$lib/heraldry/charges\";\n  import * as Fields from \"$lib/heraldry/fields\";\n  import * as RND from \"@ironarachne/rng\";\n  import * as Tinctures from \"$lib/heraldry/tinctures\";\n  import * as Variations from \"$lib/heraldry/variations\";\n  import Download from \"$lib/download\";\n  import SaveSVGToPNG from \"$lib/renderers/svg-to-png\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n  import HeraldryGenerator from \"$lib/heraldry/generator\";\n  import HeraldrySVGRenderer from \"$lib/heraldry/renderers/svg\";\n  import HeraldryGeneratorConfig from \"$lib/heraldry/generatorconfig\";\n\n  let blazon = \"\";\n  let image = \"\";\n  let seed = RND.randomString(13);\n  let charges = Charges.all();\n  let allCharges = Charges.all();\n  let heraldryTag = 'any';\n  let chargeTinctureName = 'any';\n  let chargeTincture = Tinctures.randomChargeTincture();\n  let numberOfChargesOption = 'any';\n  let fieldTinctures1 = Tinctures.all();\n  let fieldTinctures2 = Tinctures.all();\n  let fields = Fields.all();\n  let furCount = 0;\n  let variations = Variations.all();\n  let availableTags = Charges.allChargeTags();\n  const heraldryWidth = 600;\n  const heraldryHeight = 660;\n\n  function changeCharges() {\n    if (heraldryTag == 'any') {\n      charges = allCharges;\n    } else {\n      charges = Charges.matchingTag(heraldryTag, allCharges);\n    }\n  }\n\n  function setChargeTincture() { // TODO: if the field tinctures are 'any', automatically contrast them with the charge tincture here\n    if (chargeTinctureName == 'any') {\n      chargeTincture = Tinctures.randomChargeTincture();\n    } else {\n      let tincture = Tinctures.byName(chargeTinctureName);\n      if (tincture !== undefined) {\n        chargeTincture = tincture;\n      }\n    }\n    setFieldTinctures();\n  }\n\n  function setFieldTinctures() {\n    let types1 = [];\n    let types2 = [];\n    // TODO: when choosing field tinctures is an option, this will need redoing\n    if (chargeTincture.type == 'color' || chargeTincture.type == 'stain') {\n      types1 = ['metal'];\n      types2 = ['metal'];\n    } else {\n      types1 = ['color'];\n      types2 = ['color'];\n\n      if (RND.simple(100) > 70) {\n        types1.push('stain');\n      }\n      if (RND.simple(100) > 80) {\n        types2.push('stain');\n      }\n    }\n    if (furCount === 0) {\n      types1.push('furs');\n    }\n    fieldTinctures1 = Tinctures.ofTypes(types1);\n    fieldTinctures2 = Tinctures.ofTypes(types2);\n  }\n\n  function generate() {\n    random.use(seedrandom(seed));\n    let numberOfCharges = randomNumberOfCharges();\n    if (numberOfChargesOption == 'one') {\n      numberOfCharges = 1;\n    } else if (numberOfChargesOption == 'two') {\n      numberOfCharges = 2;\n    } else if (numberOfChargesOption == 'three') {\n      numberOfCharges = 3;\n    } else if (numberOfChargesOption == 'none') {\n      numberOfCharges = 0;\n    }\n    setChargeTincture();\n\n    let config = new HeraldryGeneratorConfig();\n\n    config.chargeCount = numberOfCharges;\n    config.chargeOptions = charges;\n    config.chargeTinctures = [chargeTincture];\n    config.fieldOptions = fields;\n    config.variationOptions = variations;\n    config.fieldTinctures1 = fieldTinctures1;\n    config.fieldTinctures2 = fieldTinctures2;\n    config.width = heraldryWidth;\n    config.height = heraldryHeight;\n\n    let heraldryGen = new HeraldryGenerator();\n    heraldryGen.config = config;\n    let heraldry = heraldryGen.generate();\n    blazon = heraldry.blazon;\n\n    let renderer = new HeraldrySVGRenderer();\n\n    image = renderer.render(heraldry.device, config.width, config.height);\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n\n  function randomNumberOfCharges() {\n    const weights = [\n      { item: 0, commonality: 20 },\n      { item: 1, commonality: 55 },\n      { item: 2, commonality: 5 },\n      { item: 3, commonality: 3 },\n    ];\n\n    const result = RND.weighted(weights);\n\n    return result.item;\n  }\n\n  function save() {\n    const blob = new Blob([image], { type: \"image/svg+xml\" });\n    Download(window.URL.createObjectURL(blob), `heraldry-${seed}.svg`);\n  }\n\n  function saveAsPNG() {\n    SaveSVGToPNG(image, heraldryWidth, heraldryHeight, `heraldry-${seed}.png`);\n  }\n\n  newSeed();\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/fantasy.scss';\n\n  div.coat-of-arms {\n    width: 600px;\n    height: 660px;\n    margin: 0 auto;\n  }\n\n  p.blazon {\n    text-align: center;\n  }\n</style>\n\n<section class=\"fantasy main\">\n  <h1>Heraldry Generator</h1>\n  <p>\n    Generate fantasy coats-of-arms. Note: if you change the seed, the page URL\n    won't change, but your new seed will be used the next time you hit Generate.\n  </p>\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\" />\n  </div>\n  <div class=\"input-group\">\n    <label for=\"tag\">Charge Tag</label>\n    <select name=\"tag\" bind:value={heraldryTag} on:change={changeCharges}>\n      <option>any</option>\n      {#each availableTags as tag}\n      <option>{tag}</option>\n      {/each}\n    </select>\n  </div>\n  <div class=\"input-group\">\n    <label for=\"num-charges\">Number of Charges</label>\n    <select name=\"num-charges\" bind:value={numberOfChargesOption}>\n      <option>any</option>\n      <option>none</option>\n      <option>one</option>\n      <option>two</option>\n      <option>three</option>\n    </select>\n  </div>\n  <div class=\"input-group\">\n    <label for=\"charge-tincture\">Charge Tincture</label>\n    <select name=\"charge-tincture\" bind:value={chargeTinctureName} on:change={setChargeTincture}>\n      <option>any</option>\n      <option value=\"gules\">gules (red)</option>\n      <option value=\"argent\">argent (white)</option>\n      <option value=\"vert\">vert (green)</option>\n      <option value=\"purpure\">purpure (purple)</option>\n      <option value=\"sable\">sable (black)</option>\n      <option value=\"Or\">Or (gold)</option>\n      <option value=\"azure\">azure (blue)</option>\n      <option value=\"murrey\">murrey (mulberry)</option>\n      <option value=\"sanguine\">sanguine (blood red)</option>\n      <option value=\"tenné\">tenné (brown)</option>\n    </select>\n  </div>\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n  <button on:click={save} disabled={image === \"\"}>Save</button>\n  <button on:click={saveAsPNG} disabled={image === \"\"}>Save as PNG</button>\n\n  <p class=\"blazon\">{blazon}</p>\n  <div class=\"coat-of-arms\">{@html image}</div>\n</section>\n\n<svelte:head>\n  <title>Heraldry Generator | Iron Arachne</title>\n</svelte:head>\n"],"names":["Tinctures.ofTypes","Tinctures.randomChargeTincture","Charges.allChargeTags","Variations.all","Fields.all","Tinctures.all","Charges.all"],"mappings":"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"}