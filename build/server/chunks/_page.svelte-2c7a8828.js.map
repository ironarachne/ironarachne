{"version":3,"file":"_page.svelte-2c7a8828.js","sources":["../../../../src/routes/species-stats/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import * as AgeCategories from \"$lib/age/agecategories\";\n  import type AgeCategory from \"$lib/age/agecategory\";\n\n  let maximumAge = 100;\n  let femaleHeightModifier = 100;\n  let femaleWeightModifier = 100;\n  let maleHeightModifier = 100;\n  let maleWeightModifier = 100;\n  let femaleCategories: AgeCategory[] = [];\n  let maleCategories: AgeCategory[] = [];\n  let ingenium = {\n    adultAge: 0,\n    femaleHeight: '',\n    maleHeight: '',\n    femaleWeight: '',\n    maleWeight: ''\n  };\n\n  function calculate() {\n    let ageScale = maximumAge / 100;\n\n    femaleCategories = AgeCategories.getHumanVariant(ageScale, femaleWeightModifier / 100, femaleHeightModifier / 100, 'female');\n    maleCategories = AgeCategories.getHumanVariant(ageScale, maleWeightModifier / 100, maleHeightModifier / 100, 'male');\n\n    getIngenium();\n  }\n\n  function getIngenium() {\n    for (let i=0;i<femaleCategories.length;i++) {\n      if (femaleCategories[i].name == \"adult\") {\n        ingenium.femaleHeight = femaleCategories[i].getHeightRange();\n        ingenium.femaleWeight = femaleCategories[i].getWeightRange();\n        ingenium.adultAge = femaleCategories[i].minAge;\n      }\n    }\n\n    for (let i=0;i<maleCategories.length;i++) {\n      if (maleCategories[i].name == \"adult\") {\n        ingenium.maleHeight = maleCategories[i].getHeightRange();\n        ingenium.maleWeight = maleCategories[i].getWeightRange();\n      }\n    }\n  }\n\n  calculate();\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n</style>\n\n<svelte:head>\n  <title>Species Stats Tool | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"main default\">\n  <h1>Species Stats Tool</h1>\n  <p>This tool helps in the construction of non-human species. I built it to help me input standard\n    fantasy species. To use it, just enter the percentage of human size you want to use for height and weight.</p>\n\n  <p>All numbers use modern human as a base.</p>\n\n  <h2>Settings</h2>\n\n  <div class=\"input-group\">\n    <label for=\"maxAge\">Maximum Age (Years)</label>\n    <input type=\"number\" name=\"maxAge\" on:change={calculate} bind:value={maximumAge} id=\"maxAge\">\n  </div>\n\n  <h3>Female</h3>\n\n  <div class=\"input-group\">\n    <label for=\"female-height\">% of Base Height</label>\n    <input type=\"number\" name=\"female-height\" on:change={calculate} bind:value={femaleHeightModifier} id=\"height\">\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"female-weight\">% of Base Weight</label>\n    <input type=\"number\" name=\"female-weight\" on:change={calculate} bind:value={femaleWeightModifier} id=\"weight\">\n  </div>\n\n  <h3>Male</h3>\n\n  <div class=\"input-group\">\n    <label for=\"male-height\">% of Base Height</label>\n    <input type=\"number\" name=\"male-height\" on:change={calculate} bind:value={maleHeightModifier} id=\"height\">\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"male-weight\">% of Base Weight</label>\n    <input type=\"number\" name=\"male-weight\" on:change={calculate} bind:value={maleWeightModifier} id=\"weight\">\n  </div>\n\n  <h2>Calculated Stats</h2>\n\n  <div style=\"display:flex\">\n    <div class=\"half-column\">\n      <h3>Female</h3>\n      {#each femaleCategories as category}\n      <div>\n        <h5>{ category.name }</h5>\n        <p><strong>Age Range:</strong> { category.minAge } to { category.maxAge } years</p>\n        <p><strong>Female Height:</strong> { category.getHeightRange() }</p>\n        <p><strong>Female Weight:</strong> { category.getWeightRange() }</p>\n      </div>\n      {/each}\n    </div>\n    <div class=\"half-column\">\n      <h3>Male</h3>\n      {#each maleCategories as category}\n      <div>\n        <h5>{ category.name }</h5>\n        <p><strong>Age Range:</strong> { category.minAge } to { category.maxAge } years</p>\n        <p><strong>Male Height:</strong> { category.getHeightRange() }</p>\n        <p><strong>Male Weight:</strong> { category.getWeightRange() }</p>\n      </div>\n      {/each}\n    </div>\n  </div>\n\n  <h2>For Ingenium Second Edition</h2>\n\n  <p>This is for Ingenium Second Edition heritages.</p>\n\n  <p><strong>Female Height:</strong> { ingenium.femaleHeight }</p>\n  <p><strong>Male Height:</strong> { ingenium.maleHeight }</p>\n  <p><strong>Female Weight:</strong> { ingenium.femaleWeight }</p>\n  <p><strong>Male Weight:</strong> { ingenium.maleWeight }</p>\n  <p><strong>Adult Age:</strong> { ingenium.adultAge }</p>\n  <p><strong>Maximum Lifespan:</strong> { maximumAge }</p>\n</section>\n"],"names":["AgeCategories.getHumanVariant"],"mappings":"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"}