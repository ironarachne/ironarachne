{"version":3,"file":"_page.svelte-015ec7c3.js","sources":["../../../../src/routes/region/+page.svelte","../../../../src/lib/region/generator.ts","../../../../src/lib/region/region.ts","../../../../src/lib/settlements/generator.ts","../../../../src/lib/settlements/settlement.ts","../../../../src/lib/settlements/generatorconfig.ts","../../../../src/lib/settlements/categories/categories.ts","../../../../src/lib/settlements/categories/village.ts","../../../../src/lib/settlements/categories/town.ts","../../../../src/lib/settlements/categories/metropolis.ts","../../../../src/lib/settlements/categories/hamlet.ts","../../../../src/lib/settlements/categories/city.ts","../../../../src/lib/settlements/categories/borough.ts","../../../../src/lib/settlements/categories/category.ts","../../../../src/lib/realms/generatorconfig.ts","../../../../src/lib/realms/realmtypes.ts","../../../../src/lib/realms/generator.ts","../../../../src/lib/realms/realm.ts","../../../../src/lib/realms/realmtype.ts","../../../../src/lib/environment/generator.ts","../../../../src/lib/environment/environment.ts","../../../../src/lib/region/generatorconfig.ts"],"sourcesContent":["<script lang=\"ts\">\n  import { getContext } from 'svelte';\n  import * as RND from \"@ironarachne/rng\";\n  import RegionGeneratorConfig from \"$lib/region/generatorconfig\";\n  import RegionGenerator from \"$lib/region/generator\";\n  import * as Words from \"@ironarachne/words\";\n  import * as MUN from \"@ironarachne/made-up-names\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n  import HeraldrySVGRenderer from \"$lib/heraldry/renderers/svg\";\n  import type Culture from '$lib/culture/culture';\n\n  const user = getContext('user');\n  let savedCulture: string;\n  let useSavedCulture: boolean = false;\n  let culture: Culture;\n\n  let seed = RND.randomString(13);\n  let nameSetName = 'any';\n  let nameSet = RND.item(MUN.cultureSets());\n  let nameSets = MUN.cultureSets();\n  random.use(seedrandom(seed));\n  let config = new RegionGeneratorConfig();\n  config.nameGeneratorSet = nameSet;\n  let generator = new RegionGenerator(config);\n  let heraldryRenderer = new HeraldrySVGRenderer();\n  let region = generator.generate();\n  let ruler = region.authority;\n\n  function generate() {\n    random.use(seedrandom(seed));\n\n    generator.config.dominantCulture = null;\n    if (useSavedCulture) {\n      loadSavedCulture();\n      generator.config.dominantCulture = culture;\n      nameSet = culture.generatorSet;\n    } else {\n      if (nameSetName == 'any') {\n        nameSet = RND.item(MUN.cultureSets());\n      } else {\n        MUN.cultureSets().forEach(element => {\n          if (element.name == nameSetName) {\n            nameSet = element;\n          }\n        });\n      }\n    }\n\n    generator.config.nameGeneratorSet = nameSet;\n\n    region = generator.generate();\n    ruler = region.authority;\n  }\n\n  function loadSavedCulture() {\n    for (let i = 0; i < user.savedCultures.length; i++) {\n      if (user.savedCultures[i].name === savedCulture) {\n        culture = user.savedCultures[i];\n      }\n    }\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n</script>\n\n<svelte:head>\n  <title>Region Generator | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"fantasy main\">\n  <h1>Region Generator</h1>\n\n  <p>Generate fantasy regions.</p>\n\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\" />\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"names\">Name Set</label>\n    <select name=\"names\" bind:value={nameSetName} id=\"nameSet\">\n      <option>any</option>\n      {#each nameSets as nameSet}\n        <option>{nameSet.name}</option>\n      {/each}\n    </select>\n  </div>\n\n  {#if user.savedCultures !== undefined && user.savedCultures.length > 0}\n  <div class=\"input-group\">\n    <label for=\"useSavedCulture\">Use a saved culture for naming?</label>\n    <input type=\"checkbox\" name=\"useSavedCulture\" bind:checked={useSavedCulture} id=\"useSavedCulture\" />\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"savedCulture\">Select a saved culture to load</label>\n    <select bind:value={savedCulture}>\n      {#each user.savedCultures as saved}\n      <option value={saved.name}>{ saved.name }</option>\n      {/each}\n    </select>\n  </div>\n  {/if}\n\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n\n  <h2>{Words.capitalize(region.name)}</h2>\n\n  <p>{region.description}</p>\n\n  {#if region.dominantCulture != null}\n\n  <p>The dominant culture here is the {region.dominantCulture.name}.</p>\n\n  {/if}\n\n  {#if region.realms[region.mainRealm].parent != -1}\n  <div class=\"parent-realm\">\n    <p>{Words.title(region.name)} is part of {region.realms[region.realms[region.mainRealm].parent].name} {@html heraldryRenderer.render(region.realms[region.realms[region.mainRealm].parent].heraldry.device, 20, 22)}.</p>\n  </div>\n  {/if}\n\n  <h3>Ruler: {ruler.getHonorific()} {ruler.firstName} {ruler.lastName}</h3>\n\n  <div class=\"ruler\">\n    {#if ruler.heraldry !== null}\n    <div class=\"ruler-arms\">{@html heraldryRenderer.render(ruler.heraldry.device, 200, 220)}</div>\n    {/if}\n    <div><p>{Words.capitalize(region.name)} is ruled by {ruler.getHonorific()} {ruler.firstName} {ruler.lastName}. {ruler.description}</p></div>\n  </div>\n\n  <h3>Nearby Sovereignties</h3>\n\n  {#each region.realms as neighbor, index}\n    {#if index != region.mainRealm && neighbor.parent == -1}\n    <div class=\"neighbor\">\n      <div class=\"neighbor-arms\">{@html heraldryRenderer.render(neighbor.heraldry.device, 80, 88)}</div>\n      <div>\n        <p><strong>{Words.title(neighbor.name)}</strong></p>\n        <p>Ruled by {neighbor.authority.getHonorific()} {neighbor.authority.name}, {Words.article(neighbor.authority.species.adjective)} {neighbor.authority.species.adjective} {neighbor.authority.ageCategory.noun}.</p>\n        {#if region.realms[region.mainRealm].parent == index}\n          <p>{Words.title(region.realms[region.mainRealm].name)} is part of this.</p>\n        {/if}\n      </div>\n    </div>\n    {/if}\n  {/each}\n\n  <h3>Nearby Realms</h3>\n\n  {#each region.realms as neighbor, index}\n    {#if index != region.mainRealm && index != region.realms[region.mainRealm].parent && neighbor.parent != -1}\n    <div class=\"neighbor\">\n      <div class=\"neighbor-arms\">{@html heraldryRenderer.render(neighbor.heraldry.device, 80, 88)}</div>\n      <div>\n        <p><strong>{Words.title(neighbor.name)}</strong>, part of {region.realms[neighbor.parent].name} {@html heraldryRenderer.render(region.realms[neighbor.parent].heraldry.device, 20, 22)}.</p>\n        <p>Ruled by {neighbor.authority.getHonorific()} {neighbor.authority.name}, {Words.article(neighbor.authority.species.adjective)} {neighbor.authority.species.adjective} {neighbor.authority.ageCategory.noun}.</p>\n      </div>\n    </div>\n    {/if}\n  {/each}\n\n  <h3>Notable Settlements in {region.name}</h3>\n  {#each region.settlements as settlement}\n    <article>\n      <h5>{settlement.name}</h5>\n      <p>{settlement.description}</p>\n    </article>\n  {/each}\n  <h3>Notable Organizations</h3>\n  {#each region.organizations as organization}\n    <article>\n      <h5>{organization.name}</h5>\n      <p>{organization.description}</p>\n    </article>\n  {/each}\n</section>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/fantasy.scss';\n\n  div.ruler {\n    display: grid;\n    column-gap: 1rem;\n    margin-bottom: 1rem;\n    grid-template-columns: 210px auto;\n  }\n\n  div.ruler-arms {\n    align-self: start;\n    width: 200px;\n    height: 220px;\n    margin: 0 auto;\n  }\n\n  div.neighbor {\n    display: grid;\n    column-gap: 1rem;\n    margin-bottom: 0.5rem;\n    grid-template-columns: 80px auto;\n  }\n\n  div.neighbor > div {\n    align-self: start;\n  }\n\n  div.neighbor > div > p {\n    margin: 0;\n  }\n\n  div.neighbor-arms {\n    justify-self: center;\n    width: 80px;\n    height: 88px;\n    margin: 0 auto;\n  }\n</style>\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as RND from \"@ironarachne/rng\";\nimport random from \"random\";\nimport Environment from \"../environment/environment.js\";\nimport EnvironmentGenerator from \"../environment/generator.js\";\nimport * as Organizations from \"../organizations/fantasy.js\";\nimport Organization from \"../organizations/organization.js\";\nimport RealmGenerator from \"../realms/generator.js\";\nimport RealmGeneratorConfig from \"../realms/generatorconfig.js\";\nimport SettlementGenerator from \"../settlements/generator.js\";\nimport SettlementGeneratorConfig from \"../settlements/generatorconfig.js\";\nimport RegionGeneratorConfig from \"./generatorconfig.js\";\nimport Region from \"./region.js\";\n\nexport default class RegionGenerator {\n  config: RegionGeneratorConfig;\n\n  constructor(config: RegionGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): Region {\n    let region = new Region();\n\n    const envGen = new EnvironmentGenerator();\n\n    let nameGenSet;\n\n    if (this.config.dominantCulture != null) {\n      region.dominantCulture = this.config.dominantCulture;\n      nameGenSet = region.dominantCulture.generatorSet;\n    } else {\n      nameGenSet = this.config.nameGeneratorSet;\n    }\n\n    region.environment = envGen.generate();\n    region.settlements = randomSettlements(region.environment, nameGenSet);\n    region.organizations = randomOrganizations();\n    region.description = region.environment.description;\n\n    let realmGenConfig = new RealmGeneratorConfig();\n    realmGenConfig.nameGeneratorSet = nameGenSet;\n    const realmGen = new RealmGenerator(realmGenConfig);\n\n    let mainRealm = realmGen.generate();\n    region.realms.push(mainRealm);\n    region.mainRealm = 0;\n\n    if (!mainRealm.realmType.isStandalone) {\n      let parentRealmConfig = new RealmGeneratorConfig();\n      parentRealmConfig.nameGeneratorSet = realmGenConfig.nameGeneratorSet;\n      if (mainRealm.realmType.parentType == null) {\n        throw new Error(\"Realm type has no parent type.\");\n      }\n      parentRealmConfig.realmTypes = [mainRealm.realmType.parentType];\n\n      let parentRealmGen = new RealmGenerator(parentRealmConfig);\n      let parentRealm = parentRealmGen.generate();\n\n      region.realms.push(parentRealm);\n      mainRealm.parent = 1;\n    }\n\n    let numberOfNeighbors = random.int(this.config.minRealms, this.config.maxRealms);\n    for (let i = 0; i < numberOfNeighbors; i++) {\n      realmGen.config.nameGeneratorSet = new MUN.FantasySet();\n      if (RND.simple(100) > 70) {\n        let neighborNameGenSet = RND.item(MUN.cultureSets());\n        realmGen.config.nameGeneratorSet = neighborNameGenSet;\n      }\n      let neighbor = realmGen.generate();\n      if (!neighbor.realmType.isStandalone) {\n        if (RND.simple(100) > 50) {\n          neighbor.parent = mainRealm.parent;\n        } else {\n          let parentRealmConfig = new RealmGeneratorConfig();\n          if (neighbor.realmType.parentType == null) {\n            throw new Error(\"Realm type has no parent type.\");\n          }\n          parentRealmConfig.realmTypes = [neighbor.realmType.parentType];\n          parentRealmConfig.nameGeneratorSet = realmGen.config.nameGeneratorSet;\n\n          let parentRealmGen = new RealmGenerator(parentRealmConfig);\n          let parentRealm = parentRealmGen.generate();\n          region.realms.push(parentRealm);\n          neighbor.parent = region.realms.length - 1;\n        }\n      }\n      region.realms.push(neighbor);\n    }\n\n    region.authority = mainRealm.authority;\n    region.name = mainRealm.name;\n\n    return region;\n  }\n}\n\nfunction randomOrganizations() {\n  const orgs: Organization[] = [];\n  const numberOfOrganizations = random.int(1, 3);\n\n  for (let i = 0; i < numberOfOrganizations; i++) {\n    orgs.push(Organizations.generate());\n  }\n\n  return orgs;\n}\n\nfunction randomSettlements(environment: Environment, nameGeneratorSet: MUN.GeneratorSet) {\n  let settlementGenConfig = new SettlementGeneratorConfig();\n  settlementGenConfig.nameGenerator = nameGeneratorSet.town;\n  settlementGenConfig.size = \"large\";\n  settlementGenConfig.environment = environment;\n  let settlementGen = new SettlementGenerator(settlementGenConfig);\n  const capital = settlementGen.generate();\n\n  const numberOfMediumTowns = random.int(1, 3);\n  const numberOfSmallTowns = random.int(3, 5);\n  const towns = [];\n\n  capital.description += \" This is the capital of the region.\";\n  towns.push(capital);\n\n  for (let i = 0; i < numberOfMediumTowns; i++) {\n    settlementGen.config.size = \"medium\";\n    const town = settlementGen.generate();\n    towns.push(town);\n  }\n\n  for (let i = 0; i < numberOfSmallTowns; i++) {\n    settlementGen.config.size = \"small\";\n    const town = settlementGen.generate();\n    towns.push(town);\n  }\n\n  return towns;\n}\n","\"use strict\";\n\nimport Character from \"../characters/character.js\";\nimport Culture from \"../culture/culture.js\";\nimport Environment from \"../environment/environment.js\";\nimport Organization from \"../organizations/organization.js\";\nimport Realm from \"../realms/realm.js\";\nimport Settlement from \"../settlements/settlement.js\";\n\nexport default class Region {\n  name: string;\n  environment: Environment;\n  description: string;\n  dominantCulture: Culture;\n  settlements: Settlement[];\n  mainRealm: number;\n  realms: Realm[];\n  authority: Character;\n  organizations: Organization[];\n  settlementTiles: number[][];\n  terrainTiles: number[][];\n\n  constructor() {\n    this.name = \"\";\n    this.description = \"\";\n    this.mainRealm = -1;\n    this.realms = [];\n    this.settlements = [];\n    this.organizations = [];\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport * as Dice from \"../dice.js\";\nimport * as Categories from \"./categories/categories.js\";\nimport SettlementGeneratorConfig from \"./generatorconfig.js\";\nimport Settlement from \"./settlement.js\";\n\nexport default class SettlementGenerator {\n  config: SettlementGeneratorConfig;\n\n  constructor(config: SettlementGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): Settlement {\n    const settlementName = (this.config.nameGenerator !== null)\n      ? this.config.nameGenerator.generate(1)[0]\n      : \"Settlement\";\n    const settlementCategory = RND.item(Categories.bySizeClass(this.config.size));\n    const settlement = new Settlement(settlementName, settlementCategory, this.config.environment);\n\n    settlement.population = settlement.category.randomPopulation();\n    settlement.prosperity = Dice.roll(\"2d6\");\n    settlement.description = randomDescription(settlement);\n\n    return settlement;\n  }\n}\n\nfunction randomDescription(settlement: Settlement): string {\n  let description = RND.item([\n    \"{name} is a {category} of {population} people.\",\n    \"The {category} of {name} has {population} people.\",\n  ]);\n\n  description = description.replace(\"{category}\", settlement.category.name);\n  description = description.replace(\n    \"{population}\",\n    new Intl.NumberFormat().format(settlement.population),\n  );\n  description = description.replace(\"{name}\", settlement.name);\n  description += \" \" + settlement.category.randomDescription();\n  description += \" \" + randomProsperity(settlement.prosperity);\n  description += \" \" + randomReputation();\n  description += \" \" + RND.item(settlement.environment.biome.features);\n\n  return description;\n}\n\nfunction randomProsperity(prosperity: number): string {\n  let prefixes = [\n    \"The people here\",\n    \"Most people here\",\n    \"Folks here\",\n    \"Most folks here\",\n    \"People here\",\n  ];\n\n  let suffixes = [];\n\n  if (prosperity < 4) {\n    suffixes = [\n      \"have little more than what they need to survive\",\n      \"struggle to make ends meet\",\n      \"struggle to have enough to survive\",\n    ];\n  } else if (prosperity < 8) {\n    suffixes = [\n      \"have enough to meet their needs\",\n      \"have just enough to meet their needs\",\n      \"seem to be doing well\",\n      \"have their needs met\",\n    ];\n  } else {\n    suffixes = [\"have more wealth than most\", \"are prosperous\", \"have more than they need\"];\n  }\n\n  let options = [];\n\n  for (let i = 0; i < prefixes.length; i++) {\n    for (let j = 0; j < suffixes.length; j++) {\n      options.push(`${prefixes[i]} ${suffixes[j]}.`);\n    }\n  }\n\n  return RND.item(options);\n}\n\nfunction randomReputation(): string {\n  let prefixes = [\n    \"The people are known for\",\n    \"The people are regarded as\",\n    \"Folk here have a reputation for\",\n    \"People here are regarded as\",\n    \"The folk here are known for\",\n    \"They are known for\",\n    \"They are well known for\",\n    \"They are sometimes known for\",\n    \"Some other places regard the people here as\",\n    \"Some places regard the people here as\",\n    \"Some places regard them as\",\n    \"Some regard them as\",\n    \"Some folks regard them as\",\n  ];\n\n  let suffixes = [\n    \"being aloof\",\n    \"being suspicious of others\",\n    \"being suspicious of outsiders\",\n    \"being friendly and open\",\n    \"being friendly but devious\",\n    \"being friendly\",\n    \"being greedy\",\n    \"being altruistic\",\n    \"being trusting\",\n    \"being mistrustful\",\n    \"being miserly\",\n    \"being obsessed with status\",\n    \"being hardworking\",\n    \"being devious\",\n    \"being unfriendly\",\n    \"being trustworthy\",\n    \"being lazy\",\n    \"spending too much time making merry\",\n    \"spending too much time slacking off\",\n    \"working hard\",\n    \"working too hard\",\n    \"being unruly\",\n    \"being belligerent\",\n  ];\n\n  let reputations: string[] = [];\n\n  for (let i = 0; i < prefixes.length; i++) {\n    for (let j = 0; j < suffixes.length; j++) {\n      reputations.push(`${prefixes[i]} ${suffixes[j]}.`);\n    }\n  }\n\n  return RND.item(reputations);\n}\n","\"use strict\";\n\nimport Environment from \"../environment/environment.js\";\nimport SettlementCategory from \"./categories/category.js\";\n\nexport default class Settlement {\n  name: string;\n  description: string;\n  category: SettlementCategory;\n  population: number;\n  prosperity: number;\n  environment: Environment;\n\n  constructor(name: string, category: SettlementCategory, environment: Environment) {\n    this.name = name;\n    this.category = category;\n    this.description = \"\";\n    this.population = 0;\n    this.prosperity = 0;\n    this.environment = environment;\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport Environment from \"../environment/environment.js\";\nimport EnvironmentGenerator from \"../environment/generator.js\";\n\nexport default class SettlementGeneratorConfig {\n  environment: Environment;\n  nameGenerator: MUN.Generator | null;\n  size: string;\n\n  constructor() {\n    let envGen = new EnvironmentGenerator();\n    this.environment = envGen.generate();\n\n    let genSet = new MUN.FantasySet();\n\n    this.nameGenerator = genSet.town;\n    this.size = \"any\";\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport Borough from \"./borough.js\";\nimport SettlementCategory from \"./category.js\";\nimport City from \"./city.js\";\nimport Hamlet from \"./hamlet.js\";\nimport Metropolis from \"./metropolis.js\";\nimport Town from \"./town.js\";\nimport Village from \"./village.js\";\n\nexport function all(): SettlementCategory[] {\n  return [new Hamlet(), new Village(), new Town(), new Borough(), new City(), new Metropolis()];\n}\n\nexport function bySizeClass(sizeClass: string): SettlementCategory[] {\n  const options = all();\n  let result: SettlementCategory[] = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].sizeClass == sizeClass) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function small(): SettlementCategory[] {\n  return bySizeClass(\"small\");\n}\n\nexport function medium(): SettlementCategory[] {\n  return bySizeClass(\"medium\");\n}\n\nexport function large(): SettlementCategory[] {\n  return bySizeClass(\"large\");\n}\n\nexport function randomCategory(categories: SettlementCategory[]): SettlementCategory {\n  return RND.item(categories);\n}\n","\"use strict\";\n\nimport SettlementCategory from \"./category.js\";\n\nexport default class Village extends SettlementCategory {\n  constructor() {\n    super();\n    this.name = \"village\";\n    this.minSize = 50;\n    this.maxSize = 499;\n    this.sizeClass = \"small\";\n    this.possibleDescriptions = [\n      \"There is a single inn, a blacksmith, and a few houses in town, with farms surrounding it. Smoke rises from the chimneys, and the sound of animals can be heard in the distance.\",\n      \"This is a dense collection of farms with a number of communal buildings in the center, including a mill and a chapel. The farms are surrounded by low stone walls to protect them from marauding animals.\",\n      \"A knot of communal buildings marks the center of this village, including a town hall and a small market. The farms radiate out in a rough circle around it, with a stream running through the center of the village.\",\n      \"The village is nestled in a valley, surrounded by rolling hills covered in fields of wheat and barley. A small stream winds through the center of town, and the air is fragrant with the smell of fresh-baked bread.\",\n      \"The village is built on the side of a hill, with narrow paths winding between the houses. The buildings are made of wood and thatch, and are tightly packed together for warmth and protection from the wind.\",\n      \"The village is known for its skilled weavers, and the sound of looms can be heard from many of the houses. The weavers work with colorful threads, creating intricate patterns in their textiles.\",\n      \"Despite its small size, the village has a strong sense of community, with neighbors looking out for one another and coming together for festivals and celebrations throughout the year.\",\n    ];\n  }\n}\n","\"use strict\";\n\nimport SettlementCategory from \"./category.js\";\n\nexport default class Town extends SettlementCategory {\n  constructor() {\n    super();\n    this.name = \"town\";\n    this.minSize = 500;\n    this.maxSize = 9999;\n    this.sizeClass = \"medium\";\n    this.possibleDescriptions = [\n      \"There are multiple inns and taverns here, with brightly colored signs swinging in the breeze.\",\n      \"The town is surrounded by fields and orchards, with the smell of ripe fruit and vegetables wafting through the air.\",\n      \"There is a city hall, a town square, and a number of stores and shops, all housed in buildings of stone and wood.\",\n      \"The town is located on the banks of a river, with a busy dock where barges unload their wares.\",\n      \"The buildings in the town are tightly packed together, with narrow streets winding between them.\",\n      \"The town is known for its skilled craftsmen, and their workshops and forges ring with the sound of hammers on metal.\",\n      \"Many farms surround a dense core of community buildings here.\",\n      \"The town is famous for its annual fair, where vendors from all over the kingdom come to sell their wares.\",\n      \"The town is dominated by a tall clock tower, which chimes the hour with a melodious tune.\",\n      \"Despite its size, the town is peaceful and orderly, with a watchful eye kept on outsiders who might cause trouble.\",\n    ];\n  }\n}\n","\"use strict\";\n\nimport SettlementCategory from \"./category.js\";\n\nexport default class Metropolis extends SettlementCategory {\n  constructor() {\n    super();\n    this.name = \"metropolis\";\n    this.minSize = 50000;\n    this.maxSize = 3000000;\n    this.sizeClass = \"large\";\n    this.possibleDescriptions = [\n      \"This grand metropolis is a center of culture and learning, with renowned universities and libraries that draw scholars from across the land.\",\n      \"The winding streets of this ancient metropolis are lined with taverns, inns, and shops selling all manner of exotic goods.\",\n      \"Despite its immense size, this metropolis is a tightly-knit community where everyone knows their neighbors and traditions are deeply rooted.\",\n      \"This sprawling metropolis is surrounded by towering walls and fortified gates, protecting it from invaders and marauders.\",\n      \"The grand castle at the heart of this metropolis is the seat of the ruling monarch, and its knights are famed for their valor and chivalry.\",\n      \"This metropolis is a hub of trade and commerce, with bustling markets and guilds that wield immense power.\",\n      \"The streets of this metropolis are lit by torches and lined with ancient stone buildings, some of which have stood for centuries.\",\n      \"This metropolis is renowned for its skilled craftsmen, who produce exquisite works of art and fine weaponry.\",\n      \"The dark alleys and hidden courtyards of this metropolis are home to thieves, assassins, and other unsavory characters.\",\n      \"Despite the challenges it faces, this metropolis is a beacon of hope and civilization in a world full of danger and chaos.\",\n    ];\n  }\n}\n","\"use strict\";\n\nimport SettlementCategory from \"./category.js\";\n\nexport default class Hamlet extends SettlementCategory {\n  constructor() {\n    super();\n    this.name = \"hamlet\";\n    this.minSize = 10;\n    this.maxSize = 49;\n    this.sizeClass = \"small\";\n    this.possibleDescriptions = [\n      \"Buildings here are scattered and small, with thatched roofs and walls of rough-hewn timber.\",\n      \"The farms here are clustered together, their fields carefully tended and surrounded by low stone walls.\",\n      \"There are only a handful of farms scattered around a single community building here, which serves as the center of local life.\",\n      \"The hamlet is surrounded by wilderness, with a few clearings where buildings and fields have been established.\",\n      \"The buildings in the hamlet are simple but sturdy, with chimneys belching smoke into the crisp morning air.\",\n      \"This hamlet is situated on a hilltop, with commanding views of the surrounding countryside.\",\n      \"The hamlet consists of a small cluster of houses and barns, with a narrow dirt road leading off into the distance.\",\n      \"There is a small stream running through the hamlet, providing water for the villagers and their crops.\",\n    ];\n  }\n}\n","\"use strict\";\n\nimport SettlementCategory from \"./category.js\";\n\nexport default class City extends SettlementCategory {\n  constructor() {\n    super();\n    this.name = \"city\";\n    this.minSize = 20000;\n    this.maxSize = 49999;\n    this.sizeClass = \"large\";\n    this.possibleDescriptions = [\n      \"This city is built around a grand castle, with towers that pierce the sky and walls that have withstood the test of time.\",\n      \"The streets of this city are lined with buildings of every shape and size, from towering spires to humble cottages.\",\n      \"This city is a marvel of engineering, with aqueducts, bridges, and tunnels that connect its various districts.\",\n      \"The buildings in this city are a testament to the skill and artistry of its craftsmen, with intricate carvings and decorations adorning their facades.\",\n      \"This city is surrounded by a sturdy wall, with guard towers and gates that keep out unwanted visitors.\",\n      \"The center of this city is dominated by a grand cathedral, with stained-glass windows and soaring arches that inspire awe in all who see them.\",\n      \"The main square of this city is a bustling hub of activity, with market stalls and street performers vying for attention.\",\n      \"The winding alleys of this city are lit by lanterns at night, creating a mysterious and romantic atmosphere.\",\n      \"This city is a patchwork of different architectural styles, with each district showcasing its own unique character and flair.\",\n    ];\n  }\n}\n","\"use strict\";\n\nimport SettlementCategory from \"./category.js\";\n\nexport default class Borough extends SettlementCategory {\n  constructor() {\n    super();\n    this.name = \"borough\";\n    this.minSize = 10000;\n    this.maxSize = 19999;\n    this.sizeClass = \"medium\";\n    this.possibleDescriptions = [\n      \"The buildings here are tall and tightly packed together, with narrow streets winding between them.\",\n      \"This borough is divided into several distinct districts, each with its own unique architecture and atmosphere.\",\n      \"The center of this borough is dominated by a massive marketplace, surrounded by a ring of shops and residences.\",\n      \"There are many factories and mills in this borough, with tall chimneys belching smoke into the air.\",\n      \"The buildings here are mostly made of stone or brick, and are quite ornate and impressive.\",\n      \"The streets of this borough are lined with small shops and stalls, selling all manner of goods.\",\n      \"There are many parks and gardens scattered throughout this borough, offering a welcome respite from the hustle and bustle of city life.\",\n      \"The buildings here are a mix of old and new, with modern high-rises standing next to ancient, crumbling ruins.\",\n      \"This borough is known for its grand architecture, with many magnificent cathedrals and government buildings.\",\n    ];\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport random from \"random\";\n\nexport default class SettlementCategory {\n  name: string;\n  minSize: number;\n  maxSize: number;\n  sizeClass: string;\n  possibleDescriptions: string[];\n\n  constructor() {\n    this.name = \"\";\n    this.minSize = 0;\n    this.maxSize = 0;\n    this.sizeClass = \"\";\n    this.possibleDescriptions = [];\n  }\n\n  randomDescription(): string {\n    let description = RND.item(this.possibleDescriptions);\n    return description;\n  }\n\n  randomPopulation(): number {\n    return random.int(this.minSize, this.maxSize);\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport RealmType from \"./realmtype.js\";\nimport * as RealmTypes from \"./realmtypes.js\";\n\nexport default class RealmGeneratorConfig {\n  nameGeneratorSet: MUN.GeneratorSet;\n  realmTypes: RealmType[];\n  mapTiles: number[][];\n  mapWidth: number;\n  mapHeight: number;\n\n  constructor() {\n    this.nameGeneratorSet = new MUN.FantasySet();\n    this.realmTypes = RealmTypes.all();\n    this.mapWidth = 40;\n    this.mapHeight = 30;\n    this.mapTiles = [];\n  }\n}\n","\"use strict\";\n\nimport Title from \"../characters/title.js\";\nimport RealmType from \"./realmtype.js\";\n\nexport function all(): RealmType[] {\n  let kingdom = new RealmType(\n    \"kingdom\",\n    10,\n    50,\n    new Title(\"Queen\", \"King\", \"Queen\", \"King\", true, \"Kingdom of\", 7),\n    5,\n    true,\n    null,\n  );\n  let empire = new RealmType(\n    \"empire\",\n    50,\n    100,\n    new Title(\"Empress\", \"Emperor\", \"Empress\", \"Emperor\", true, \"Empire of\", 8),\n    5,\n    true,\n    null,\n  );\n\n  return [\n    new RealmType(\n      \"earldom\",\n      2,\n      4,\n      new Title(\"Earl\", \"Earl\", \"Lady\", \"Lord\", true, \"Earldom of\", 2),\n      5,\n      false,\n      kingdom,\n    ),\n    new RealmType(\n      \"county\",\n      4,\n      6,\n      new Title(\"Countess\", \"Count\", \"Countess\", \"Count\", true, \"County of\", 3),\n      20,\n      false,\n      kingdom,\n    ),\n    new RealmType(\n      \"barony\",\n      6,\n      8,\n      new Title(\"Baroness\", \"Baron\", \"Baroness\", \"Baron\", true, \"Barony of\", 4),\n      10,\n      false,\n      kingdom,\n    ),\n    new RealmType(\n      \"duchy\",\n      8,\n      10,\n      new Title(\"Duchess\", \"Duke\", \"Duchess\", \"Duke\", true, \"Duchy of\", 5),\n      5,\n      false,\n      kingdom,\n    ),\n    new RealmType(\n      \"grand duchy\",\n      10,\n      12,\n      new Title(\n        \"Grand Duchess\",\n        \"Grand Duke\",\n        \"Grand Duchess\",\n        \"Grand Duke\",\n        true,\n        \"Grand Duchy of\",\n        6,\n      ),\n      2,\n      false,\n      kingdom,\n    ),\n    new RealmType(\n      \"principality\",\n      12,\n      14,\n      new Title(\"Princess\", \"Prince\", \"Princess\", \"Prince\", true, \"Principality of\", 7),\n      2,\n      false,\n      kingdom,\n    ),\n    new RealmType(\n      \"province\",\n      12,\n      14,\n      new Title(\"Governor\", \"Governor\", \"Governor\", \"Governor\", true, \"Province of\", 7),\n      1,\n      false,\n      empire,\n    ),\n    kingdom,\n    empire,\n  ];\n}\n","\"use strict\";\n\nimport type Character from \"$lib/characters/character.js\";\nimport CharacterGenerator from \"$lib/characters/generator.js\";\nimport * as PremadeConfigs from \"$lib/characters/premadeconfigs.js\";\nimport HeraldryGenerator from \"$lib/heraldry/generator.js\";\nimport type { GeneratorSet } from \"@ironarachne/made-up-names\";\nimport * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport type RealmGeneratorConfig from \"./generatorconfig.js\";\nimport Realm from \"./realm.js\";\nimport type RealmType from \"./realmtype.js\";\n\nexport default class RealmGenerator {\n  config: RealmGeneratorConfig;\n\n  constructor(config: RealmGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): Realm {\n    let realm = new Realm();\n    realm.realmType = RND.weighted(this.config.realmTypes);\n\n    if (this.config.nameGeneratorSet.country === null) {\n      throw new Error(\"RealmGenerator requires a country name generator set.\");\n    }\n\n    let name = this.config.nameGeneratorSet.country.generate(1)[0];\n    realm.name = `the ${Words.title(realm.realmType.name)} of ${name}`;\n    let herGen = new HeraldryGenerator();\n    realm.heraldry = herGen.generate();\n    realm.authority = randomAuthority(realm.realmType, this.config.nameGeneratorSet);\n\n    return realm;\n  }\n}\n\nfunction randomAuthority(realmType: RealmType, nameGeneratorSet: GeneratorSet): Character {\n  let charGenConfig = PremadeConfigs.getFantasy();\n  charGenConfig.ageCategories = [\"adult\"];\n  if (nameGeneratorSet.family === null) {\n    throw new Error(\"RealmGenerator requires a family name generator set.\");\n  }\n  if (nameGeneratorSet.female === null) {\n    throw new Error(\"RealmGenerator requires a female name generator set.\");\n  }\n  if (nameGeneratorSet.male === null) {\n    throw new Error(\"RealmGenerator requires a male name generator set.\");\n  }\n  charGenConfig.familyNameGenerator = nameGeneratorSet.family;\n  charGenConfig.femaleNameGenerator = nameGeneratorSet.female;\n  charGenConfig.maleNameGenerator = nameGeneratorSet.male;\n  charGenConfig.useAdaptiveNames = false;\n\n  const charGen = new CharacterGenerator(charGenConfig);\n\n  let authority = charGen.generate();\n  authority.titles.push(realmType.grantedTitle);\n  let herGen = new HeraldryGenerator();\n  authority.heraldry = herGen.generate();\n\n  return authority;\n}\n","\"use strict\";\n\nimport Character from \"../characters/character.js\";\nimport Title from \"../characters/title.js\";\nimport Vertex from \"../geometry/vertex.js\";\nimport Arms from \"../heraldry/arms.js\";\nimport Claim from \"./claim.js\";\nimport RealmType from \"./realmtype.js\";\n\nexport default class Realm {\n  name: string;\n  adjective: string;\n  description: string;\n  heraldry: Arms; // TODO: use an abstract representation of imagery, so we can optionally do mon or flags instead of heraldry\n  authority: Character;\n  grantedTitle: Title;\n  tiles: Vertex[];\n  claims: Claim[];\n  parent: number; // array index of the parent realm\n  realmType: RealmType;\n\n  constructor() {\n    this.name = \"\";\n    this.adjective = \"\";\n    this.description = \"\";\n    this.tiles = [];\n    this.claims = [];\n    this.parent = -1;\n  }\n}\n","\"use strict\";\n\nimport Title from \"../characters/title.js\";\n\nexport default class RealmType {\n  name: string;\n  minTiles: number;\n  maxTiles: number;\n  grantedTitle: Title;\n  commonality: number;\n  isStandalone: boolean;\n  parentType: RealmType | null;\n\n  constructor(\n    name: string,\n    minTiles: number,\n    maxTiles: number,\n    grantedTitle: Title,\n    commonality: number,\n    isStandalone: boolean,\n    parentType: RealmType | null,\n  ) {\n    this.name = name;\n    this.minTiles = minTiles;\n    this.maxTiles = maxTiles;\n    this.grantedTitle = grantedTitle;\n    this.commonality = commonality;\n    this.isStandalone = isStandalone;\n    this.parentType = parentType;\n  }\n}\n","\"use strict\";\n\nimport * as RND from \"@ironarachne/rng\";\nimport BiomeGenerator from \"./biomes/generator.js\";\nimport BiomeGeneratorConfig from \"./biomes/generatorconfig.js\";\nimport * as Climates from \"./climates/climates.js\";\nimport Environment from \"./environment.js\";\n\nexport default class EnvironmentGenerator {\n  generate(): Environment {\n    let climate = Climates.random();\n    climate.description = Climates.describe(climate);\n    const biomeGeneratorConfig = new BiomeGeneratorConfig(climate);\n    const biomeGen = new BiomeGenerator(biomeGeneratorConfig);\n    const biome = biomeGen.generate();\n\n    let environment = new Environment(biome, climate);\n\n    environment.description = `${RND.item(biome.descriptions)} ${RND.item(biome.features)}`;\n    environment.description += \" \" + environment.climate.description;\n\n    return environment;\n  }\n}\n","\"use strict\";\n\nimport type Biome from \"./biomes/biome.js\";\nimport type Climate from \"./climates/climate.js\";\n\nexport default class Environment {\n  biome: Biome;\n  climate: Climate;\n  description: string;\n\n  constructor(biome: Biome, climate: Climate) {\n    this.biome = biome;\n    this.climate = climate;\n  }\n}\n","\"use strict\";\n\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport Culture from \"../culture/culture.js\";\n\nexport default class RegionGeneratorConfig {\n  nameGeneratorSet: MUN.GeneratorSet;\n  dominantCulture: Culture | null;\n  mapWidth: number;\n  mapHeight: number;\n  minRealms: number;\n  maxRealms: number;\n\n  constructor() {\n    this.nameGeneratorSet = new MUN.FantasySet();\n    this.dominantCulture = null;\n    this.mapWidth = 40;\n    this.mapHeight = 30;\n    this.minRealms = 2;\n    this.maxRealms = 4;\n  }\n}\n"],"names":["nameSet","random","Organizations.generate","Dice.roll","Categories.bySizeClass","RealmTypes.all","all","PremadeConfigs.getFantasy","Climates.describe","Climates.random"],"mappings":"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CADN;AACM,MACA,IAAA,KADN,CACM,MADN,EACM,MADN,EACM,MADN,EACM,MADN,EACM,IADN,EACM,YADN,EACM,CAAA,CADN;AACM,MAC+D,CADrE;AACqE,MAC/D,KADN;AACM,MACA,OADN;AACM,KAAN;AACM,IACF,IAAA,SADJ;AACI,MACI,QADR;AACQ,MACF,CADN;AACM,MACA,CADN;AACM,MACA,IAAA,KADN,CACM,UADN,EACM,OADN,EACM,UADN,EACM,OADN,EACM,IADN,EACM,WADN,EACM,CAAA,CADN;AACM,MACwE,EAD9E;AAC8E,MACxE,KADN;AACM,MACA,OADN;AACM,KAAN;AACM,IACF,IAAA,SADJ;AACI,MACI,QADR;AACQ,MACF,CADN;AACM,MACA,CADN;AACM,MACA,IAAA,KADN,CACM,UADN,EACM,OADN,EACM,UADN,EACM,OADN,EACM,IADN,EACM,WADN,EACM,CAAA,CADN;AACM,MACwE,EAD9E;AAC8E,MACxE,KADN;AACM,MACA,OADN;AACM,KAAN;AACM,IACF,IAAA,SADJ;AACI,MACI,OADR;AACQ,MACF,CADN;AACM,MACA,EADN;AACM,MACA,IAAA,KADN,CACM,SADN,EACM,MADN,EACM,SADN,EACM,MADN,EACM,IADN,EACM,UADN,EACM,CAAA,CADN;AACM,MACmE,CADzE;AACyE,MACnE,KADN;AACM,MACA,OADN;AACM,KAAN;AACM,IACF,IAAA,SADJ;AACI,MACI,aADR;AACQ,MACF,EADN;AACM,MACA,EADN;AACM,MACA,IAAA,KADN;AACM,QACI,eADV;AACU,QACF,YADR;AACQ,QACA,eADR;AACQ,QACA,YADR;AACQ,QACA,IADR;AACQ,QACA,gBADR;AACQ,QACA,CADR;AACQ,OAAR;AACQ,MACF,CADN;AACM,MACA,KADN;AACM,MACA,OADN;AACM,KAAN;AACM,IACF,IAAA,SADJ;AACI,MACI,cADR;AACQ,MACF,EADN;AACM,MACA,EADN;AACM,MACA,IAAA,KADN,CACM,UADN,EACM,QADN,EACM,UADN,EACM,QADN,EAC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"}