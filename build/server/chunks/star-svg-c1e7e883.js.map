{"version":3,"file":"star-svg-c1e7e883.js","sources":["../../../.svelte-kit/adapter-node/chunks/star-svg.js"],"sourcesContent":["import * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport { P as PlanetGenerator, a as PlanetGeneratorConfig } from \"./generator2.js\";\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as RND from \"@ironarachne/rng\";\nclass Star {\n  name;\n  color;\n  description;\n  classification;\n  radius;\n  // in km\n  mass;\n  // in 10^30 kg\n  temperature;\n  // in K\n  luminosity;\n  // in 10^26 W\n  constructor() {\n    this.name = \"\";\n    this.color = \"\";\n    this.description = \"\";\n    this.classification = \"\";\n    this.radius = 0;\n    this.mass = 0;\n    this.temperature = 0;\n    this.luminosity = 0;\n  }\n  getColorFromTemperature() {\n    if (this.temperature < 3700) {\n      return \"red\";\n    } else if (this.temperature < 5200) {\n      return \"orange\";\n    } else if (this.temperature < 6e3) {\n      return \"yellow\";\n    } else if (this.temperature < 7500) {\n      return \"yellow-white\";\n    } else if (this.temperature < 1e4) {\n      return \"white\";\n    } else if (this.temperature < 3e4) {\n      return \"blue-white\";\n    }\n    return \"blue\";\n  }\n}\nclass StarSystem {\n  name;\n  description;\n  stars;\n  planets;\n  constructor() {\n    this.name = \"\";\n    this.description = \"\";\n    this.stars = [];\n    this.planets = [];\n  }\n}\nclass StarClassification {\n  name;\n  radius_min;\n  // relative to the sun\n  radius_max;\n  // relative to the sun\n  mass_min;\n  // relative to the sun\n  mass_max;\n  // relative to the sun\n  temperature_min;\n  // in K\n  temperature_max;\n  // in K\n  luminosity_min;\n  // relative to the sun\n  luminosity_max;\n  // relative to the sun\n  commonality;\n  // commonality in the universe\n  constructor(name, radius_min, radius_max, mass_min, mass_max, temperature_min, temperature_max, luminosity_min, luminosity_max, commonality) {\n    this.name = name;\n    this.radius_min = radius_min;\n    this.radius_max = radius_max;\n    this.mass_min = mass_min;\n    this.mass_max = mass_max;\n    this.temperature_min = temperature_min;\n    this.temperature_max = temperature_max;\n    this.luminosity_min = luminosity_min;\n    this.luminosity_max = luminosity_max;\n    this.commonality = commonality;\n  }\n}\nfunction all() {\n  return [\n    new StarClassification(\"main sequence\", 0.1, 0.5, 0.1, 0.5, 2e3, 4e3, 0.01, 0.05, 40),\n    new StarClassification(\"main sequence\", 0.6, 0.9, 0.6, 0.8, 4e3, 5e3, 0.1, 0.8, 45),\n    new StarClassification(\"main sequence\", 0.9, 1.1, 0.8, 1.3, 5e3, 6e3, 0.8, 3, 60),\n    new StarClassification(\"main sequence\", 1.1, 1.5, 1.3, 1.8, 6e3, 8e3, 3, 8, 30),\n    new StarClassification(\"main sequence\", 1.5, 4, 1.8, 5, 8e3, 15e3, 15, 25, 10),\n    new StarClassification(\"main sequence\", 4, 6, 8, 12, 15e3, 25e3, 900, 1100, 5),\n    new StarClassification(\n      \"main sequence\",\n      8,\n      12,\n      45,\n      55,\n      35e3,\n      45e3,\n      9e4,\n      11e4,\n      1\n    ),\n    new StarClassification(\"giant\", 10, 50, 1, 5, 3e3, 1e4, 50, 1e3, 2),\n    new StarClassification(\n      \"supergiant\",\n      30,\n      500,\n      10,\n      70,\n      4e3,\n      4e4,\n      3e4,\n      1e6,\n      1\n    )\n  ];\n}\nclass StarGeneratorConfig {\n  possibleClassifications;\n  constructor() {\n    this.possibleClassifications = all();\n  }\n}\nclass StarGenerator {\n  config;\n  constructor(config) {\n    this.config = config;\n  }\n  generate() {\n    const classification = RND.weighted(this.config.possibleClassifications);\n    const star = new Star();\n    star.classification = classification.name;\n    star.radius = random.float(classification.radius_min, classification.radius_max) * 695508;\n    star.mass = random.float(classification.mass_min, classification.mass_max) * 1.989;\n    star.temperature = random.int(classification.temperature_min, classification.temperature_max);\n    star.luminosity = random.float(classification.luminosity_min, classification.luminosity_max) * 3.828;\n    star.color = star.getColorFromTemperature();\n    const article = Words.article(star.color);\n    star.description = `This is ${article} ${star.color} ${star.classification} star.`;\n    star.name = MUN.star();\n    return star;\n  }\n}\nclass StarSystemGeneratorConfig {\n  minPlanets;\n  maxPlanets;\n  constructor() {\n    this.minPlanets = 3;\n    this.maxPlanets = 12;\n  }\n}\nclass StarSystemGenerator {\n  config;\n  constructor(config) {\n    this.config = config;\n  }\n  generate() {\n    let starsystem = new StarSystem();\n    let starGenConfig = new StarGeneratorConfig();\n    let starGen = new StarGenerator(starGenConfig);\n    const star = starGen.generate();\n    starsystem.name = star.name;\n    starsystem.stars.push(star);\n    const numberOfPlanets = random.int(this.config.minPlanets, this.config.maxPlanets);\n    let planetGenConfig = new PlanetGeneratorConfig();\n    let planetGenerator = new PlanetGenerator(planetGenConfig);\n    for (let i = 0; i < numberOfPlanets; i++) {\n      const planet = planetGenerator.generate();\n      starsystem.planets.push(planet);\n    }\n    starsystem.planets.sort(function(x, y) {\n      if (x.distance_from_sun < y.distance_from_sun) {\n        return -1;\n      }\n      if (x.distance_from_sun > y.distance_from_sun) {\n        return 1;\n      }\n      return 0;\n    });\n    for (let i = 0; i < starsystem.planets.length; i++) {\n      if (!starsystem.planets[i].is_inhabited) {\n        starsystem.planets[i].name = starsystem.name + \" \" + Words.romanize(i + 1);\n      }\n    }\n    starsystem.description = `The ${starsystem.name} system has ${numberOfPlanets} planets`;\n    const asteroidBeltChance = random.int(1, 100);\n    if (asteroidBeltChance > 70) {\n      starsystem.description += \" and an asteroid belt.\";\n    } else {\n      starsystem.description += \".\";\n    }\n    return starsystem;\n  }\n}\nclass SVGStarfieldRenderer {\n  width;\n  height;\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  render() {\n    let svg = '<svg width=\"' + this.width + '\" height=\"' + this.height + '\" viewBox=\"0 0 ' + this.width + \" \" + this.height + '\">';\n    svg += '<rect width=\"' + this.width + '\" height=\"' + this.height + '\" fill=\"black\" />';\n    const numberOfStars = Math.floor(this.width * this.height * 5e-3);\n    for (let i = 0; i < numberOfStars; i++) {\n      const x = random.int(0, this.width);\n      const y = random.int(0, this.height);\n      svg += '<rect x=\"' + x + '\" y=\"' + y + '\" width=\"1\" height=\"1\" fill=\"' + randomStarColor() + '\" />';\n    }\n    svg += \"</svg>\";\n    return svg;\n  }\n}\nfunction randomStarColor() {\n  const colorBase = random.int(80, 180);\n  let r = colorBase;\n  let g = colorBase;\n  let b = colorBase;\n  let tweaked = false;\n  const tweakBlueChance = random.int(1, 100);\n  if (tweakBlueChance > 70 && tweaked === false) {\n    b += random.int(10, 20);\n    tweaked = true;\n  }\n  const tweakRedChance = random.int(1, 100);\n  if (tweakRedChance > 70 && tweaked == false) {\n    r += random.int(10, 20);\n    tweaked = true;\n  }\n  const tweakGreenChance = random.int(1, 100);\n  if (tweakGreenChance > 70 && tweaked == false) {\n    g += random.int(10, 20);\n    tweaked = true;\n  }\n  return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n}\nclass SVGPlanetRenderer {\n  width;\n  height;\n  constructor(width, height) {\n    this.height = height;\n    this.width = width;\n  }\n  render(planet) {\n    const textureRenderer = getPlanetRenderer(planet.classification.name);\n    const texture = textureRenderer.renderSVG();\n    let sizeClass = \"medium\";\n    if (planet.diameter < 8e3) {\n      sizeClass = \"small\";\n    } else if (planet.diameter > 19e3) {\n      sizeClass = \"large\";\n    }\n    const midX = Math.floor(this.width / 2);\n    const midY = Math.floor(this.height / 2);\n    const planetId = random.int(0, 1e3);\n    const min = Math.min(this.width, this.height);\n    let radius = 0;\n    const planetDiameterModifier = (planet.diameter - planet.classification.diameter_min) / (planet.classification.diameter_max - planet.classification.diameter_min);\n    let rangeMin = 0.8;\n    let rangeMax = 0.9;\n    if (sizeClass === \"small\") {\n      rangeMin = 0.2;\n      rangeMax = 0.4;\n    } else if (sizeClass === \"medium\") {\n      rangeMin = 0.5;\n      rangeMax = 0.7;\n    }\n    let size = (rangeMax - rangeMin) * planetDiameterModifier + rangeMin;\n    radius = Math.floor(min) * size / 2;\n    const atmosphereRadius = Math.floor(radius * 1.1);\n    let starfieldRenderer = new SVGStarfieldRenderer(this.width, this.height);\n    const background = starfieldRenderer.render();\n    let svg = '<svg width=\"' + this.width + '\" height=\"' + this.height + '\" viewBox=\"0 0 ' + this.width + \" \" + this.height + '\">';\n    svg += \"<defs>\";\n    svg += '<radialGradient id=\"atmosphere-' + planetId + '\"><stop offset=\"95%\" stop-color=\"' + textureRenderer.atmosphereColor + '\" stop-opacity=\"0.8\" /><stop offset=\"100%\" stop-color=\"rgb(255,255,255)\" stop-opacity=\"0\" /></radialGradient>';\n    svg += '<radialGradient id=\"planetShadow\" cx=\"0.5\" cy=\"0.5\" r=\"0.75\" fx=\"0.275\" fy=\"0.275\"><stop offset=\"0%\" stop-color=\"rgb(0,0,0)\" stop-opacity=\"0\" /><stop offset=\"80%\" stop-color=\"rgb(0,0,70)\" stop-opacity=\"0.8\" /><stop offset=\"90%\" stop-color=\"rgb(0,0,0)\" stop-opacity=\"0.8\" /><stop offset=\"100%\" stop-color=\"rgb(0,00,40)\" stop-opacity=\"0.6\" /></radialGradient>';\n    svg += '<pattern id=\"planetTexture-' + planetId + '\" x=\"0\" y=\"0\" width=\"1\" height=\"1\">' + texture + \"</pattern>\";\n    svg += \"</defs>\";\n    svg += background;\n    if (planet.has_atmosphere) {\n      svg += '<circle cx=\"' + midX + '\" cy=\"' + midY + '\" r=\"' + atmosphereRadius + '\" fill=\"url(#atmosphere-' + planetId + ')\" />';\n    }\n    svg += '<circle cx=\"' + midX + '\" cy=\"' + midY + '\" r=\"' + radius + '\" fill=\"url(#planetTexture-' + planetId + ')\" />';\n    svg += '<circle cx=\"' + midX + '\" cy=\"' + midY + '\" r=\"' + radius + '\" fill=\"url(#planetShadow)\" />';\n    return svg;\n  }\n}\nfunction getPlanetRenderer(planetType) {\n  const planetTypes = [\n    {\n      name: \"barren\",\n      hasAtmosphere: false,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = '<svg x=\"0\" y=\"0\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\">';\n        svg += \"<defs>\";\n        svg += '<radialGradient id=\"craterTrough' + hash + '\" cx=\"0.6\" cy=\"0.6\" fx=\"0.4\" fy=\"0.4\"><stop offset=\"0%\" stop-color=\"rgb(170,170,170)\" /><stop offset=\"5%\" stop-color=\"rgb(150,150,150)\" /><stop offset=\"95%\" stop-color=\"rgb(150,150,150)\" stop-opacity=\"0\" /><stop offset=\"100%\" stop-color=\"rgb(110,110,110)\" /></radialGradient>';\n        svg += '<filter id=\"barrenTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.05\" numOctaves=\"2\" result=\"turbulence\"/><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"15\" xChannelSelector=\"R\" yChannelSelector=\"G\" /></filter>';\n        svg += \"</defs>\";\n        svg += '<rect x=\"0\" y=\"0\" width=\"256\" height=\"256\" fill=\"rgb(150,150,150)\" />';\n        const numberOfSplotches = random.int(6, 14);\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(110, 170);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"rgb(' + amount + \", \" + amount + \", \" + amount + ')\" filter=\"url(#barrenTexture' + hash + ')\" />';\n        }\n        const numberOfCraters = random.int(55, 80);\n        for (let i = 0; i < numberOfCraters; i++) {\n          const x = random.int(20, 200);\n          const y = random.int(20, 200);\n          const r = random.int(3, 8);\n          const crater = '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"url(#craterTrough' + hash + ')\" />';\n          svg += crater;\n        }\n        svg += \"</svg>\";\n        return svg;\n      }\n    },\n    {\n      name: \"arid\",\n      hasAtmosphere: true,\n      atmosphereColor: \"rgb(170,224,211)\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = '<svg x=\"0\" y=\"0\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\">';\n        svg += \"<defs>\";\n        svg += '<radialGradient id=\"aridCrater' + hash + '\" cx=\"0.6\" cy=\"0.6\" fx=\"0.4\" fy=\"0.4\"><stop offset=\"0%\" stop-color=\"rgb(237,220,151)\" /><stop offset=\"5%\" stop-color=\"rgb(227,210,141)\" /><stop offset=\"95%\" stop-color=\"rgb(217,200,131)\" stop-opacity=\"0\" /><stop offset=\"100%\" stop-color=\"rgb(197,190,121)\" /></radialGradient>';\n        svg += '<filter id=\"aridTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.05\" numOctaves=\"2\" result=\"turbulence\"/><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"15\" xChannelSelector=\"R\" yChannelSelector=\"G\" /></filter>';\n        svg += \"</defs>\";\n        svg += '<rect x=\"0\" y=\"0\" width=\"256\" height=\"256\" fill=\"rgb(227,210,141)\" />';\n        const numberOfSplotches = random.int(6, 14);\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(-10, 20);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"rgb(' + (227 + amount) + \", \" + (210 + amount) + \", \" + (141 + amount) + ')\" filter=\"url(#aridTexture' + hash + ')\" />';\n        }\n        const numberOfCraters = random.int(25, 30);\n        for (let i = 0; i < numberOfCraters; i++) {\n          const x = random.int(20, 200);\n          const y = random.int(20, 200);\n          const r = random.int(3, 8);\n          const crater = '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"url(#aridCrater' + hash + ')\" />';\n          svg += crater;\n        }\n        svg += \"</svg>\";\n        return svg;\n      }\n    },\n    {\n      name: \"garden\",\n      hasAtmosphere: true,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = '<svg x=\"0\" y=\"0\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\">';\n        svg += \"<defs>\";\n        svg += '<radialGradient id=\"gardenContinentGradient' + hash + '\"><stop offset=\"0%\" stop-color=\"rgb(130,181,91)\" /><stop offset=\"100%\" stop-color=\"rgb(120,153,55)\" /></radialGradient>';\n        svg += '<filter id=\"gardenTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.05\" numOctaves=\"2\" result=\"turbulence\"/><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"15\" xChannelSelector=\"R\" yChannelSelector=\"G\" /></filter>';\n        svg += '<filter id=\"cloudTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.45\" numOctaves=\"2\" result=\"turbulence\" /><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"30\" xChannelSelector=\"R\" yChannelSelector=\"G\" /><feGaussianBlur stdDeviation=\"0.2\" /></filter>';\n        svg += \"</defs>\";\n        svg += '<rect x=\"0\" y=\"0\" width=\"256\" height=\"256\" fill=\"rgb(36,27,161)\" />';\n        const numberOfContinents = random.int(7, 18);\n        for (let i = 0; i < numberOfContinents; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(5, 30);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"url(#gardenContinentGradient' + hash + ')\" filter=\"url(#gardenTexture' + hash + ')\" />';\n        }\n        const numberOfClouds = random.int(20, 30);\n        for (let i = 0; i < numberOfClouds; i++) {\n          const x = random.int(15, 100);\n          const y = random.int(15, 100);\n          const rx = random.int(5, 13);\n          const ry = random.int(5, 9);\n          svg += '<ellipse cx=\"' + x + '\" cy=\"' + y + '\" rx=\"' + rx + '\" ry=\"' + ry + '\" fill=\"white\" filter=\"url(#cloudTexture' + hash + ')\" />';\n        }\n        svg += \"</svg>\";\n        return svg;\n      }\n    },\n    {\n      name: \"jungle\",\n      hasAtmosphere: true,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = '<svg x=\"0\" y=\"0\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\">';\n        svg += \"<defs>\";\n        svg += '<linearGradient id=\"jungleLakeGradient' + hash + '\"><stop offset=\"0%\" stop-color=\"rgb(17,109,128)\" /><stop offset=\"100%\" stop-color=\"rgb(7,99,118)\" /></linearGradient>';\n        svg += '<filter id=\"jungleTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.05\" numOctaves=\"2\" result=\"turbulence\"/><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"15\" xChannelSelector=\"R\" yChannelSelector=\"G\" /></filter>';\n        svg += '<filter id=\"cloudTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.2\" numOctaves=\"2\" result=\"turbulence\" /><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"30\" xChannelSelector=\"R\" yChannelSelector=\"G\" /><feGaussianBlur stdDeviation=\"0.1\" /></filter>';\n        svg += \"</defs>\";\n        svg += '<rect x=\"0\" y=\"0\" width=\"256\" height=\"256\" fill=\"rgb(8,94,40)\" />';\n        const numberOfSplotches = random.int(6, 14);\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(-10, 20);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"rgb(' + (10 + amount) + \", \" + (96 + amount) + \", \" + (42 + amount) + ')\" filter=\"url(#jungleTexture' + hash + ')\" />';\n        }\n        const numberOfOceans = random.int(4, 7);\n        for (let i = 0; i < numberOfOceans; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(5, 10);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"url(#jungleLakeGradient' + hash + ')\" filter=\"url(#jungleTexture' + hash + ')\" />';\n        }\n        const numberOfClouds = random.int(40, 60);\n        for (let i = 0; i < numberOfClouds; i++) {\n          const x = random.int(15, 100);\n          const y = random.int(15, 100);\n          const rx = random.int(5, 9);\n          const ry = random.int(5, 9);\n          svg += '<ellipse cx=\"' + x + '\" cy=\"' + y + '\" rx=\"' + rx + '\" ry=\"' + ry + '\" fill=\"white\" filter=\"url(#cloudTexture' + hash + ')\" />';\n        }\n        svg += \"</svg>\";\n        return svg;\n      }\n    },\n    {\n      name: \"swamp\",\n      hasAtmosphere: true,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = '<svg x=\"0\" y=\"0\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\">';\n        svg += \"<defs>\";\n        svg += '<linearGradient id=\"swampLakeGradient' + hash + '\"><stop offset=\"0%\" stop-color=\"rgb(17,109,128)\" /><stop offset=\"100%\" stop-color=\"rgb(7,99,118)\" /></linearGradient>';\n        svg += '<filter id=\"swampTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.05\" numOctaves=\"2\" result=\"turbulence\"/><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"15\" xChannelSelector=\"R\" yChannelSelector=\"G\" /></filter>';\n        svg += '<filter id=\"cloudTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.2\" numOctaves=\"2\" result=\"turbulence\" /><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"30\" xChannelSelector=\"R\" yChannelSelector=\"G\" /><feGaussianBlur stdDeviation=\"0.1\" /></filter>';\n        svg += \"</defs>\";\n        svg += '<rect x=\"0\" y=\"0\" width=\"256\" height=\"256\" fill=\"rgb(8,94,40)\" />';\n        const numberOfSplotches = random.int(6, 14);\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(-10, 20);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"rgb(' + (10 + amount) + \", \" + (96 + amount) + \", \" + (42 + amount) + ')\" filter=\"url(#swampTexture' + hash + ')\" />';\n        }\n        const numberOfOceans = random.int(4, 7);\n        for (let i = 0; i < numberOfOceans; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(5, 10);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"url(#swampLakeGradient' + hash + ')\" filter=\"url(#swampTexture' + hash + ')\" />';\n        }\n        const numberOfClouds = random.int(40, 60);\n        for (let i = 0; i < numberOfClouds; i++) {\n          const x = random.int(15, 100);\n          const y = random.int(15, 100);\n          const rx = random.int(5, 9);\n          const ry = random.int(5, 9);\n          svg += '<ellipse cx=\"' + x + '\" cy=\"' + y + '\" rx=\"' + rx + '\" ry=\"' + ry + '\" fill=\"white\" filter=\"url(#cloudTexture' + hash + ')\" />';\n        }\n        svg += \"</svg>\";\n        return svg;\n      }\n    },\n    {\n      name: \"volcanic\",\n      hasAtmosphere: true,\n      atmosphereColor: \"rgb(224,153,47)\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = '<svg x=\"0\" y=\"0\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\">';\n        svg += \"<defs>\";\n        svg += '<radialGradient id=\"volcanicCrater' + hash + '\" cx=\"0.6\" cy=\"0.6\" fx=\"0.4\" fy=\"0.4\"><stop offset=\"0%\" stop-color=\"rgb(67,50,45)\" /><stop offset=\"5%\" stop-color=\"rgb(57,40,35)\" /><stop offset=\"95%\" stop-color=\"rgb(47,30,25)\" stop-opacity=\"0\" /><stop offset=\"100%\" stop-color=\"rgb(37,20,15)\" /></radialGradient>';\n        svg += '<filter id=\"volcanicTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.05\" numOctaves=\"2\" result=\"turbulence\"/><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"15\" xChannelSelector=\"R\" yChannelSelector=\"G\" /></filter>';\n        svg += \"</defs>\";\n        svg += '<rect x=\"0\" y=\"0\" width=\"256\" height=\"256\" fill=\"rgb(57,40,35)\" />';\n        const numberOfSplotches = random.int(6, 14);\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(-10, 20);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"rgb(' + (57 + amount) + \", \" + (40 + amount) + \", \" + (35 + amount) + ')\" filter=\"url(#volcanicTexture' + hash + ')\" />';\n        }\n        const numberOfLavaLakes = random.int(26, 30);\n        for (let i = 0; i < numberOfLavaLakes; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(1, 4);\n          const amount = random.int(-10, 20);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"rgb(' + (235 + amount) + \", \" + (132 + amount) + \", \" + (5 + amount) + ')\" filter=\"url(#volcanicTexture' + hash + ')\" />';\n        }\n        svg += \"</svg>\";\n        return svg;\n      }\n    },\n    {\n      name: \"gas giant\",\n      hasAtmosphere: false,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = '<svg x=\"0\" y=\"0\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\">';\n        svg += \"<defs>\";\n        svg += '<filter id=\"bandFilter' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.05\" numOctaves=\"2\" result=\"turbulence\"/><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"15\" xChannelSelector=\"R\" yChannelSelector=\"G\" /></filter>';\n        svg += \"</defs>\";\n        const numberOfBands = random.int(10, 16);\n        let remainingHeight = 256;\n        const baseR = random.int(60, 255);\n        const baseG = random.int(60, 255);\n        const baseB = random.int(60, 255);\n        const baseColor = \"rgb(\" + baseR + \",\" + baseG + \",\" + baseB + \")\";\n        let bandsSVG = \"\";\n        for (let i = 0; i < numberOfBands; i++) {\n          const bandOffset = random.int(0, 5);\n          const bandHeight = random.int(3, 15);\n          const y = 256 - remainingHeight + bandHeight + bandOffset;\n          const r = baseR + random.int(-30, 30);\n          const g = baseG + random.int(-30, 30);\n          const b = baseB + random.int(-30, 30);\n          const bandSVG = '<rect x=\"0\" y=\"' + y + '\" width=\"256\" height=\"' + bandHeight + '\" fill=\"rgb(' + r + \", \" + g + \", \" + b + ')\" filter=\"url(#bandFilter' + hash + ')\" />';\n          bandsSVG += bandSVG;\n          remainingHeight -= bandHeight - bandOffset;\n        }\n        svg += '<rect x=\"0\" y=\"0\" width=\"256\" height=\"256\" fill=\"' + baseColor + '\" />';\n        svg += bandsSVG;\n        svg += \"</svg>\";\n        return svg;\n      }\n    },\n    {\n      name: \"toxic\",\n      hasAtmosphere: true,\n      atmosphereColor: \"rgb(171,224,45)\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = '<svg x=\"0\" y=\"0\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\">';\n        svg += \"<defs>\";\n        svg += '<linearGradient id=\"toxicLakeGradient' + hash + '\"><stop offset=\"0%\" stop-color=\"rgb(152,222,52)\" /><stop offset=\"100%\" stop-color=\"rgb(172,232,67)\" /></linearGradient>';\n        svg += '<filter id=\"toxicTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.05\" numOctaves=\"2\" result=\"turbulence\"/><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"15\" xChannelSelector=\"R\" yChannelSelector=\"G\" /></filter>';\n        svg += \"</defs>\";\n        svg += '<rect x=\"0\" y=\"0\" width=\"256\" height=\"256\" fill=\"rgb(168,155,39)\" />';\n        const numberOfSplotches = random.int(6, 14);\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(-10, 20);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"rgb(' + (168 + amount) + \", \" + (155 + amount) + \", \" + (39 + amount) + ')\" filter=\"url(#toxicTexture' + hash + ')\" />';\n        }\n        const numberOfToxicOceans = random.int(4, 7);\n        for (let i = 0; i < numberOfToxicOceans; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"url(#toxicLakeGradient' + hash + ')\" filter=\"url(#toxicTexture' + hash + ')\" />';\n        }\n        svg += \"</svg>\";\n        return svg;\n      }\n    },\n    {\n      name: \"ice\",\n      hasAtmosphere: true,\n      atmosphereColor: \"rgb(125,229,255)\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = '<svg x=\"0\" y=\"0\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\">';\n        svg += \"<defs>\";\n        svg += '<radialGradient id=\"iceCrater' + hash + '\" cx=\"0.6\" cy=\"0.6\" fx=\"0.4\" fy=\"0.4\"><stop offset=\"0%\" stop-color=\"rgb(234,255,255)\" /><stop offset=\"5%\" stop-color=\"rgb(224,250,255)\" /><stop offset=\"95%\" stop-color=\"rgb(214,240,245)\" stop-opacity=\"0\" /><stop offset=\"100%\" stop-color=\"rgb(204,230,235)\" /></radialGradient>';\n        svg += '<filter id=\"iceTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.05\" numOctaves=\"2\" result=\"turbulence\"/><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"15\" xChannelSelector=\"R\" yChannelSelector=\"G\" /></filter>';\n        svg += \"</defs>\";\n        svg += '<rect x=\"0\" y=\"0\" width=\"256\" height=\"256\" fill=\"rgb(224,250,255)\" />';\n        const numberOfSplotches = random.int(6, 14);\n        for (let i = 0; i < numberOfSplotches; i++) {\n          const x = random.int(1, 90);\n          const y = random.int(1, 90);\n          const r = random.int(10, 20);\n          const amount = random.int(0, 20);\n          svg += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + r + '\" fill=\"rgb(' + (210 + amount) + \", \" + (230 + amount) + \", \" + (235 + amount) + ')\" filter=\"url(#iceTexture' + hash + ')\" />';\n        }\n        svg += \"</svg>\";\n        return svg;\n      }\n    },\n    {\n      name: \"ocean\",\n      hasAtmosphere: true,\n      atmosphereColor: \"blue\",\n      renderSVG: function() {\n        const hash = RND.randomString(4);\n        let svg = '<svg x=\"0\" y=\"0\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\">';\n        svg += \"<defs>\";\n        svg += '<radialGradient id=\"oceanGradient' + hash + '\" cx=\"0.5\" cy=\"0.5\"><stop offset=\"0%\" stop-color=\"rgb(45,14,201)\" /><stop offset=\"100%\" stop-color=\"rgb(95,117,227)\" />';\n        svg += '<filter id=\"cloudTexture' + hash + '\"><feTurbulence type=\"turbulence\" baseFrequency=\"0.2\" numOctaves=\"2\" result=\"turbulence\" /><feDisplacementMap in2=\"turbulence\" in=\"SourceGraphic\" scale=\"30\" xChannelSelector=\"R\" yChannelSelector=\"G\" /><feGaussianBlur stdDeviation=\"0.1\" /></filter>';\n        svg += \"</defs>\";\n        svg += '<rect x=\"0\" y=\"0\" width=\"256\" height=\"256\" fill=\"url(#oceanGradient' + hash + ')\" />';\n        svg += \"</svg>\";\n        const numberOfClouds = random.int(20, 30);\n        for (let i = 0; i < numberOfClouds; i++) {\n          const x = random.int(15, 100);\n          const y = random.int(15, 100);\n          const rx = random.int(5, 9);\n          const ry = random.int(5, 9);\n          svg += '<ellipse cx=\"' + x + '\" cy=\"' + y + '\" rx=\"' + rx + '\" ry=\"' + ry + '\" fill=\"white\" filter=\"url(#cloudTexture' + hash + ')\" />';\n        }\n        return svg;\n      }\n    }\n  ];\n  for (let i = 0; i < planetTypes.length; i++) {\n    if (planetTypes[i].name == planetType) {\n      return planetTypes[i];\n    }\n  }\n  return planetTypes[0];\n}\nclass SVGStarRenderer {\n  width;\n  height;\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  render(star) {\n    let starColor = \"\";\n    if (star.color == \"red\") {\n      starColor = \"rgb(255,43,10)\";\n    } else if (star.color == \"orange\") {\n      starColor = \"rgb(255,146,20)\";\n    } else if (star.color == \"yellow\") {\n      starColor = \"rgb(255,223,18)\";\n    } else if (star.color == \"yellow-white\") {\n      starColor = \"rgb(251, 255, 168)\";\n    } else if (star.color == \"white\") {\n      starColor = \"rgb(255,255,255)\";\n    } else if (star.color == \"blue-white\") {\n      starColor = \"rgb(198, 243, 247)\";\n    } else if (star.color == \"blue\") {\n      starColor = \"rgb(59,118,255)\";\n    }\n    const midX = Math.floor(this.width / 2);\n    const midY = Math.floor(this.height / 2);\n    const min = Math.min(this.width, this.height);\n    let radius = Math.floor(min) * random.float(0.2, 0.4) / 2;\n    if (star.classification == \"main sequence\") {\n      radius = Math.floor(min) * random.float(0.6, 0.7) / 2;\n    } else if (star.classification == \"giant\") {\n      radius = Math.floor(min) * random.float(0.8, 0.9) / 2;\n    } else if (star.classification == \"supergiant\") {\n      radius = Math.floor(min) * random.float(0.9, 1.1) / 2;\n    }\n    const glowRadius = Math.floor(radius * 1.4);\n    let starfieldRenderer = new SVGStarfieldRenderer(this.width, this.height);\n    const background = starfieldRenderer.render();\n    let svg = '<svg width=\"' + this.width + '\" height=\"' + this.height + '\" viewBox=\"0 0 ' + this.width + \" \" + this.height + '\">';\n    svg += '<defs><radialGradient id=\"starglow\"><stop offset=\"60%\" stop-color=\"' + starColor + '\" stop-opacity=\"0.8\" /><stop offset=\"100%\" stop-color=\"rgb(255,255,255)\" stop-opacity=\"0\" /></radialGradient></defs>';\n    svg += '<filter id=\"starSurface\">';\n    svg += '<feFlood x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" flood-color=\"' + starColor + '\" result=\"base\" />';\n    svg += '<feTurbulence type=\"fractalNoise\" baseFrequency=\"0.05\" numOctaves=\"2\" result=\"noise\" />';\n    svg += '<feBlend in2=\"base\" in=\"noise\" mode=\"multiply\" />';\n    svg += \"</filter>\";\n    svg += `<mask id=\"starMask\"><circle cx=\"${midX}\" cy=\"${midY}\" r=\"${radius}\" fill=\"white\" /></mask>`;\n    svg += background;\n    svg += '<circle cx=\"' + midX + '\" cy=\"' + midY + '\" r=\"' + glowRadius + '\" fill=\"url(#starglow)\" />';\n    svg += '<circle cx=\"' + midX + '\" cy=\"' + midY + '\" r=\"' + radius + '\" fill=\"' + starColor + '\" filter=\"url(#starSurface)\" mask=\"url(#starMask)\" />';\n    svg += \"</svg>\";\n    return svg;\n  }\n}\nexport {\n  StarSystemGenerator as S,\n  StarSystemGeneratorConfig as a,\n  SVGStarRenderer as b,\n  SVGPlanetRenderer as c\n};\n"],"names":[],"mappings":"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"}