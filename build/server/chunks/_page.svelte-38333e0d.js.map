{"version":3,"file":"_page.svelte-38333e0d.js","sources":["../../../../src/routes/star-nation/+page.svelte","../../../../src/lib/starnations/generatorconfig.ts","../../../../src/lib/starnations/governments.ts","../../../../src/lib/starnations/generator.ts","../../../../src/lib/starnations/starnation.ts","../../../../src/lib/starnations/government.ts"],"sourcesContent":["<script lang=\"ts\">\n  import * as RND from \"@ironarachne/rng\";\n  import * as Words from \"@ironarachne/words\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n  import StarNation from \"$lib/starnations/starnation\";\n  import StarNationGenerator from \"$lib/starnations/generator\";\n  import StarNationGeneratorConfig from \"$lib/starnations/generatorconfig\";\n  import SVGPlanetRenderer from \"$lib/renderers/planets/planet-svg\";\n  import SVGStarRenderer from \"$lib/renderers/stars/star-svg\";\n\n  let config = new StarNationGeneratorConfig();\n  let gen = new StarNationGenerator(config);\n  let nation = new StarNation();\n  let seed = RND.randomString(13);\n\n  let planetRenderer = new SVGPlanetRenderer(64, 64);\n  let starRenderer = new SVGStarRenderer(64, 64);\n\n  function generate() {\n    random.use(seedrandom(seed));\n    nation = gen.generate();\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n\n  newSeed();\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/scifi.scss';\n\n  .star-system { display: flex; max-width: 600px; }\n</style>\n\n<svelte:head>\n  <title>Star Nation Generator | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"scifi main\">\n  <h1>Star Nation Generator</h1>\n\n  <p>Generate a star nation.</p>\n\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\"/>\n  </div>\n\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n\n  <h2>{ nation.name }</h2>\n\n  <p>{ nation.description }</p>\n\n  <p>Their primary goal is { nation.primaryGoal }.</p>\n\n  <p><strong>Culture:</strong> {nation.culture}</p>\n  <p><strong>Economy:</strong> {nation.economy}</p>\n  <p><strong>Military:</strong> { nation.military }</p>\n  <p><strong>Technology:</strong> { nation.technology }</p>\n\n  <h3>The { nation.systems[nation.capitalSystem].name } System</h3>\n\n  <p>{ nation.systems[nation.capitalSystem].planets[nation.capitalPlanet].name } is the { nation.capitalPlanet + 1}{ Words.getOrdinal(nation.capitalPlanet + 1) } planet in this system. It has a population of { nation.systems[nation.capitalSystem].planets[nation.capitalPlanet].populationFriendly }.</p>\n\n  <div class=\"star-system\">\n  {@html starRenderer.render(nation.systems[nation.capitalSystem].stars[0])}\n  {#each nation.systems[nation.capitalSystem].planets as planet}\n  {@html planetRenderer.render(planet)}\n  {/each}\n  </div>\n</section>\n","import * as MUN from \"@ironarachne/made-up-names\";\nimport type StarNationGovernment from \"./government.js\";\nimport * as Governments from \"./governments.js\";\n\nexport default class StarNationGeneratorConfig {\n  minSystems: number;\n  maxSystems: number;\n  governmentOptions: StarNationGovernment[];\n  nameGenerator: MUN.Generator;\n\n  constructor() {\n    this.minSystems = -1;\n    this.maxSystems = -1;\n    this.governmentOptions = Governments.all();\n    this.nameGenerator = new MUN.StarNationNameGenerator();\n  }\n}\n","import { GenericNameGenerator } from \"@ironarachne/made-up-names\";\nimport StarNationGovernment from \"./government.js\";\n\nexport function all(): StarNationGovernment[] {\n  return [getEmpire(), getMonarchy(), getRepublic(), getTheocracy()];\n}\n\nfunction getEmpire(): StarNationGovernment {\n  let gov = new StarNationGovernment();\n  gov.name = \"empire\";\n  gov.minSystems = 10;\n  gov.maxSystems = 100;\n\n  let nameGen = new GenericNameGenerator();\n  nameGen.patterns = [\"EMPIRE OF\", \"GRAND EMPIRE OF\", \"STAR EMPIRE OF\", \"STELLAR EMPIRE OF\"];\n  gov.nameGenerator = nameGen;\n\n  return gov;\n}\n\nfunction getMonarchy(): StarNationGovernment {\n  let gov = new StarNationGovernment();\n  gov.name = \"monarchy\";\n  gov.minSystems = 1;\n  gov.maxSystems = 30;\n\n  let nameGen = new GenericNameGenerator();\n  nameGen.patterns = [\n    \"KINGDOM OF\",\n    \"GRAND KINGDOM OF\",\n    \"STAR KINGDOM OF\",\n    \"STELLAR KINGDOM OF\",\n    \"MONARCHY OF\",\n    \"GRAND MONARCHY OF\",\n    \"STAR MONARCHY OF\",\n    \"STELLAR MONARCHY OF\",\n  ];\n  gov.nameGenerator = nameGen;\n\n  return gov;\n}\n\nfunction getRepublic(): StarNationGovernment {\n  let gov = new StarNationGovernment();\n  gov.name = \"republic\";\n  gov.minSystems = 1;\n  gov.maxSystems = 100;\n\n  let nameGen = new GenericNameGenerator();\n  nameGen.patterns = [\n    \"REPUBLIC OF\",\n    \"STAR REPUBLIC OF\",\n    \"STELLAR REPUBLIC OF\",\n    \"UNITED REPUBLIC OF\",\n    \"UNITED FEDERATION OF\",\n    \"GRAND REPUBLIC OF\",\n  ];\n  gov.nameGenerator = nameGen;\n\n  return gov;\n}\n\nfunction getTheocracy(): StarNationGovernment {\n  let gov = new StarNationGovernment();\n  gov.name = \"theocracy\";\n  gov.minSystems = 1;\n  gov.maxSystems = 10;\n\n  let nameGen = new GenericNameGenerator();\n  nameGen.patterns = [\n    \"HOLY EMPIRE OF\",\n    \"GRAND HOLY DOMINION OF\",\n    \"HOLY KINGDOM OF\",\n    \"HOLY MONARCHY OF\",\n    \"BLESSED DOMINION OF\",\n  ];\n  gov.nameGenerator = nameGen;\n\n  return gov;\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport StarSystemGenerator from \"../starsystem/generator.js\";\nimport StarSystemGeneratorConfig from \"../starsystem/generatorconfig.js\";\nimport type StarNationGeneratorConfig from \"./generatorconfig.js\";\nimport StarNation from \"./starnation.js\";\n\nexport default class StarNationGenerator {\n  config: StarNationGeneratorConfig;\n\n  constructor(config: StarNationGeneratorConfig) {\n    this.config = config;\n  }\n\n  generate(): StarNation {\n    let nation = new StarNation();\n\n    nation.government = RND.item(this.config.governmentOptions);\n\n    let name = this.config.nameGenerator.generate(1)[0];\n\n    nation.adjective = name + RND.item([\"n\", \"i\", \"ish\"]);\n    nation.name = `the ${nation.government.nameGenerator.generate(1)[0]} ${name}`;\n\n    nation.description = `${Words.title(nation.name)} is ${\n      Words.article(nation.government.name)\n    } ${nation.government.name}.`;\n\n    let minSystems = Math.max(this.config.minSystems, nation.government.minSystems);\n    let maxSystems = Math.max(this.config.maxSystems, nation.government.maxSystems);\n\n    let numberOfSystems = random.int(minSystems, maxSystems);\n\n    let systemGenConfig = new StarSystemGeneratorConfig();\n    let systemGen = new StarSystemGenerator(systemGenConfig);\n\n    let population = 0;\n    let inhabitedPlanets = 0;\n    let possibleCapitals = [];\n\n    for (let i = 0; i < numberOfSystems; i++) {\n      let system = systemGen.generate();\n      for (let j = 0; j < system.planets.length - 1; j++) {\n        if (system.planets[j].is_inhabited) {\n          population += system.planets[j].population;\n          inhabitedPlanets++;\n          possibleCapitals.push([i, j]);\n        }\n      }\n      nation.systems.push(system);\n    }\n\n    let capital = RND.item(possibleCapitals);\n\n    nation.capitalSystem = capital[0];\n    nation.capitalPlanet = capital[1];\n\n    nation.primaryGoal = RND.item([\n      \"conquest\",\n      \"to spread their beliefs\",\n      \"to share their knowledge\",\n      \"to always be learning\",\n      \"to always make a profit\",\n      \"to discover new worlds and new people\",\n      \"to bring order\",\n      \"to unite the universe\",\n      \"to unite the universe under their rule\",\n      \"to bring order to the universe\",\n      \"to ever be increasing their knowledge\",\n      \"to learn all the secrets of the universe\",\n    ]);\n\n    nation.technology = RND.item([\n      \"highly advanced\",\n      \"advanced\",\n      \"comparable\",\n      \"relatively primitive\",\n    ]);\n\n    nation.military = RND.item([\n      \"well-funded and large\",\n      \"poorly funded but large\",\n      \"poorly funded and small\",\n      \"aggressive\",\n      \"belligerent\",\n      \"cautious\",\n      \"orderly\",\n      \"well-disciplined\",\n    ]);\n\n    nation.culture = RND.item([\n      \"fragmented\",\n      \"homogeneous\",\n      \"melting pot\",\n      \"controlled\",\n      \"decaying\",\n    ]);\n\n    nation.economy = RND.item([\n      \"strong\",\n      \"thriving\",\n      \"collapsing\",\n      \"corrupt\",\n      \"growing\",\n      \"shrinking\",\n    ]);\n\n    nation.description += ` Its capital is ${\n      nation.systems[nation.capitalSystem].planets[nation.capitalPlanet].name\n    } in the ${\n      nation.systems[nation.capitalSystem].name\n    } system. There are ${nation.systems.length} systems under its sway, with ${inhabitedPlanets} inhabited worlds and a total population of ${\n      getFriendlyPopulation(\n        population,\n      )\n    }.`;\n\n    return nation;\n  }\n}\n\nfunction getFriendlyPopulation(pop: number): string {\n  const formatter = new Intl.NumberFormat();\n\n  if (pop < 1000000.0) {\n    return formatter.format(Math.floor(pop / 1000.0)) + \" thousand\";\n  }\n\n  if (pop < 1000000000.0) {\n    return formatter.format(pop / 1000000.0) + \" million\";\n  }\n\n  if (pop < 1000000000000.0) {\n    return formatter.format(pop / 1000000000.0) + \" billion\";\n  }\n\n  return formatter.format(pop / 1000000000000.0) + \" trillion\";\n}\n","import StarSystem from \"../starsystem/starsystem.js\";\nimport StarNationGovernment from \"./government.js\";\n\nexport default class StarNation {\n  name: string;\n  adjective: string;\n  description: string;\n  government: StarNationGovernment;\n  capitalSystem: number; // the index of the systems array for the system\n  capitalPlanet: number; // the index of the planet in the planets array for the system\n  systems: StarSystem[];\n  primaryGoal: string;\n  technology: string;\n  military: string;\n  culture: string;\n  economy: string;\n\n  constructor() {\n    this.systems = [];\n  }\n}\n","import type { Generator as NameGenerator } from \"@ironarachne/made-up-names\";\n\nexport default class StarNationGovernment {\n  name: string;\n  minSystems: number;\n  maxSystems: number;\n  nameGenerator: NameGenerator;\n\n  constructor() {\n    this.name = \"\";\n    this.minSystems = 0;\n    this.maxSystems = 1;\n    this.nameGenerator = {} as NameGenerator;\n  }\n}\n"],"names":["Governments.all"],"mappings":"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"}