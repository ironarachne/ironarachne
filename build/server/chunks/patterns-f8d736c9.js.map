{"version":3,"file":"patterns-f8d736c9.js","sources":["../../../../src/lib/equipment/patterns/patterns.ts","../../../../src/lib/equipment/patterns/weapons.ts","../../../../src/lib/equipment/patterns/weapons/sword.ts","../../../../src/lib/equipment/patterns/weapons/staff.ts","../../../../src/lib/equipment/patterns/weapons/spear.ts","../../../../src/lib/equipment/patterns/weapons/mace.ts","../../../../src/lib/equipment/patterns/weapons/knife.ts","../../../../src/lib/equipment/patterns/weapons/club.ts","../../../../src/lib/equipment/patterns/weapons/bow.ts","../../../../src/lib/equipment/weapons/ranged.ts","../../../../src/lib/equipment/patterns/weapons/axe.ts","../../../../src/lib/equipment/patterns/clothing.ts","../../../../src/lib/equipment/patterns/clothing/top.ts","../../../../src/lib/equipment/patterns/clothing/robe.ts","../../../../src/lib/equipment/patterns/clothing/pants.ts","../../../../src/lib/equipment/patterns/clothing/dress.ts","../../../../src/lib/equipment/patterns/clothing/belt.ts","../../../../src/lib/equipment/clothing/clothing.ts","../../../../src/lib/equipment/patterns/armor.ts","../../../../src/lib/equipment/patterns/armor/shield.ts","../../../../src/lib/equipment/patterns/armor/primitiveshield.ts","../../../../src/lib/equipment/patterns/armor/leather.ts","../../../../src/lib/equipment/patterns/armor/helmet.ts","../../../../src/lib/equipment/patterns/armor/chainmail.ts","../../../../src/lib/equipment/patterns/armor/breastplate.ts","../../../../src/lib/equipment/armor/armor.ts","../../../../src/lib/equipment/weapons/melee.ts","../../../../src/lib/equipment/components/components.ts","../../../../src/lib/equipment/components/wood.ts","../../../../src/lib/equipment/components/metals.ts","../../../../src/lib/equipment/components/fabrics.ts","../../../../src/lib/equipment/components/animal.ts","../../../../src/lib/equipment/components/component.ts"],"sourcesContent":["import * as ArmorPattern from \"./armor.js\";\nimport * as ClothingPattern from \"./clothing.js\";\nimport type Pattern from \"./pattern.js\";\nimport * as WeaponPattern from \"./weapons.js\";\n\nexport function all(): Pattern[] {\n  let result = [];\n\n  result.push(...ArmorPattern.all());\n  result.push(...ClothingPattern.all());\n  result.push(...WeaponPattern.all());\n\n  return result;\n}\n\nexport function byName(name: string): Pattern {\n  let options = all();\n\n  for (const option of options) {\n    if (option.name == name) {\n      return option;\n    }\n  }\n\n  throw new Error(`Couldn't find pattern with name ${name}`);\n}\n\nexport function forCategory(category: string): Pattern[] {\n  let options = all();\n\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].tags.includes(category)) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n","import type Pattern from \"./pattern.js\";\nimport AxePattern from \"./weapons/axe.js\";\nimport BowPattern from \"./weapons/bow.js\";\nimport ClubPattern from \"./weapons/club.js\";\nimport KnifePattern from \"./weapons/knife.js\";\nimport MacePattern from \"./weapons/mace.js\";\nimport SpearPattern from \"./weapons/spear.js\";\nimport StaffPattern from \"./weapons/staff.js\";\nimport SwordPattern from \"./weapons/sword.js\";\n\nexport function all(): Pattern[] {\n  return [\n    new AxePattern(\"battleaxe\", 1, \"1d8\", 1000),\n    new AxePattern(\"greataxe\", 1, \"1d12\", 3000),\n    new AxePattern(\"handaxe\", 1, \"1d6\", 500),\n    new BowPattern(\"longbow\", 2, \"2d8\", 5000),\n    new BowPattern(\"shortbow\", 2, \"1d6\", 2500),\n    new ClubPattern(\"club\", 1, \"1d4\", 10),\n    new ClubPattern(\"greatclub\", 2, \"1d8\", 20),\n    new KnifePattern(\"dagger\", 1, \"1d4\", 200),\n    new KnifePattern(\"knife\", 1, \"1d4\", 200),\n    new KnifePattern(\"long knife\", 1, \"1d4\", 200),\n    new MacePattern(\"heavy mace\", 2, \"1d8\", 200),\n    new MacePattern(\"mace\", 1, \"1d6\", 100),\n    new MacePattern(\"morningstar\", 1, \"1d6\", 100),\n    new SpearPattern(\"spear\", 2, \"1d6\", 100),\n    new StaffPattern(\"quarterstaff\", 2, \"1d6\", 20),\n    new StaffPattern(\"staff\", 2, \"1d6\", 20),\n    new SwordPattern(\"great sword\", 2, \"2d6\", 5000),\n    new SwordPattern(\"long sword\", 1, \"1d8\", 1500),\n    new SwordPattern(\"rapier\", 1, \"1d8\", 2500),\n    new SwordPattern(\"scimitar\", 1, \"1d6\", 2500),\n    new SwordPattern(\"short sword\", 1, \"1d6\", 1000),\n  ];\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport MeleeWeapon from \"../../weapons/melee.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class SwordPattern implements Pattern {\n  name: string;\n  tags: string[];\n  hands: number;\n  baseValue: number;\n  damage: string;\n\n  constructor(name: string, hands: number, damage: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"sword\", \"melee\", \"martial weapon\", \"weapon\"];\n    this.hands = hands;\n    this.damage = damage;\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): MeleeWeapon {\n    let blade = RND.item(Components.withCategory(\"metal\", componentOptions));\n    let hilt = RND.item(Components.withCategory(\"metal\", componentOptions));\n    let handle = RND.item(Components.withCategory(\"wood\", componentOptions));\n\n    let value = this.baseValue + blade.value * 2 + hilt.value + handle.value;\n\n    let cosmeticBlade = RND.item([\n      \"serrated\",\n      \"recently sharpened\",\n      \"curved\",\n      \"straight\",\n      \"single-edged\",\n      \"wide\",\n      \"grooved\",\n    ]);\n\n    let cosmeticHandle = RND.item([\"carved\", \"padded\", \"embossed\"]);\n\n    let cosmeticHilt = RND.item([\"gem-studded\", \"spiked\", \"curved\", \"inlaid\"]);\n\n    if (quality < 2) {\n      cosmeticBlade = RND.item([\"simple\", \"straight\", \"worn\"]);\n\n      cosmeticHandle = RND.item([\"rough\", \"worn\"]);\n\n      cosmeticHilt = RND.item([\"simple\", \"unadorned\", \"straight\"]);\n    }\n\n    let description = `${Words.article(this.name)} ${this.name} with `;\n\n    description += RND.item([\n      `${Words.article(blade.descriptor)} ${blade.descriptor} blade,`,\n      `${Words.article(cosmeticBlade)} ${cosmeticBlade} ${blade.descriptor} blade,`,\n    ]);\n\n    description += RND.item([\n      ` ${hilt.descriptor} hilt,`,\n      ` ${cosmeticHilt} ${hilt.descriptor} hilt,`,\n    ]);\n\n    description += RND.item([\n      ` and ${handle.descriptor} handle`,\n      ` and ${cosmeticHandle} ${handle.descriptor} handle`,\n    ]);\n\n    if (quality > 1 && random.int(1, 100) > 70) {\n      description += RND.item([\n        `, with a `\n        + RND.item([\"yellow\", \"blue\", \"red\", \"purple\", \"green\", \"grey\", \"white\", \"black\"])\n        + ` ribbon `\n        + RND.item([\"wrapped around it\", \"trailing from it\", \"tied to it\"]),\n        `, with a ${\n          RND.item([\n            \"leather thong\",\n            RND.item([\"gold\", \"brass\", \"silver\", \"iron\"]) + \" chain\",\n          ])\n        } attached to the pommel`,\n        `, exquisitely crafted`,\n        ` inlaid with ${RND.item([\"gold\", \"silver\", \"copper\", \"brass\"])}`,\n      ]);\n    }\n\n    let name = `${blade.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"sword\", \"melee\", \"martial weapon\", \"bladed weapon\", \"weapon\"];\n\n    return new MeleeWeapon(name, description, this.damage, this.hands, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport MeleeWeapon from \"../../weapons/melee.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class StaffPattern implements Pattern {\n  name: string;\n  tags: string[];\n  hands: number;\n  baseValue: number;\n  damage: string;\n\n  constructor(name: string, hands: number, damage: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"staff\", \"melee\", \"simple weapon\", \"weapon\"];\n    this.hands = hands;\n    this.damage = damage;\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): MeleeWeapon {\n    let body = RND.item(Components.withCategory(\"wood\", componentOptions));\n\n    let cosmeticBody = RND.item([\"carved\", \"engraved\", \"stained\", \"painted\"]);\n\n    let value = this.baseValue + body.value;\n\n    let description = `${Words.article(this.name)} ${this.name} with `;\n\n    description += RND.item([\n      `${Words.article(body.descriptor)} ${body.descriptor} body`,\n      `${Words.article(cosmeticBody)} ${cosmeticBody} ${body.descriptor} body`,\n    ]);\n\n    if (quality > 1 && random.int(1, 100) > 70) {\n      description += RND.item([\n        ` topped with a ${\n          RND.item([\n            \"crystal globe\",\n            \"raw crystal\",\n            \"rough crystal\",\n            \"polished crystal\",\n          ])\n        }`,\n        ` capped on top and bottom with ${\n          RND.item([\n            \"steel\",\n            \"gold\",\n            \"silver\",\n            \"bronze\",\n            \"brass\",\n            \"iron\",\n            \"tin\",\n          ])\n        }`,\n      ]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"staff\", \"melee\", \"simple weapon\", \"weapon\"];\n\n    return new MeleeWeapon(name, description, this.damage, this.hands, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport MeleeWeapon from \"../../weapons/melee.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class SpearPattern implements Pattern {\n  name: string;\n  tags: string[];\n  hands: number;\n  baseValue: number;\n  damage: string;\n\n  constructor(name: string, hands: number, damage: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"spear\", \"melee\", \"simple weapon\", \"weapon\"];\n    this.hands = hands;\n    this.damage = damage;\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): MeleeWeapon {\n    let blade = RND.item(Components.withCategory(\"metal\", componentOptions));\n    let body = RND.item(Components.withCategory(\"wood\", componentOptions));\n\n    let value = this.baseValue + blade.value + body.value;\n\n    let cosmeticBlade = RND.item([\n      \"serrated\",\n      \"recently sharpened\",\n      \"curved\",\n      \"straight\",\n      \"single-edged\",\n      \"wide\",\n      \"grooved\",\n    ]);\n\n    let cosmeticBody = RND.item([\"carved\", \"padded\", \"embossed\"]);\n\n    if (value < 2000) {\n      cosmeticBlade = RND.item([\"simple\", \"straight\", \"worn\"]);\n\n      cosmeticBody = RND.item([\"rough\", \"worn\"]);\n    }\n\n    let description = `${Words.article(this.name)} ${this.name} with `;\n\n    description += RND.item([\n      `${Words.article(blade.descriptor)} ${blade.descriptor} blade`,\n      `${Words.article(cosmeticBlade)} ${cosmeticBlade} ${blade.descriptor} blade`,\n    ]);\n\n    description += RND.item([\n      ` and ${body.descriptor} body`,\n      ` and ${cosmeticBody} ${body.descriptor} body`,\n    ]);\n\n    if (quality > 1 && random.int(1, 100) > 70) {\n      description += RND.item([\n        `, with a `\n        + RND.item([\"yellow\", \"blue\", \"red\", \"purple\", \"green\", \"grey\", \"white\", \"black\"])\n        + ` ribbon `\n        + RND.item([\"wrapped around it\", \"trailing from it\", \"tied to it\"]),\n        `, exquisitely crafted`,\n        ` inlaid with ${RND.item([\"gold\", \"silver\", \"copper\", \"brass\"])}`,\n      ]);\n    }\n\n    let name = `${blade.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"spear\", \"melee\", \"simple weapon\", \"bladed weapon\", \"weapon\"];\n\n    return new MeleeWeapon(name, description, this.damage, this.hands, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport MeleeWeapon from \"../../weapons/melee.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class MacePattern implements Pattern {\n  name: string;\n  tags: string[];\n  hands: number;\n  baseValue: number;\n  damage: string;\n\n  constructor(name: string, hands: number, damage: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"mace\", \"melee\", \"simple weapon\", \"weapon\"];\n    this.hands = hands;\n    this.damage = damage;\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): MeleeWeapon {\n    let head = RND.item(Components.withCategory(\"metal\", componentOptions));\n    let haft = RND.item(Components.withCategory(\"wood\", componentOptions));\n    let handle = RND.item(Components.withCategory(\"leather\", componentOptions));\n\n    let value = this.baseValue + head.value + haft.value + handle.value;\n\n    let cosmeticHead = RND.item([\"carved\", \"spiked\", \"heavy\", \"large\", \"dense\"]);\n\n    let cosmeticHaft = RND.item([\"straight\", \"short\", \"long\"]);\n\n    let cosmeticHandle = RND.item([\"short\", \"long\", \"comfortable\", \"broad\"]);\n\n    let description = `${Words.article(this.name)} ${this.name} with `;\n\n    description += RND.item([\n      `${Words.article(head.descriptor)} ${head.descriptor} head,`,\n      `${Words.article(cosmeticHead)} ${cosmeticHead} ${head.descriptor} head,`,\n    ]);\n\n    description += RND.item([\n      ` ${Words.article(haft.descriptor)} ${haft.descriptor} haft,`,\n      ` ${Words.article(cosmeticHaft)} ${cosmeticHaft} ${haft.descriptor} haft,`,\n    ]);\n\n    description += RND.item([\n      ` and ${Words.article(handle.descriptor)} ${handle.descriptor} wrapped handle`,\n      ` and ${Words.article(cosmeticHandle)} ${cosmeticHandle} ${handle.descriptor} wrapped handle`,\n    ]);\n\n    let name = `${head.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"mace\", \"melee\", \"simple weapon\", \"weapon\"];\n\n    return new MeleeWeapon(name, description, this.damage, this.hands, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport MeleeWeapon from \"../../weapons/melee.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class KnifePattern implements Pattern {\n  name: string;\n  tags: string[];\n  hands: number;\n  baseValue: number;\n  damage: string;\n\n  constructor(name: string, hands: number, damage: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"knife\", \"melee\", \"simple weapon\", \"weapon\"];\n    this.hands = hands;\n    this.damage = damage;\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): MeleeWeapon {\n    let blade = RND.item(Components.withCategory(\"hard metal\", componentOptions));\n    let hilt = RND.item(Components.withCategory(\"hard metal\", componentOptions));\n    let handle = RND.item(Components.withCategory(\"wood\", componentOptions));\n\n    let value = this.baseValue + blade.value + hilt.value + handle.value;\n\n    let cosmeticBlade = RND.item([\n      \"serrated\",\n      \"recently sharpened\",\n      \"curved\",\n      \"straight\",\n      \"single-edged\",\n      \"wide\",\n      \"grooved\",\n    ]);\n\n    let cosmeticHandle = RND.item([\"carved\", \"padded\", \"embossed\"]);\n\n    let cosmeticHilt = RND.item([\"gem-studded\", \"spiked\", \"curved\", \"inlaid\"]);\n\n    if (value < 2000) {\n      cosmeticBlade = RND.item([\"simple\", \"straight\", \"worn\"]);\n\n      cosmeticHandle = RND.item([\"rough\", \"worn\"]);\n\n      cosmeticHilt = RND.item([\"simple\", \"unadorned\", \"straight\"]);\n    }\n\n    let description = `${Words.article(this.name)} ${this.name} with `;\n\n    description += RND.item([\n      `${Words.article(blade.descriptor)} ${blade.descriptor} blade,`,\n      `${Words.article(cosmeticBlade)} ${cosmeticBlade} ${blade.descriptor} blade,`,\n    ]);\n\n    description += RND.item([\n      ` ${hilt.descriptor} hilt,`,\n      ` ${cosmeticHilt} ${hilt.descriptor} hilt,`,\n    ]);\n\n    description += RND.item([\n      ` and ${handle.descriptor} handle`,\n      ` and ${cosmeticHandle} ${handle.descriptor} handle`,\n    ]);\n\n    if (quality > 1 && random.int(1, 100) > 70) {\n      description += RND.item([\n        `, with a `\n        + RND.item([\"yellow\", \"blue\", \"red\", \"purple\", \"green\", \"grey\", \"white\", \"black\"])\n        + ` ribbon `\n        + RND.item([\"wrapped around it\", \"trailing from it\", \"tied to it\"]),\n        `, with a ${\n          RND.item([\n            \"leather thong\",\n            RND.item([\"gold\", \"brass\", \"silver\", \"iron\"]) + \" chain\",\n          ])\n        } attached to the pommel`,\n        `, exquisitely crafted`,\n        ` inlaid with ${RND.item([\"gold\", \"silver\", \"copper\", \"brass\"])}`,\n      ]);\n    }\n\n    let name = `${blade.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"knife\", \"melee\", \"simple weapon\", \"bladed weapon\", \"weapon\"];\n\n    return new MeleeWeapon(name, description, this.damage, this.hands, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport MeleeWeapon from \"../../weapons/melee.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class ClubPattern implements Pattern {\n  name: string;\n  tags: string[];\n  hands: number;\n  baseValue: number;\n  damage: string;\n\n  constructor(name: string, hands: number, damage: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"club\", \"melee\", \"simple weapon\", \"weapon\"];\n    this.hands = hands;\n    this.damage = damage;\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): MeleeWeapon {\n    let body = RND.item(Components.withCategory(\"wood\", componentOptions));\n    let handle = RND.item(Components.withCategory(\"leather\", componentOptions));\n\n    let cosmeticBody = RND.item([\"carved\", \"spiked\", \"heavy\", \"bulbous\", \"square\"]);\n\n    let cosmeticHandle = RND.item([\"short\", \"long\", \"comfortable\", \"broad\"]);\n\n    let description = `${Words.article(this.name)} ${this.name} with `;\n\n    description += RND.item([\n      `${Words.article(body.descriptor)} ${body.descriptor} body`,\n      `${Words.article(cosmeticBody)} ${cosmeticBody} ${body.descriptor} body`,\n    ]);\n\n    description += RND.item([\n      ` and ${Words.article(handle.descriptor)} ${handle.descriptor} wrapped handle`,\n      ` and ${Words.article(cosmeticHandle)} ${cosmeticHandle} ${handle.descriptor} wrapped handle`,\n    ]);\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let value = this.baseValue + body.value + handle.value;\n\n    let tags = [name, this.name, \"club\", \"melee\", \"simple weapon\", \"weapon\"];\n\n    return new MeleeWeapon(name, description, this.damage, this.hands, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport MeleeWeapon from \"../../weapons/melee.js\";\nimport RangedWeapon from \"../../weapons/ranged.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class BowPattern implements Pattern {\n  name: string;\n  tags: string[];\n  hands: number;\n  baseValue: number;\n  damage: string;\n\n  constructor(name: string, hands: number, damage: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"bow\", \"ranged\", \"martial weapon\", \"weapon\"];\n    this.hands = hands;\n    this.damage = damage;\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): MeleeWeapon {\n    let body = RND.item(Components.withCategory(\"soft wood\", componentOptions));\n    let handle = RND.item(Components.withCategory(\"leather\", componentOptions));\n\n    let cosmeticBody = RND.item([\"carved\", \"heavy\", \"light\", \"simple\"]);\n\n    let cosmeticHandle = RND.item([\"short\", \"long\", \"comfortable\"]);\n\n    let description = `${Words.article(this.name)} ${this.name} with `;\n\n    description += RND.item([\n      `${Words.article(body.descriptor)} ${body.descriptor} body`,\n      `${Words.article(cosmeticBody)} ${cosmeticBody} ${body.descriptor} body`,\n    ]);\n\n    description += RND.item([\n      ` and ${Words.article(handle.descriptor)} ${handle.descriptor} wrapped grip`,\n      ` and ${Words.article(cosmeticHandle)} ${cosmeticHandle} ${handle.descriptor} wrapped grip`,\n    ]);\n\n    if (quality > 1) {\n      description += RND.item([\" and gilt highlights\"]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let value = this.baseValue + body.value + handle.value;\n\n    let tags = [name, this.name, \"bow\", \"ranged\", \"martial weapon\", \"weapon\"];\n\n    return new RangedWeapon(\n      name,\n      description,\n      this.damage,\n      80,\n      320,\n      \"arrow\",\n      this.hands,\n      value,\n      quality,\n      tags,\n    );\n  }\n}\n","import type Weapon from \"./weapon.js\";\n\nexport default class RangedWeapon implements Weapon {\n  name: string;\n  description: string;\n  damage: string;\n  shortRange: number;\n  longRange: number;\n  ammunitionType: string;\n  hands: number;\n  value: number;\n  quality: number;\n  tags: string[];\n\n  constructor(\n    name: string,\n    description: string,\n    damage: string,\n    shortRange: number,\n    longRange: number,\n    ammunitionType: string,\n    hands: number,\n    value: number,\n    quality: number,\n    tags: string[],\n  ) {\n    this.name = name;\n    this.description = description;\n    this.damage = damage;\n    this.shortRange = shortRange;\n    this.longRange = longRange;\n    this.ammunitionType = ammunitionType;\n    this.hands = hands;\n    this.value = value;\n    this.quality = quality;\n    this.tags = tags;\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport MeleeWeapon from \"../../weapons/melee.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class AxePattern implements Pattern {\n  name: string;\n  tags: string[];\n  hands: number;\n  baseValue: number;\n  damage: string;\n\n  constructor(name: string, hands: number, damage: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"axe\", \"melee\", \"simple weapon\", \"weapon\"];\n    this.hands = hands;\n    this.damage = damage;\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): MeleeWeapon {\n    let blade = RND.item(Components.withCategory(\"hard metal\", componentOptions));\n    let handle = RND.item(Components.withCategory(\"wood\", componentOptions));\n\n    let value = this.baseValue + blade.value * 2 + handle.value;\n\n    let cosmeticBlade = RND.item([\n      \"serrated\",\n      \"recently sharpened\",\n      \"curved\",\n      \"straight\",\n      \"broad\",\n      \"wide\",\n      \"wickedly curved\",\n    ]);\n\n    let cosmeticHandle = RND.item([\"carved\", \"padded\", \"embossed\", \"sanded\"]);\n\n    if (value < 1000) {\n      cosmeticBlade = RND.item([\"simple\", \"straight\", \"worn\"]);\n\n      cosmeticHandle = RND.item([\"rough\", \"worn\"]);\n    }\n\n    let description = `${Words.article(this.name)} ${this.name} with `;\n\n    description += RND.item([\n      `${Words.article(blade.descriptor)} ${blade.descriptor} blade`,\n      `${Words.article(cosmeticBlade)} ${cosmeticBlade} ${blade.descriptor} blade`,\n    ]);\n\n    description += RND.item([\n      ` and ${handle.descriptor} handle`,\n      ` and ${cosmeticHandle} ${handle.descriptor} handle`,\n    ]);\n\n    if (quality > 1 && random.int(1, 100) > 70) {\n      description += RND.item([\n        `, with a `\n        + RND.item([\"yellow\", \"blue\", \"red\", \"purple\", \"green\", \"grey\", \"white\", \"black\"])\n        + ` ribbon `\n        + RND.item([\"wrapped around it\", \"trailing from it\", \"tied to it\"]),\n        `, exquisitely crafted`,\n        ` inlaid with ${RND.item([\"gold\", \"silver\", \"copper\", \"brass\"])}`,\n      ]);\n    }\n\n    let name = `${blade.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"axe\", \"melee\", \"simple weapon\", \"bladed weapon\", \"weapon\"];\n\n    return new MeleeWeapon(name, description, this.damage, this.hands, value, quality, tags);\n  }\n}\n","import BeltPattern from \"./clothing/belt.js\";\nimport DressPattern from \"./clothing/dress.js\";\nimport PantsPattern from \"./clothing/pants.js\";\nimport RobePattern from \"./clothing/robe.js\";\nimport TopPattern from \"./clothing/top.js\";\nimport type Pattern from \"./pattern.js\";\n\nexport function all(): Pattern[] {\n  return [\n    new BeltPattern(\"belt\", 1),\n    new DressPattern(\"short dress\", 2),\n    new DressPattern(\"long dress\", 2),\n    new DressPattern(\"wedding dress\", 10),\n    new DressPattern(\"tight dress\", 2),\n    new DressPattern(\"loose dress\", 3),\n    new PantsPattern(\"trews\", 1),\n    new PantsPattern(\"pants\", 1),\n    new PantsPattern(\"brais\", 1),\n    new PantsPattern(\"breeches\", 1),\n    new PantsPattern(\"trousers\", 1),\n    new RobePattern(\"robe\", 2),\n    new TopPattern(\"shirt\", 1),\n    new TopPattern(\"short tunic\", 2),\n    new TopPattern(\"long tunic\", 2),\n  ];\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Clothing from \"../../clothing/clothing.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class TopPattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"top\", \"clothing\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Clothing {\n    let body = RND.item(Components.withCategory(\"fabric\", componentOptions));\n    let hardware = RND.item(Components.withCategory(\"soft metal\", componentOptions));\n\n    let value = this.baseValue + body.value + hardware.value;\n\n    let description = `${Words.article(this.name)} ${this.name} `;\n\n    description += RND.item([`made of ${body.descriptor} with `, \"with \"]);\n\n    let sleeves = RND.item([\"short\", \"long\", \"wide\", \"narrow\", \"bunched\", \"volumnous\"]) + \" sleeves\";\n    let lacing = \"lacing \" + RND.item([\"down the middle\", \"at the top\", \"halfway down\"]);\n    let collar = `a ${RND.item([\"wide\", \"tight\", \"open\"])} collar`;\n    let closures = RND.item([\"dull\", \"embossed\", \"rough\", \"shiny\", \"round\", \"square\"])\n      + ` ${hardware.descriptor} `\n      + RND.item([\"buttons\", \"clasps\"]);\n\n    description += RND.item([sleeves, collar, lacing, closures]);\n\n    if (quality > 1 && random.int(1, 100) >= 70) {\n      description += RND.item([\n        \" that is artfully embroidered\",\n        ` that is embroidered with ${RND.item([\"simple\", \"complex\", \"ornate\"])} patterns`,\n        \" that is gusseted\",\n      ]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"top\", \"clothing\"];\n\n    return new Clothing(name, description, \"torso\", value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Clothing from \"../../clothing/clothing.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class RobePattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"outer\", \"clothing\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Clothing {\n    let body = RND.item(Components.withCategory(\"fabric\", componentOptions));\n    let hardware = RND.item(Components.withCategory(\"soft metal\", componentOptions));\n\n    let value = this.baseValue + body.value + hardware.value;\n\n    let description = `${Words.article(this.name)} ${this.name} `;\n\n    description += RND.item([`made of ${body.descriptor} with `, \"with \"]);\n\n    let sleeves = RND.item([\"short\", \"long\", \"wide\", \"narrow\", \"bunched\", \"volumnous\"]) + \" sleeves\";\n    let lacing = \"lacing \" + RND.item([\"down the middle\", \"at the top\", \"halfway down\"]);\n    let collar = `a ${RND.item([\"wide\", \"tight\", \"open\"])} collar`;\n    let closures = RND.item([\"dull\", \"embossed\", \"rough\", \"shiny\", \"round\", \"square\"])\n      + ` ${hardware.descriptor} `\n      + RND.item([\"buttons\", \"clasps\"]);\n\n    description += RND.item([sleeves, collar, lacing, closures]);\n\n    if (quality > 1 && random.int(1, 100) >= 70) {\n      description += RND.item([\n        \" that is artfully embroidered\",\n        ` that is embroidered with ${RND.item([\"simple\", \"complex\", \"ornate\"])} patterns`,\n        \" that is gusseted\",\n      ]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"outer\", \"clothing\"];\n\n    return new Clothing(name, description, \"torso\", value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport random from \"random\";\nimport Clothing from \"../../clothing/clothing.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class PantsPattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"bottom\", \"pants\", \"clothing\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Clothing {\n    let body = RND.item(Components.withCategory(\"fabric\", componentOptions));\n    let hardware = RND.item(Components.withCategory(\"soft metal\", componentOptions));\n\n    let value = this.baseValue + body.value + hardware.value;\n\n    let description = `${this.name} `;\n\n    description += RND.item([`made of ${body.descriptor} with `, \"with \"]);\n\n    let lacing = ` ${RND.item([\"tight\", \"loose\", \"\"])} lacing`;\n    let closures = RND.item([\"dull\", \"embossed\", \"rough\", \"shiny\", \"round\", \"square\"])\n      + ` ${hardware.descriptor} `\n      + RND.item([\"buttons\", \"clasps\"]);\n\n    description += RND.item([lacing, closures]);\n\n    if (quality > 1 && random.int(1, 100) >= 70) {\n      description += RND.item([\n        ` that is embroidered with ${RND.item([\"simple\", \"complex\", \"ornate\"])} patterns`,\n        ` that has decorative stitching down the sides`,\n      ]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"bottom\", \"pants\", \"clothing\"];\n\n    return new Clothing(name, description, \"legs\", value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Clothing from \"../../clothing/clothing.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class DressPattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"dress\", \"clothing\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Clothing {\n    let body = RND.item(Components.withCategory(\"fabric\", componentOptions));\n\n    let value = this.baseValue + body.value * 2;\n\n    let description = `${Words.article(this.name)} ${this.name} `;\n\n    description += RND.item([`made of ${body.descriptor} `, \"\"]);\n\n    if (quality > 1 && random.int(1, 100) >= 70) {\n      description += RND.item([\n        \" that is artfully embroidered\",\n        ` that is embroidered with ${RND.item([\"simple\", \"complex\", \"ornate\"])} patterns`,\n        \" that is gusseted\",\n      ]);\n    }\n\n    description += \" with \";\n\n    let sleeves = RND.item([\"short\", \"long\", \"wide\", \"narrow\", \"bunched\", \"volumnous\", \"no\"]) + \" sleeves\";\n    let lacing = RND.item([\"tight \", \"\", \"double \", \"wide \"])\n      + \"lacing \"\n      + RND.item([\"down the middle\", \"at the top\", \"halfway down\", \"down the back\"]);\n    let neck = RND.item([\"a wide neck\", \"a v-neck\", \"a deep neck\"]);\n    let waist = RND.item([\"a tight waist\", \"a narrow waist\", \"a cinched waist\", \"a belted waist\"]);\n\n    description += RND.item([sleeves, lacing, neck, waist]);\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"dress\", \"clothing\"];\n\n    return new Clothing(name, description, \"torso\", value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Clothing from \"../../clothing/clothing.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class BeltPattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"belt\", \"clothing\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Clothing {\n    let body = RND.item(Components.withCategory(\"leather\", componentOptions));\n    let hardware = RND.item(Components.withCategory(\"metal\", componentOptions));\n\n    let value = this.baseValue + body.value + hardware.value;\n\n    let description = RND.item([\n      `${Words.article(this.name)} ${this.name} `,\n      `${Words.article(this.name)} ${this.name} made of ${body.descriptor} `,\n      `${Words.article(body.descriptor)} ${body.descriptor} ${this.name} `,\n    ]);\n\n    description += `with ${Words.article(hardware.descriptor)} ${hardware.descriptor} ${\n      RND.item([\n        \"clasp\",\n        \"buckle\",\n        \"closure\",\n      ])\n    }`;\n\n    if (quality > 1 && random.int(1, 100) >= 70) {\n      description += RND.item([\n        ` that is embossed with ${RND.item([\"simple\", \"complex\", \"ornate\"])} patterns`,\n        ` that has decorative stitching down the sides`,\n      ]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let tags = [name, this.name, \"belt\", \"clothing\"];\n\n    return new Clothing(name, description, \"waist\", value, quality, tags);\n  }\n}\n","import type WornItem from \"../wornitem.js\";\n\nexport default class Clothing implements WornItem {\n  name: string;\n  description: string;\n  areaOfBody: string;\n  value: number;\n  quality: number;\n  tags: string[];\n\n  constructor(\n    name: string,\n    description: string,\n    areaOfBody: string,\n    value: number,\n    quality: number,\n    tags: string[],\n  ) {\n    this.name = name;\n    this.description = description;\n    this.areaOfBody = areaOfBody;\n    this.value = value;\n    this.quality = quality;\n    this.tags = tags;\n  }\n}\n","import BreastplatePattern from \"./armor/breastplate.js\";\nimport ChainmailPattern from \"./armor/chainmail.js\";\nimport HelmetPattern from \"./armor/helmet.js\";\nimport LeatherArmorPattern from \"./armor/leather.js\";\nimport PrimitiveShieldPattern from \"./armor/primitiveshield.js\";\nimport ShieldPattern from \"./armor/shield.js\";\nimport type Pattern from \"./pattern.js\";\n\nexport function all(): Pattern[] {\n  return [\n    new BreastplatePattern(\"breastplate\", 40000),\n    new BreastplatePattern(\"corrugated breastplate\", 45000),\n    new BreastplatePattern(\"cuirass\", 40000),\n    new BreastplatePattern(\"Gothic cuirass\", 50000),\n    new BreastplatePattern(\"plate cuirass\", 40000),\n    new BreastplatePattern(\"skirted breastplate\", 45000),\n    new ChainmailPattern(\"chain hauberk\", 5500),\n    new ChainmailPattern(\"chain shirt\", 4500),\n    new ChainmailPattern(\"chain vest\", 4500),\n    new HelmetPattern(\"armet\", 500),\n    new HelmetPattern(\"bascinet\", 1000),\n    new HelmetPattern(\"great helm\", 500),\n    new HelmetPattern(\"kettle helm\", 500),\n    new HelmetPattern(\"nasal helm\", 500),\n    new HelmetPattern(\"pot helm\", 500),\n    new HelmetPattern(\"spangenhelm\", 500),\n    new LeatherArmorPattern(\"brigandine\", 1000),\n    new LeatherArmorPattern(\"cuirass\", 1000),\n    new PrimitiveShieldPattern(\"round shield\", 1000),\n    new PrimitiveShieldPattern(\"square shield\", 1000),\n    new ShieldPattern(\"heater shield\", 1000),\n    new ShieldPattern(\"kite shield\", 1000),\n    new ShieldPattern(\"targé shield\", 1000),\n  ];\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport Armor from \"../../armor/armor.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class ShieldPattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"shield\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Armor {\n    let body = RND.item(Components.withCategory(\"metal\", componentOptions));\n\n    let handle = RND.item(Components.withCategory(\"wood\", componentOptions));\n\n    let trim = RND.item(Components.withCategory(\"soft metal\", componentOptions));\n\n    let value = this.baseValue + body.value * 5 + trim.value;\n\n    let description = RND.item([\n      `${Words.article(this.name)} ${this.name} made of ${body.descriptor}`,\n      `${Words.article(body.descriptor)} ${body.descriptor} ${this.name} `,\n    ]);\n\n    description += RND.item([\n      ` with ${trim.descriptor} ${RND.item([\"trim\", \"edging\"])}`,\n      ` trimmed with ${trim.descriptor}`,\n    ]);\n\n    description += RND.item([` and a ${handle.descriptor} handle`, \"\"]);\n\n    if (quality > 1) {\n      description += RND.item([\" and decorated with spikes\"]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let armorClass = 1;\n    let tags = [name, this.name, \"shield\", \"armor\"];\n\n    return new Armor(name, description, \"arm\", armorClass, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport Armor from \"../../armor/armor.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class PrimitiveShieldPattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"shield\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Armor {\n    let body = RND.item(Components.withCategory(\"wood\", componentOptions));\n\n    let handle = RND.item(Components.withCategory(\"wood\", componentOptions));\n\n    let trim = RND.item(Components.withCategory(\"leather\", componentOptions));\n\n    let value = this.baseValue + body.value * 5 + trim.value;\n\n    let description = RND.item([\n      `${Words.article(this.name)} ${this.name} made of ${body.descriptor}`,\n      `${Words.article(body.descriptor)} ${body.descriptor} ${this.name} `,\n    ]);\n\n    description += RND.item([\n      ` with ${trim.descriptor} ${RND.item([\"trim\", \"edging\"])}`,\n      ` trimmed with ${trim.descriptor}`,\n    ]);\n\n    description += RND.item([` and a ${handle.descriptor} handle`, \"\"]);\n\n    if (quality > 1) {\n      description += RND.item([\" and decorated with bone\"]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let armorClass = 1;\n    let tags = [name, this.name, \"shield\", \"armor\"];\n\n    return new Armor(name, description, \"arm\", armorClass, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Armor from \"../../armor/armor.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class LeatherArmorPattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"body armor\", \"armor\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Armor {\n    let body = RND.item(Components.withCategory(\"hard leather\", componentOptions));\n    let trim = RND.item(Components.withCategory(\"soft metal\", componentOptions));\n\n    let value = this.baseValue + body.value * 1000 + trim.value;\n\n    let description = RND.item([\n      `${Words.article(this.name)} ${this.name} made of ${body.descriptor}`,\n      `${Words.article(body.descriptor)} ${body.descriptor} ${this.name} `,\n    ]);\n\n    description += RND.item([\n      ` with ${trim.descriptor} ${\n        RND.item([\n          \"hardware\",\n          \"fasteners\",\n          \"banding\",\n          \"studs\",\n          \"rivets\",\n        ])\n      }`,\n      ` fastened with ${trim.descriptor} ${RND.item([\"buckles\", \"clasps\"])}`,\n    ]);\n\n    if (quality > 1 && random.int(1, 100) >= 70) {\n      description += RND.item([\n        `, with integrated sleeves`,\n        `, with ${RND.item([\"embossed patterns\", \"a lacquered finish\"])}`,\n      ]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n    let tags = [name, this.name, \"body armor\", \"armor\"];\n\n    let armorClass = 11 + random.int(0, 1);\n\n    return new Armor(name, description, \"torso\", armorClass, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport Armor from \"../../armor/armor.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class HelmetPattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"helmet\", \"armor\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Armor {\n    let body = RND.item(Components.withCategory(\"metal\", componentOptions));\n    let trim = RND.item(Components.withCategory(\"soft metal\", componentOptions));\n\n    let value = this.baseValue + body.value * 10 + trim.value;\n\n    let description = RND.item([\n      `${Words.article(this.name)} ${this.name} made of ${body.descriptor}`,\n      `${Words.article(body.descriptor)} ${body.descriptor} ${this.name} `,\n    ]);\n\n    description += RND.item([\n      ` with ${trim.descriptor} ${RND.item([\"trim\", \"edging\"])}`,\n      ` trimmed with ${trim.descriptor}`,\n    ]);\n\n    if (quality > 1) {\n      description += RND.item([\" and set with jewels\"]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let armorClass = 1;\n    let tags = [name, this.name, \"helmet\", \"armor\"];\n\n    return new Armor(name, description, \"head\", armorClass, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport Armor from \"../../armor/armor.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class ChainmailPattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"body armor\", \"armor\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Armor {\n    let body = RND.item(Components.withCategory(\"metal\", componentOptions));\n\n    let value = this.baseValue + body.value * 500;\n\n    let description = RND.item([\n      `${Words.article(this.name)} ${this.name} made of ${body.descriptor}`,\n      `${Words.article(this.name)} ${this.name} made of ${\n        RND.item([\n          \"loose \",\n          \"tight \",\n          \"dense \",\n          \"heavy \",\n          \"\",\n        ])\n      }${body.descriptor} rings`,\n      `${Words.article(body.descriptor)} ${body.descriptor} ${this.name}`,\n    ]);\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    if (quality > 1) {\n      description += RND.item([\" and decorative belting\"]);\n    }\n\n    let armorClass = 16;\n    let tags = [name, this.name, \"chainmail\", \"armor\"];\n\n    return new Armor(name, description, \"torso\", armorClass, value, quality, tags);\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport Armor from \"../../armor/armor.js\";\nimport Component from \"../../components/component.js\";\nimport * as Components from \"../../components/components.js\";\nimport type Pattern from \"../pattern.js\";\n\nexport default class BreastplatePattern implements Pattern {\n  name: string;\n  tags: string[];\n  baseValue: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.tags = [name, \"body armor\", \"armor\"];\n    this.baseValue = value;\n  }\n\n  complete(componentOptions: Component[], quality: number): Armor {\n    let body = RND.item(Components.withCategory(\"metal\", componentOptions));\n    let trim = RND.item(Components.withCategory(\"soft metal\", componentOptions));\n\n    let value = this.baseValue + body.value * 1000 + trim.value;\n\n    let description = RND.item([\n      `${Words.article(this.name)} ${this.name} made of ${body.descriptor}`,\n      `${Words.article(body.descriptor)} ${body.descriptor} ${this.name} `,\n    ]);\n\n    description += RND.item([\n      ` with ${trim.descriptor} ${RND.item([\"trim\", \"edging\"])}`,\n      ` trimmed with ${trim.descriptor}`,\n      ` decorated with ${trim.descriptor} edging`,\n    ]);\n\n    if (quality > 1 && random.int(1, 100) >= 70) {\n      description += RND.item([\n        ` with overlapping plates`,\n        ` with rolled edges`,\n        ` with ornate engravings`,\n      ]);\n    }\n\n    let name = `${body.descriptor} ${this.name}`;\n\n    let armorClass = 14;\n    let tags = [name, this.name, \"breastplate\", \"armor\"];\n\n    return new Armor(name, description, \"torso\", armorClass, value, quality, tags);\n  }\n}\n","import type WornItem from \"../wornitem.js\";\n\nexport default class Armor implements WornItem {\n  name: string;\n  description: string;\n  areaOfBody: string;\n  armorClass: number;\n  value: number;\n  quality: number;\n  tags: string[];\n\n  constructor(\n    name: string,\n    description: string,\n    areaOfBody: string,\n    armorClass: number,\n    value: number,\n    quality: number,\n    tags: string[],\n  ) {\n    this.name = name;\n    this.description = description;\n    this.areaOfBody = areaOfBody;\n    this.armorClass = armorClass;\n    this.value = value;\n    this.quality = quality;\n    this.tags = tags;\n  }\n}\n","import type Weapon from \"./weapon.js\";\n\nexport default class MeleeWeapon implements Weapon {\n  name: string;\n  description: string;\n  damage: string;\n  hands: number;\n  value: number;\n  quality: number;\n  tags: string[];\n\n  constructor(\n    name: string,\n    description: string,\n    damage: string,\n    hands: number,\n    value: number,\n    quality: number,\n    tags: string[],\n  ) {\n    this.name = name;\n    this.description = description;\n    this.damage = damage;\n    this.hands = hands;\n    this.value = value;\n    this.quality = quality;\n    this.tags = tags;\n  }\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Animal from \"./animal.js\";\nimport Component from \"./component.js\";\nimport * as Fabrics from \"./fabrics.js\";\nimport * as Metals from \"./metals.js\";\nimport * as Wood from \"./wood.js\";\n\nexport function all(): Component[] {\n  let result = [];\n\n  result.push(...Animal.all());\n  result.push(...Fabrics.all());\n  result.push(...Metals.all());\n  result.push(...Wood.all());\n\n  return result;\n}\n\nexport function getComponentForCategory(\n  category: string,\n  components: Component[],\n  minValue: number,\n  maxValue: number,\n): Component {\n  let possible = [];\n\n  for (let i = 0; i < components.length; i++) {\n    if (\n      components[i].subType == category\n      && components[i].value <= maxValue\n      && components[i].value >= minValue\n    ) {\n      possible.push(components[i]);\n    } else if (\n      components[i].category == category\n      && components[i].value <= maxValue\n      && components[i].value >= minValue\n    ) {\n      possible.push(components[i]);\n    }\n  }\n\n  return RND.item(possible);\n}\n\nexport function withCategory(category: string, components: Component[]): Component[] {\n  let result = [];\n\n  for (let i = 0; i < components.length; i++) {\n    if (components[i].category == category || components[i].subType == category) {\n      result.push(components[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function withMinValue(value: number, components: Component[]): Component[] {\n  let result = [];\n\n  for (let i = 0; i < components.length; i++) {\n    if (components[i].value >= value) {\n      result.push(components[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function withMaxValue(value: number, components: Component[]): Component[] {\n  let result = [];\n\n  for (let i = 0; i < components.length; i++) {\n    if (components[i].value <= value) {\n      result.push(components[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function withMinQuality(quality: number, components: Component[]): Component[] {\n  let result = [];\n\n  for (let i = 0; i < components.length; i++) {\n    if (components[i].quality >= quality) {\n      result.push(components[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function withMaxQuality(quality: number, components: Component[]): Component[] {\n  let result = [];\n\n  for (let i = 0; i < components.length; i++) {\n    if (components[i].quality <= quality) {\n      result.push(components[i]);\n    }\n  }\n\n  return result;\n}\n","import Component from \"./component.js\";\n\nexport function all(): Component[] {\n  return [\n    new Component(\"pine wood\", \"a log of pine\", \"pine\", \"wood\", \"soft wood\", 1, 0, [\"wood\"]),\n    new Component(\"cedar wood\", \"a log of cedar\", \"cedar\", \"wood\", \"soft wood\", 2, 0, [\"wood\"]),\n    new Component(\"aspen wood\", \"a log of aspen\", \"aspen\", \"wood\", \"soft wood\", 2, 0, [\"wood\"]),\n    new Component(\"fir wood\", \"a log of fir\", \"fir\", \"wood\", \"soft wood\", 10, 1, [\"wood\"]),\n    new Component(\n      \"white cedar wood\",\n      \"a log of white cedar\",\n      \"white cedar\",\n      \"wood\",\n      \"soft wood\",\n      25,\n      0,\n      [\"wood\"],\n    ),\n    new Component(\n      \"silver fir wood\",\n      \"a log of silver fir\",\n      \"silver fir\",\n      \"wood\",\n      \"soft wood\",\n      10,\n      1,\n      [\"wood\"],\n    ),\n    new Component(\"poplar wood\", \"a log of poplar\", \"poplar\", \"wood\", \"soft wood\", 1, 0, [\"wood\"]),\n    new Component(\"oak wood\", \"a log of oak\", \"oak\", \"wood\", \"hard wood\", 1, 0, [\"wood\"]),\n    new Component(\"maple wood\", \"a log of maple\", \"maple\", \"wood\", \"hard wood\", 30, 2, [\"wood\"]),\n    new Component(\"walnut wood\", \"a log of walnut\", \"walnut\", \"wood\", \"hard wood\", 1, 0, [\"wood\"]),\n    new Component(\"cherry wood\", \"a log of cherry\", \"cherry\", \"wood\", \"hard wood\", 20, 2, [\"wood\"]),\n    new Component(\"birch wood\", \"a log of birch\", \"birch\", \"wood\", \"hard wood\", 5, 1, [\"wood\"]),\n    new Component(\"ironwood\", \"a log of ironwood\", \"ironwood\", \"wood\", \"hard wood\", 60, 3, [\n      \"wood\",\n    ]),\n    new Component(\"blackwood\", \"a log of blackwood\", \"blackwood\", \"wood\", \"hard wood\", 50, 3, [\n      \"wood\",\n    ]),\n    new Component(\"ebony\", \"a log of ebony\", \"ebony\", \"wood\", \"hard wood\", 80, 2, [\"wood\"]),\n  ];\n}\n","import Component from \"./component.js\";\n\nexport function all(): Component[] {\n  return [\n    new Component(\"tin bar\", \"a bar of tin\", \"tin\", \"metal\", \"soft metal\", 1, 0, [\"metal\"]),\n    new Component(\"copper bar\", \"a bar of copper\", \"copper\", \"metal\", \"soft metal\", 5, 0, [\n      \"metal\",\n    ]),\n    new Component(\"silver bar\", \"a bar of silver\", \"silver\", \"metal\", \"soft metal\", 50, 2, [\n      \"metal\",\n    ]),\n    new Component(\"gold bar\", \"a bar of gold\", \"gold\", \"metal\", \"soft metal\", 5000, 3, [\"metal\"]),\n    new Component(\n      \"white gold bar\",\n      \"a bar of white gold\",\n      \"white gold\",\n      \"metal\",\n      \"soft metal\",\n      5000,\n      4,\n      [\"metal\"],\n    ),\n    new Component(\"brass bar\", \"a bar of brass\", \"brass\", \"metal\", \"soft metal\", 10, 0, [\"metal\"]),\n    new Component(\"bronze bar\", \"a bar of bronze\", \"bronze\", \"metal\", \"soft metal\", 2, 0, [\n      \"metal\",\n    ]),\n    new Component(\"iron bar\", \"a bar of iron\", \"iron\", \"metal\", \"hard metal\", 10, 1, [\"metal\"]),\n    new Component(\"steel bar\", \"a bar of steel\", \"steel\", \"metal\", \"hard metal\", 20, 2, [\"metal\"]),\n    new Component(\n      \"adamantine bar\",\n      \"a bar of adamantine\",\n      \"adamantine\",\n      \"metal\",\n      \"hard metal\",\n      10000,\n      4,\n      [\"metal\"],\n    ),\n    new Component(\"mithril bar\", \"a bar of mithril\", \"mithril\", \"metal\", \"hard metal\", 8000, 4, [\n      \"metal\",\n    ]),\n    new Component(\"titanium bar\", \"a bar of titanium\", \"titanium\", \"metal\", \"hard metal\", 7500, 4, [\n      \"metal\",\n    ]),\n  ];\n}\n","import Component from \"./component.js\";\n\nexport function all(): Component[] {\n  return [\n    new Component(\"cotton\", \"a bolt of cotton fabric\", \"cotton\", \"fabric\", \"coarse fabric\", 1, 0, [\n      \"fabric\",\n    ]),\n    new Component(\"linen\", \"a bolt of linen fabric\", \"linen\", \"fabric\", \"coarse fabric\", 10, 0, [\n      \"fabric\",\n    ]),\n    new Component(\"wool\", \"a bolt of woolen fabric\", \"wool\", \"fabric\", \"coarse fabric\", 15, 0, [\n      \"fabric\",\n    ]),\n    new Component(\"silk\", \"a bolt of silk fabric\", \"silk\", \"fabric\", \"fine fabric\", 40, 2, [\n      \"fabric\",\n    ]),\n    new Component(\n      \"fine silk\",\n      \"a bolt of fine silk fabric\",\n      \"fine silk\",\n      \"fabric\",\n      \"fine fabric\",\n      80,\n      3,\n      [\"fabric\"],\n    ),\n  ];\n}\n","import Component from \"./component.js\";\n\nexport function all(): Component[] {\n  return [\n    new Component(\n      \"cow leather\",\n      \"a circle of cow leather\",\n      \"cow leather\",\n      \"leather\",\n      \"hard leather\",\n      1,\n      0,\n      [\"leather\"],\n    ),\n    new Component(\n      \"bull leather\",\n      \"a circle of bull leather\",\n      \"bull leather\",\n      \"leather\",\n      \"hard leather\",\n      2,\n      1,\n      [\"leather\"],\n    ),\n    new Component(\n      \"steer leather\",\n      \"a circle of steer leather\",\n      \"steer leather\",\n      \"leather\",\n      \"hard leather\",\n      20,\n      1,\n      [\"leather\"],\n    ),\n    new Component(\"pig hide\", \"a circle of pig hide\", \"pig hide\", \"leather\", \"hard leather\", 1, 0, [\n      \"leather\",\n    ]),\n    new Component(\n      \"deer hide\",\n      \"a circle of deer hide\",\n      \"deer hide\",\n      \"leather\",\n      \"soft leather\",\n      1,\n      0,\n      [\"leather\"],\n    ),\n    new Component(\n      \"goat hide\",\n      \"a circle of goat hide\",\n      \"goat hide\",\n      \"leather\",\n      \"soft leather\",\n      1,\n      0,\n      [\"leather\"],\n    ),\n    new Component(\n      \"sheep hide\",\n      \"a circle of sheep hide\",\n      \"sheep hide\",\n      \"leather\",\n      \"soft leather\",\n      1,\n      0,\n      [\"leather\"],\n    ),\n    new Component(\n      \"shark skin\",\n      \"a circle of shark skin\",\n      \"shark skin\",\n      \"leather\",\n      \"soft leather\",\n      30,\n      2,\n      [\"leather\"],\n    ),\n    new Component(\n      \"dragon hide\",\n      \"a circle of dragon hide\",\n      \"dragon hide\",\n      \"leather\",\n      \"hard leather\",\n      500,\n      4,\n      [\"leather\"],\n    ),\n    new Component(\n      \"wyvern hide\",\n      \"a circle of wyvern hide\",\n      \"wyvern hide\",\n      \"leather\",\n      \"hard leather\",\n      100,\n      4,\n      [\"leather\"],\n    ),\n    new Component(\"bone\", \"a length of bone\", \"bone\", \"bone\", \"animal bone\", 1, 0, [\"bone\"]),\n  ];\n}\n","import type Item from \"../item.js\";\n\nexport default class Component implements Item {\n  name: string;\n  description: string;\n  descriptor: string;\n  category: string;\n  subType: string;\n  value: number;\n  quality: number;\n  tags: string[];\n\n  constructor(\n    name: string,\n    description: string,\n    descriptor: string,\n    category: string,\n    subType: string,\n    value: number,\n    quality: number,\n    tags: string[],\n  ) {\n    this.name = name;\n    this.description = description;\n    this.descriptor = descriptor;\n    this.category = category;\n    this.subType = subType;\n    this.value = value;\n    this.quality = quality;\n    this.tags = tags;\n  }\n}\n"],"names":["WeaponPattern.all","ClothingPattern.all","ArmorPattern.all","all","Components.withCategory","Wood.all","Metals.all","Fabrics.all","Animal.all"],"mappings":";;;;;AgCEA,MAAA,SAAA,CAAA;AAAA,EAA+C,IAA/C,CAAA;AAA+C,EAC7C,WADF,CAAA;AACE,EACA,UADF,CAAA;AACE,EACA,QADF,CAAA;AACE,EACA,OADF,CAAA;AACE,EACA,KADF,CAAA;AACE,EACA,OADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EACA,WADF,CACE,IADF,EACE,WADF,EACE,UADF,EACE,QADF,EACE,OADF,EACE,KADF,EACE,OADF,EACE,IADF,EACE;AAYE,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,WAAJ,GAAI,WAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,UAAJ,GAAI,UAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,QAAJ,GAAI,QAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,OAAJ,GAAI,OAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,KAAJ,GAAI,KAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,OAAJ,GAAI,OAAJ,CAAA;AACI,IAAJ,IAAA,CAAI,IAAJ,GAAI,IAAJ,CAAA;AAAI,GAAJ;AAEA,CAAA;AD7BO,SAAAG,KAAP,GAAO;AACL,EAAF,OAAE;AAAA,IAAO,IAAA,SAAT;AAAS,MACD,aADR;AACQ,MACF,yBADN;AACM,MACA,aADN;AACM,MACA,SADN;AACM,MACA,cADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CAAA,SAAA,CADN;AACM,KAAN;AACgB,IACZ,IAAA,SADJ;AACI,MACI,cADR;AACQ,MACF,0BADN;AACM,MACA,cADN;AACM,MACA,SADN;AACM,MACA,cADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CAAA,SAAA,CADN;AACM,KAAN;AACgB,IACZ,IAAA,SADJ;AACI,MACI,eADR;AACQ,MACF,2BADN;AACM,MACA,eADN;AACM,MACA,SADN;AACM,MACA,cADN;AACM,MACA,EADN;AACM,MACA,CADN;AACM,MACA,CAAA,SAAA,CADN;AACM,KAAN;AACgB,IACZ,IAAA,SADJ,CACI,UADJ,EACI,sBADJ,EACI,UADJ,EACI,SADJ,EACI,cADJ,EACI,CADJ,EACI,CADJ,EACI;AAAA,MAC+F,SADnG;AACmG,KAC7F,CADN;AACM,IACD,IAAA,SADL;AACK,MACG,WADR;AACQ,MACF,uBADN;AACM,MACA,WADN;AACM,MACA,SADN;AACM,MACA,cADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CAAA,SAAA,CADN;AACM,KAAN;AACgB,IACZ,IAAA,SADJ;AACI,MACI,WADR;AACQ,MACF,uBADN;AACM,MACA,WADN;AACM,MACA,SADN;AACM,MACA,cADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CAAA,SAAA,CADN;AACM,KAAN;AACgB,IACZ,IAAA,SADJ;AACI,MACI,YADR;AACQ,MACF,wBADN;AACM,MACA,YADN;AACM,MACA,SADN;AACM,MACA,cADN;AACM,MACA,CADN;AACM,MACA,CADN;AACM,MACA,CAAA,SAAA,CADN;AACM,KAAN;AACgB,IACZ,IAAA,SADJ;AACI,MACI,YADR;AACQ,MACF,wBADN;AACM,MACA,YADN;AACM,MACA,SADN;AACM,MACA,cADN;AACM,MACA,EADN;AACM,MACA,CADN;AACM,MACA,CAAA,SAAA,CADN;AACM,KAAN;AACgB,IACZ,IAAA,SADJ;AACI,MACI,aADR;AACQ,MACF,yBADN;AACM,MACA,aADN;AACM,MACA,SADN;AACM,MACA,cADN;AACM,MACA,GADN;AACM,MACA,CADN;AACM,MACA,CAAA,SAAA,CADN;AACM,KAAN;AACgB,IACZ,IAAA,SADJ;AACI,MACI,aADR;AACQ,MACF,yBADN;AACM,MACA,aADN;AACM,MACA,SADN;AACM,MACA,cADN;AACM,MACA,GADN;AACM,MACA,CADN;AACM,MACA,CAAA,SAAA,CADN;AACM,KAAN;AACgB,IACZ,IAAA,SADJ,CACI,MADJ,EACI,kBADJ,EACI,MADJ,EACI,MADJ,EACI,aADJ,EACI,CADJ,EACI,CADJ,EACI,CAAA,MAAA,CAAA,CADJ;AACI,GAAJ,CAAA;AAGA,CAAA;ADjGO,SAAAA,KAAP,GAAO;AACL,EAAF,OAAE;AAAA,IAAO,IAAA,SAAT,CAAS,QAAT,EAAS,yBAAT,EAAS,QAAT,EAAS,QAAT,EAAS,eAAT,EAAS,CAAT,EAAS,CAAT,EAAS;AAAA,MACyF,QADlG;AACkG,KAC5F,CADN;AACM,IACD,IAAA,SADL,CACK,OADL,EACK,wBADL,EACK,OADL,EACK,QADL,EACK,eADL,EACK,EADL,EACK,CADL,EACK;AAAA,MAC2F,QADhG;AACgG,KAC1F,CADN;AACM,IACD,IAAA,SADL,CACK,MADL,EACK,yBADL,EACK,MADL,EACK,QADL,EACK,eADL,EACK,EADL,EACK,CADL,EACK;AAAA,MAC0F,QAD/F;AAC+F,KACzF,CADN;AACM,IACD,IAAA,SADL,CACK,MADL,EACK,uBADL,EACK,MADL,EACK,QADL,EACK,aADL,EACK,EADL,EACK,CADL,EACK;AAAA,MACsF,QAD3F;AAC2F,KACrF,CADN;AACM,IACD,IAAA,SADL;AACK,MACG,WADR;AACQ,MACF,4BADN;AACM,MACA,WADN;AACM,MACA,QADN;AACM,MACA,aADN;AACM,MACA,EADN;AACM,MACA,CADN;AACM,MACA,CAAA,QAAA,CADN;AACM,KAAN;AACe,GAAf,CAAA;AAGA,CAAA;ADzBO,SAAAA,KAAP,GAAO;AACL,EAAF,OAAE;AAAA,IAAO,IAAA,SAAT,CAAS,SAAT,EAAS,cAAT,EAAS,KAAT,EAAS,OAAT,EAAS,YAAT,EAAS,CAAT,EAAS,CAAT,EAAS,CAAA,OAAA,CAAA,CAAT;AAAS,IACiF,IAAA,SAD1F,CAC0F,YAD1F,EAC0F,iBAD1F,EAC0F,QAD1F,EAC0F,OAD1F,EAC0F,YAD1F,EAC0F,CAD1F,EAC0F,CAD1F,EAC0F;AAAA,MACA,OAD1F;AAC0F,KACpF,CADN;AACM,IACD,IAAA,SADL,CACK,YADL,EACK,iBADL,EACK,QADL,EACK,OADL,EACK,YADL,EACK,EADL,EACK,CADL,EACK;AAAA,MACsF,OAD3F;AAC2F,KACrF,CADN;AACM,IACD,IAAA,SADL,CACK,UADL,EACK,eADL,EACK,MADL,EACK,OADL,EACK,YADL,EACK,GADL,EACK,CADL,EACK,CAAA,OAAA,CAAA,CADL;AACK,IAC2F,IAAA,SADhG;AACgG,MACxF,gBADR;AACQ,MACF,qBADN;AACM,MACA,YADN;AACM,MACA,OADN;AACM,MACA,YADN;AACM,MACA,GADN;AACM,MACA,CADN;AACM,MACA,CAAA,OAAA,CADN;AACM,KAAN;AACc,IACV,IAAA,SADJ,CACI,WADJ,EACI,gBADJ,EACI,OADJ,EACI,OADJ,EACI,YADJ,EACI,EADJ,EACI,CADJ,EACI,CAAA,OAAA,CAAA,CADJ;AACI,IAC6F,IAAA,SADjG,CACiG,YADjG,EACiG,iBADjG,EACiG,QADjG,EACiG,OADjG,EACiG,YADjG,EACiG,CADjG,EACiG,CADjG,EACiG;AAAA,MACP,OAD1F;AAC0F,KACpF,CADN;AACM,IACD,IAAA,SADL,CACK,UADL,EACK,eADL,EACK,MADL,EACK,OADL,EACK,YADL,EACK,EADL,EACK,CADL,EACK,CAAA,OAAA,CAAA,CADL;AACK,IACyF,IAAA,SAD9F,CAC8F,WAD9F,EAC8F,gBAD9F,EAC8F,OAD9F,EAC8F,OAD9F,EAC8F,YAD9F,EAC8F,EAD9F,EAC8F,CAD9F,EAC8F,CAAA,OAAA,CAAA,CAD9F;AAC8F,IACG,IAAA,SADjG;AACiG,MACzF,gBADR;AACQ,MACF,qBADN;AACM,MACA,YADN;AACM,MACA,OADN;AACM,MACA,YADN;AACM,MACA,GADN;AACM,MACA,CADN;AACM,MACA,CAAA,OAAA,CADN;AACM,KAAN;AACc,IACV,IAAA,SADJ,CACI,aADJ,EACI,kBADJ,EACI,SADJ,EACI,OADJ,EACI,YADJ,EACI,GADJ,EACI,CADJ,EACI;AAAA,MAC4F,OADhG;AACgG,KAC1F,CADN;AACM,IACD,IAAA,SADL,CACK,cADL,EACK,mBADL,EACK,UADL,EACK,OADL,EACK,YADL,EACK,IADL,EACK,CADL,EACK;AAAA,MAC8F,OADnG;AACmG,KAC7F,CADN;AACM,GAAN,CAAA;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IAAA,kBAD3C,CAC2C,gBAD3C,EAC2C,GAAA,CAD3C;AAC2C,IACO,IAAA,kBADlD,CACkD,eADlD,EACkD,GAAA,CADlD;AACkD,IACD,IAAA,kBADjD,CACiD,qBADjD,EACiD,IAAA,CADjD;AACiD,IACM,IAAA,gBADvD,CACuD,eADvD,EACuD,IAAA,CADvD;AACuD,IACT,IAAA,gBAD9C,CAC8C,aAD9C,EAC8C,IAAA,CAD9C;AAC8C,IACF,IAAA,gBAD5C,CAC4C,YAD5C,EAC4C,IAAA,CAD5C;AAC4C,IACD,IAAA,aAD3C,CAC2C,OAD3C,EAC2C,GAAA,CAD3C;AAC2C,IACT,IAAA,aADlC,CACkC,UADlC,EACkC,GAAA,CADlC;AACkC,IACI,IAAA,aADtC,CACsC,YADtC,EACsC,GAAA,CADtC;AACsC,IACC,IAAA,aADvC,CACuC,aADvC,EACuC,GAAA,CADvC;AACuC,IACC,IAAA,aADxC,CACwC,YADxC,EACwC,GAAA,CADxC;AACwC,IACD,IAAA,aADvC,CACuC,UADvC,EACuC,GAAA,CADvC;AACuC,IACF,IAAA,aADrC,CACqC,aADrC,EACqC,GAAA,CADrC;AACqC,IACG,IAAA,mBADxC,CACwC,YADxC,EACwC,GAAA,CADxC;AACwC,IACM,IAAA,mBAD9C,CAC8C,SAD9C,EAC8C,GAAA,CAD9C;AAC8C,IACH,IAAA,sBAD3C,CAC2C,cAD3C,EAC2C,GAAA,CAD3C;AAC2C,IACQ,IAAA,sBADnD,CACmD,eADnD,EACmD,GAAA,CADnD;AACmD,IACC,IAAA,aADpD,CACoD,eADpD,EACoD,GAAA,CADpD;AACoD,IACT,IAAA,aAD3C,CAC2C,aAD3C,EAC2C,GAAA,CAD3C;AAC2C,IACF,IAAA,aADzC,CACyC,cADzC,EACyC,GAAA,CADzC;AACyC,GAAzC,CAAA;AAGA,CAAA;ADhCA,MAAA,QAAA,CAAA;AAAA,EAAkD,IAAlD,CAAA;AAAkD,EAChD,WADF,CAAA;AACE,EACA,UADF,CAAA;AACE,EACA,KADF,CAAA;AACE,EACA,OADF,CAAA;AACE,EACA,IADF,CAAA;AACE,EA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"}