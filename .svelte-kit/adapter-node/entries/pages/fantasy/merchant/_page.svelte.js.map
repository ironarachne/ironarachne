{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../src/lib/equipment/equipment.ts","../../../../../../../src/lib/equipment/stocklist.ts","../../../../../../../src/lib/merchant.ts","../../../../../../../src/routes/fantasy/merchant/+page.svelte"],"sourcesContent":["import * as RND from \"@ironarachne/rng\";\nimport Component from \"./components/component.js\";\nimport type Item from \"./item.js\";\nimport * as Patterns from \"./patterns/patterns.js\";\n\nexport function generate(\n  category: string,\n  components: Component[],\n  amount: number,\n  valueThreshold: number,\n): Item[] {\n  let result = [];\n  let patterns = [];\n\n  if (category == \"general\") {\n    patterns = Patterns.all();\n  } else {\n    patterns = Patterns.forCategory(category);\n  }\n\n  for (let i = 0; i < amount; i++) {\n    let pattern = RND.item(patterns);\n    let item = pattern.complete(components, valueThreshold);\n    result.push(item);\n  }\n\n  return result;\n}\n","import * as Components from \"./components/components.js\";\nimport * as Equipment from \"./equipment.js\";\nimport type Item from \"./item.js\";\n\nexport function getList(category: string, amount: number, valueThreshold: number): Item[] {\n  let components = Components.all();\n\n  let items = Equipment.generate(category, components, amount, valueThreshold);\n\n  return items;\n}\n","import * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport type Character from \"./characters/character.js\";\nimport * as Characters from \"./characters/characters.js\";\nimport type Item from \"./equipment/item.js\";\nimport * as StockList from \"./equipment/stocklist.js\";\n\nexport class Merchant {\n  character: Character;\n  description: string;\n  wares: Item[];\n  priceVariance: number;\n\n  constructor(character: Character, description: string, wares: Item[], priceVariance: number) {\n    this.character = character;\n    this.description = description;\n    this.wares = wares;\n    this.priceVariance = priceVariance;\n  }\n}\n\nexport function generate(itemCategory: string, valueThreshold: number): Merchant {\n  let charGenConfig = Characters.getDefaultCharacterGeneratorConfig();\n  charGenConfig.ageCategoryNames = [\"adult\"];\n\n  let character = Characters.generate(charGenConfig);\n  let description = RND.item([\n    `${character.firstName} ${character.lastName} is ${\n      Words.article(\n        itemCategory,\n      )\n    } ${itemCategory} merchant.`,\n    `${character.firstName} ${character.lastName}, ${\n      Words.article(character.species.name)\n    } ${character.species.name} ${character.ageCategory.noun}, is ${\n      Words.article(itemCategory)\n    } ${itemCategory} merchant.`,\n  ]);\n  let wares = StockList.getList(itemCategory, 10, valueThreshold);\n  let priceVariance = random.float(0.8, 1.2);\n  if (priceVariance > 1.0) {\n    description += \" \" + Words.capitalize(character.gender.pronouns.subjective) + \" charges more than others.\";\n  } else if (priceVariance < 1.0) {\n    description += \" \" + Words.capitalize(character.gender.pronouns.subjective) + \" charges less than others.\";\n  }\n\n  return new Merchant(character, description, wares, priceVariance);\n}\n","<script lang=\"ts\">\n  import * as Currency from \"$lib/currency\";\n  import * as Merchant from \"$lib/merchant\";\n  import * as RND from \"@ironarachne/rng\";\n  import * as Words from \"@ironarachne/words\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n\n  let category = 'general';\n  let valueThreshold = 50;\n  let categories = [\n    'armor',\n    'clothing',\n    'general',\n    'weapon',\n  ];\n  let merchant = Merchant.generate(category, valueThreshold);\n  let seed = RND.randomString(13);\n\n  function generate() {\n    random.use(seedrandom(seed));\n\n    merchant = Merchant.generate(category, valueThreshold);\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/fantasy.scss';\n</style>\n\n<svelte:head>\n  <title>Fantasy Merchant Generator | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"fantasy main\">\n  <h1>Fantasy Merchant Generator</h1>\n\n  <p>This generates a fantasy merchant and a list of their wares.</p>\n\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\"/>\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"value\">Material Rarity Threshold</label>\n    <select name=\"value\" bind:value={valueThreshold}>\n      <option value=\"50\">Common</option>\n      <option value=\"100\">Rare</option>\n      <option value=\"10000\">Legendary</option>\n    </select>\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"value\">Type of Goods</label>\n    <select name=\"value\" bind:value={category}>\n      {#each categories as cat}\n      <option>{cat}</option>\n      {/each}\n    </select>\n  </div>\n\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n\n  <p>{ merchant.description } { Words.capitalize(merchant.character.gender.possessivePronoun) } wares include:</p>\n\n  <h2>Stock List</h2>\n\n  {#each merchant.wares as item}\n    <h4>{Words.capitalize(item.name)}</h4>\n    <p>{Words.capitalize(item.description)}.</p>\n    <p><strong>Cost:</strong> {Currency.convertCopper(Math.floor(item.value * merchant.priceVariance), false, false, false)}</p>\n  {/each}\n</section>\n"],"names":["generate","Patterns.all","Patterns.forCategory","Components.all","Equipment.generate","Characters.getDefaultCharacterGeneratorConfig","Characters.generate","StockList.getList","Merchant.generate","Currency.convertCopper"],"mappings":";;;;;;;;;AAKO,SAAAA,WAAA,UAAA,YAAA,QAAA,gBAAA;AAML,MAAA,SAAA,CAAA;AACA,MAAA,WAAA,CAAA;AAEA,MAAA,YAAA,WAAA;AACE,eAAAC,IAAA;AAAA,EAAwB,OAAA;AAExB,eAAAC,YAAA,QAAA;AAAA,EAAwC;AAG1C,WAAA,IAAA,GAAA,IAAA,QAAA,KAAA;AACE,QAAA,UAAA,IAAA,KAAA,QAAA;AACA,QAAA,OAAA,QAAA,SAAA,YAAA,cAAA;AACA,WAAA,KAAA,IAAA;AAAA,EAAgB;AAGlB,SAAA;AACF;ACvBO,SAAA,QAAA,UAAA,QAAA,gBAAA;AACL,MAAA,aAAAC;AAEA,MAAA,QAAAC,WAAA,UAAA,YAAA,QAAA,cAAA;AAEA,SAAA;AACF;ACFO,MAAA,SAAA;AAAA,EAAe;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAA,WAAA,aAAA,OAAA,eAAA;AAGE,SAAA,YAAA;AACA,SAAA,cAAA;AACA,SAAA,QAAA;AACA,SAAA,gBAAA;AAAA,EAAqB;AAEzB;AAEO,SAAA,SAAA,cAAA,gBAAA;AACL,MAAA,gBAAAC;AACA,gBAAA,mBAAA,CAAA,OAAA;AAEA,MAAA,YAAAC,WAAA,aAAA;AACA,MAAA,cAAA,IAAA,KAAA;AAAA,IAA2B,GAAA,UAAA,SAAA,IAAA,UAAA,QAAA,OAAA,MAAA;AAAA,MAEjB;AAAA,IACJ,CAAA,IAAA,YAAA;AAAA,IAEY,GAAA,UAAA,SAAA,IAAA,UAAA,QAAA,KAAA,MAAA,QAAA,UAAA,QAAA,IAAA,CAAA,IAAA,UAAA,QAAA,IAAA,IAAA,UAAA,YAAA,IAAA,QAAA,MAAA,QAAA,YAAA,CAAA,IAAA,YAAA;AAAA,EAKA,CAAA;AAElB,MAAA,QAAAC,QAAA,cAAA,IAAA,cAAA;AACA,MAAA,gBAAA,OAAA,MAAA,KAAA,GAAA;AACA,MAAA,gBAAA,GAAA;AACE,mBAAA,MAAA,MAAA,WAAA,UAAA,OAAA,SAAA,UAAA,IAAA;AAAA,EAA8E,WAAA,gBAAA,GAAA;AAE9E,mBAAA,MAAA,MAAA,WAAA,UAAA,OAAA,SAAA,UAAA,IAAA;AAAA,EAA8E;AAGhF,SAAA,IAAA,SAAA,WAAA,aAAA,OAAA,aAAA;AACF;;;;;;;MCxCM,WAAW;MACX,iBAAiB;MACjB,aACF,CAAA,SACA,YACA,WACA,QAAA;MAEE,WAAWC,SAAkB,UAAU,cAAc;MACrD,OAAO,IAAI,aAAa,EAAE;;AAgCe,SAAA,GAAA,SAAA,QAAA,oCAAA,SAAA,QAAA,4DAAA,EAAA,mCAAA,EAAA,icAAA,cAAA,SAAA,0lBAelC,YAAU,SAAA;AACR,WAAA,UAAA,cAAA,SAAA,kBAAA,GAAG,CAAA;AAAA,EAQX,CAAA,CAAA,sOAAA,OAAA,SAAS,WAAW,CAAA,IAAA,OAAK,MAAM,WAAW,SAAS,UAAU,OAAO,iBAAiB,CAInF,CAAA,gGAAA,KAAA,SAAS,OAAK,UAAA;AACd,WAAA,6BAAA,OAAA,MAAM,WAAW,KAAK,IAAI,CAAA,CAAA,kCAAA,OAC3B,MAAM,WAAW,KAAK,WAAW,sHACVC,cAAuB,KAAK,MAAM,KAAK,QAAQ,SAAS,aAAa,GAAG,OAAO,OAAO,KAAK,CAAA,CAAA;AAAA;;"}