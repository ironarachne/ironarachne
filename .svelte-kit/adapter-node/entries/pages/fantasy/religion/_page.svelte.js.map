{"version":3,"file":"_page.svelte.js","sources":["../../../../../../../src/routes/fantasy/religion/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { getContext } from 'svelte';\n  import * as MUN from \"@ironarachne/made-up-names\";\n  import * as RND from \"@ironarachne/rng\";\n  import random from \"random\";\n  import ReligionGenerator from \"$lib/religion/generator\";\n  import ReligionGeneratorConfig from \"$lib/religion/generatorconfig\";\n  import seedrandom from \"seedrandom\";\n  import type Culture from '$lib/culture/culture';\n\n  const user = getContext('user');\n\n  let humanNameGenSet = new MUN.HumanSet();\n  let savedCulture: string;\n  let useSavedCulture: boolean = false;\n  let culture: Culture;\n\n  let seed = RND.randomString(13);\n  random.use(seedrandom(seed));\n  let genConfig = new ReligionGeneratorConfig();\n  let generator = new ReligionGenerator(genConfig);\n  let religion = generator.generate();\n\n  function generate() {\n    random.use(seedrandom(seed));\n    if (humanNameGenSet.family === null) {\n      throw new Error(\"Name set does not have a family name generator.\")\n    }\n    if (humanNameGenSet.female === null) {\n      throw new Error(\"Name set does not have a female name generator.\")\n    }\n    if (humanNameGenSet.male === null) {\n      throw new Error(\"Name set does not have a male name generator.\")\n    }\n    generator.config.nameGenerator = humanNameGenSet.family;\n    generator.config.femaleNameGenerator = humanNameGenSet.female;\n    generator.config.maleNameGenerator = humanNameGenSet.male;\n\n    if (useSavedCulture) {\n      loadSavedCulture();\n\n      if (culture.generatorSet.family !== null) {\n        generator.config.nameGenerator = culture.generatorSet.family;\n      }\n      if (culture.generatorSet.female !== null) {\n        generator.config.femaleNameGenerator = culture.generatorSet.female;\n      }\n      if (culture.generatorSet.male !== null) {\n        generator.config.maleNameGenerator = culture.generatorSet.male;\n      }\n    } else {\n      generator.config.nameGenerator = humanNameGenSet.family;\n      generator.config.femaleNameGenerator = humanNameGenSet.female;\n      generator.config.maleNameGenerator = humanNameGenSet.male;\n    }\n\n    religion = generator.generate();\n  }\n\n  function loadSavedCulture() {\n    for (let i = 0; i < user.savedCultures.length; i++) {\n      if (user.savedCultures[i].name === savedCulture) {\n        culture = user.savedCultures[i];\n      }\n    }\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/fantasy.scss';\n</style>\n\n<svelte:head>\n  <title>Religion Generator | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"fantasy main\">\n  <h1>Fantasy Religion Generator</h1>\n\n  <p>Generate a fictional fantasy religion.</p>\n\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\" />\n  </div>\n\n  {#if user.savedCultures !== undefined && user.savedCultures.length > 0}\n  <div class=\"input-group\">\n    <label for=\"useSavedCulture\">Use a saved culture for naming?</label>\n    <input type=\"checkbox\" name=\"useSavedCulture\" bind:checked={useSavedCulture} id=\"useSavedCulture\" />\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"savedCulture\">Select a saved culture to load</label>\n    <select bind:value={savedCulture}>\n      {#each user.savedCultures as saved}\n      <option value={saved.name}>{ saved.name }</option>\n      {/each}\n    </select>\n  </div>\n  {/if}\n\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n\n  <h2>{religion.name}</h2>\n\n  <p>{religion.description}</p>\n\n  <h3>Realms</h3>\n\n  {#each religion.realms as realm}\n    <div>\n      <h4>{realm.name}</h4>\n      <p>{realm.description}</p>\n    </div>\n  {/each}\n\n  <h3>Deities</h3>\n\n  {#if religion.pantheon}\n  <p>{religion.pantheon.description}</p>\n\n  {#each religion.pantheon.members as member}\n    <div>\n      <h4>{member.deity.name}</h4>\n\n      <p>{member.deity.titles.join(\",\")}</p>\n\n      <p><strong>Holy Item:</strong> {member.deity.holyItem}</p>\n      <p><strong>Holy Symbol:</strong> {member.deity.holySymbol}</p>\n\n      <p>{member.deity.description}</p>\n    </div>\n  {/each}\n  {/if}\n</section>\n"],"names":[],"mappings":";;;;;;;;;;;;AAUQ,QAAA,OAAO,WAAW,MAAM;AAE1B,MAAsB,IAAI,SAAA;MAE1B,kBAA2B;MAG3B,OAAO,IAAI,aAAa,EAAE;AAC9B,SAAO,IAAI,WAAW,IAAI,CAAA;MACtB,YAAgB,IAAA;AAChB,MAAA,YAAA,IAAgB,kBAAkB,SAAS;AAC3C,MAAA,WAAW,UAAU;;AAsEoB,SAAA,GAAA,SAAA,QAAA,oCAAA,SAAA,QAAA,oDAAA,EAAA,mCAAA,6aAAA,cAAA,SAAA,MAGxC,CAAA,CAAA,WAAA,KAAK,kBAAkB,UAAa,KAAK,cAAc,SAAS,yRAGP,iBAAe,CAAA,CAAA,qMAAA,KAMlE,KAAK,eAAa,WAAA;AACV,WAAA,UAAA,cAAA,SAAA,MAAM,MAAQ,CAAA,CAAA,IAAA,OAAA,MAAM,IAAI,CAAA;AAAA,yPAStC,SAAS,IAAI,CAEd,kCAAA,OAAA,SAAS,WAAW,CAAA,4EAAA,KAIjB,SAAS,QAAM,WAAA;AAEb,WAAA,wDAAA,OAAA,MAAM,IAAI,CACX,kCAAA,OAAA,MAAM,WAAW,CAAA;AAAA,EAMpB,CAAA,CAAA,0EAAA,SAAS,8CACV,SAAS,SAAS,WAAW,cAE1B,SAAS,SAAS,SAAO,YAAA;AAEvB,WAAA,wDAAA,OAAA,OAAO,MAAM,IAAI,CAElB,kCAAA,OAAA,OAAO,MAAM,OAAO,KAAK,GAAG,CAAA,CAAA,kHAAA,OAEA,OAAO,MAAM,QAAQ,CAAA,mHAAA,OACnB,OAAO,MAAM,UAAU,CAErD,iCAAA,OAAA,OAAO,MAAM,WAAW,CAAA;AAAA;;"}