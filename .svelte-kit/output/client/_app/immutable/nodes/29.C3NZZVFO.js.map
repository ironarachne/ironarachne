{"version":3,"file":"29.C3NZZVFO.js","sources":["../../../../../../src/routes/word-generator-cheat-sheet/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { WordGenerator, allElements } from '@ironarachne/word-generator';\n\n  let elements = allElements;\n\n  let html =\n    '<table><thead><tr><th>Name</th><th>Symbol</th><th>Elements</th></tr></thead><tbody>';\n\n  for (let i = 0; i < elements.length; i++) {\n    html +=\n      '<tr><td>' +\n      elements[i].name +\n      '</td><td>' +\n      elements[i].symbol +\n      '</td><td>' +\n      elements[i].elements.join(', ') +\n      '</td></tr>';\n  }\n\n  html += '</tbody></table>';\n\n  let pattern = '';\n  let numberOfWords = 10;\n  let words: string[] = [];\n\n  function generate() {\n    words = [];\n    let wordGen = new WordGenerator();\n    wordGen.patterns = [pattern];\n    for (let i =0;i<numberOfWords;i++) {\n      words.push(wordGen.generate());\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n</style>\n\n<svelte:head>\n  <title>Word Generator Cheat Sheet | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"main default\">\n  <h1>Word Generator Cheat Sheet</h1>\n\n  <p>This is meant only for development reference.</p>\n  <p>Enclosing several comma-separated patterns in parentheses will make the parser choose one of those to add to the word.</p>\n  <p>Outside of the above, adding a + will duplicate the previous character after its processing.</p>\n\n  <div class=\"input-group\">\n    <label for=\"pattern\">Pattern</label>\n    <input type=\"text\" name=\"pattern\" bind:value={pattern} id=\"pattern\" />\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"number-of-words\">Number of Words</label>\n    <input type=\"number\" name=\"number-of-words\" bind:value={numberOfWords} id=\"number-of-words\" />\n  </div>\n\n  <button on:click={generate}>Generate</button>\n\n  <ul>\n    {#each words as word}\n      <li>{word}</li>\n    {/each}\n  </ul>\n\n  <h2>Element Reference</h2>\n\n  {@html html}\n</section>\n"],"names":["ctx","insert_hydration","target","li","anchor","set_data","t","t_value","i","section","append_hydration","h1","p0","p1","p2","div0","label0","input0","div1","label1","input1","button","ul","h2","elements","allElements","html","pattern","numberOfWords","words","generate","$$invalidate","wordGen","WordGenerator","to_number"],"mappings":"8cAkEWA,EAAI,CAAA,EAAA,6JAATC,EAAcC,EAAAC,EAAAC,CAAA,6BAATJ,EAAI,CAAA,EAAA,KAAAK,GAAAC,EAAAC,CAAA,wdADJP,EAAK,CAAA,CAAA,uBAAV,OAAIQ,GAAA,4zEApBVP,EA4BSC,EAAAO,EAAAL,CAAA,EA3BPM,EAAkCD,EAAAE,CAAA,SAElCD,EAAmDD,EAAAG,CAAA,SACnDF,EAA4HD,EAAAI,CAAA,SAC5HH,EAAkGD,EAAAK,CAAA,SAElGJ,EAGKD,EAAAM,CAAA,EAFHL,EAAmCK,EAAAC,CAAA,SACnCN,EAAqEK,EAAAE,CAAA,MAAvBjB,EAAO,CAAA,CAAA,SAGvDU,EAGKD,EAAAS,CAAA,EAFHR,EAAmDQ,EAAAC,CAAA,SACnDT,EAA6FQ,EAAAE,CAAA,MAArCpB,EAAa,CAAA,CAAA,SAGvEU,EAA4CD,EAAAY,CAAA,SAE5CX,EAIID,EAAAa,CAAA,0DAEJZ,EAAyBD,EAAAc,CAAA,aAElBvB,EAAI,CAAA,EAAAS,CAAA,0DAVOT,EAAQ,CAAA,CAAA,qCARsBA,EAAO,CAAA,OAAPA,EAAO,CAAA,CAAA,qBAKGA,EAAa,CAAA,OAAbA,EAAa,CAAA,CAAA,YAM9DA,EAAK,CAAA,CAAA,oBAAV,OAAIQ,GAAA,EAAA,mHAAJ,gBAOGR,EAAI,CAAA,CAAA,8EArEPwB,EAAWC,GAEXC,EACF,8FAEOlB,EAAI,EAAGA,EAAIgB,EAAS,OAAQhB,IACnCkB,GACE,WACAF,EAAShB,CAAC,EAAE,KACZ,YACAgB,EAAShB,CAAC,EAAE,OACZ,YACAgB,EAAShB,CAAC,EAAE,SAAS,KAAK,IAAI,EAC9B,aAGJkB,GAAQ,uBAEJC,EAAU,GACVC,EAAgB,GAChBC,EAAA,CAAA,EAEK,SAAAC,GAAA,CACPC,EAAA,EAAAF,EAAA,CAAA,CAAA,MACIG,EAAc,IAAAC,GAClBD,EAAQ,UAAYL,CAAO,UAClBnB,EAAG,EAAEA,EAAEoB,EAAcpB,IAC5BqB,EAAM,KAAKG,EAAQ,SAAA,CAAA,eAwByBL,EAAO,KAAA,0BAKGC,EAAaM,GAAA,KAAA,KAAA"}