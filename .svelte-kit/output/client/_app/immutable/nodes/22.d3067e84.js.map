{"version":3,"file":"22.d3067e84.js","sources":["../../../../../../src/routes/species-stats/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import * as AgeCategories from \"$lib/age/agecategories\";\n  import type AgeCategory from \"$lib/age/agecategory\";\n\n  let maximumAge = 100;\n  let femaleHeightModifier = 100;\n  let femaleWeightModifier = 100;\n  let maleHeightModifier = 100;\n  let maleWeightModifier = 100;\n  let femaleCategories: AgeCategory[] = [];\n  let maleCategories: AgeCategory[] = [];\n  let ingenium = {\n    adultAge: 0,\n    femaleHeight: '',\n    maleHeight: '',\n    femaleWeight: '',\n    maleWeight: ''\n  };\n\n  function calculate() {\n    let ageScale = maximumAge / 100;\n\n    femaleCategories = AgeCategories.getHumanVariant(ageScale, femaleWeightModifier / 100, femaleHeightModifier / 100, 'female');\n    maleCategories = AgeCategories.getHumanVariant(ageScale, maleWeightModifier / 100, maleHeightModifier / 100, 'male');\n\n    getIngenium();\n  }\n\n  function getIngenium() {\n    for (let i=0;i<femaleCategories.length;i++) {\n      if (femaleCategories[i].name == \"adult\") {\n        ingenium.femaleHeight = femaleCategories[i].getHeightRange();\n        ingenium.femaleWeight = femaleCategories[i].getWeightRange();\n        ingenium.adultAge = femaleCategories[i].minAge;\n      }\n    }\n\n    for (let i=0;i<maleCategories.length;i++) {\n      if (maleCategories[i].name == \"adult\") {\n        ingenium.maleHeight = maleCategories[i].getHeightRange();\n        ingenium.maleWeight = maleCategories[i].getWeightRange();\n      }\n    }\n  }\n\n  calculate();\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n</style>\n\n<svelte:head>\n  <title>Species Stats Tool | Iron Arachne</title>\n</svelte:head>\n\n<section class=\"main default\">\n  <h1>Species Stats Tool</h1>\n  <p>This tool helps in the construction of non-human species. I built it to help me input standard\n    fantasy species. To use it, just enter the percentage of human size you want to use for height and weight.</p>\n\n  <p>All numbers use modern human as a base.</p>\n\n  <h2>Settings</h2>\n\n  <div class=\"input-group\">\n    <label for=\"maxAge\">Maximum Age (Years)</label>\n    <input type=\"number\" name=\"maxAge\" on:change={calculate} bind:value={maximumAge} id=\"maxAge\">\n  </div>\n\n  <h3>Female</h3>\n\n  <div class=\"input-group\">\n    <label for=\"female-height\">% of Base Height</label>\n    <input type=\"number\" name=\"female-height\" on:change={calculate} bind:value={femaleHeightModifier} id=\"height\">\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"female-weight\">% of Base Weight</label>\n    <input type=\"number\" name=\"female-weight\" on:change={calculate} bind:value={femaleWeightModifier} id=\"weight\">\n  </div>\n\n  <h3>Male</h3>\n\n  <div class=\"input-group\">\n    <label for=\"male-height\">% of Base Height</label>\n    <input type=\"number\" name=\"male-height\" on:change={calculate} bind:value={maleHeightModifier} id=\"height\">\n  </div>\n\n  <div class=\"input-group\">\n    <label for=\"male-weight\">% of Base Weight</label>\n    <input type=\"number\" name=\"male-weight\" on:change={calculate} bind:value={maleWeightModifier} id=\"weight\">\n  </div>\n\n  <h2>Calculated Stats</h2>\n\n  <div style=\"display:flex\">\n    <div class=\"half-column\">\n      <h3>Female</h3>\n      {#each femaleCategories as category}\n      <div>\n        <h5>{ category.name }</h5>\n        <p><strong>Age Range:</strong> { category.minAge } to { category.maxAge } years</p>\n        <p><strong>Female Height:</strong> { category.getHeightRange() }</p>\n        <p><strong>Female Weight:</strong> { category.getWeightRange() }</p>\n      </div>\n      {/each}\n    </div>\n    <div class=\"half-column\">\n      <h3>Male</h3>\n      {#each maleCategories as category}\n      <div>\n        <h5>{ category.name }</h5>\n        <p><strong>Age Range:</strong> { category.minAge } to { category.maxAge } years</p>\n        <p><strong>Male Height:</strong> { category.getHeightRange() }</p>\n        <p><strong>Male Weight:</strong> { category.getWeightRange() }</p>\n      </div>\n      {/each}\n    </div>\n  </div>\n\n  <h2>For Ingenium Second Edition</h2>\n\n  <p>This is for Ingenium Second Edition heritages.</p>\n\n  <p><strong>Female Height:</strong> { ingenium.femaleHeight }</p>\n  <p><strong>Male Height:</strong> { ingenium.maleHeight }</p>\n  <p><strong>Female Weight:</strong> { ingenium.femaleWeight }</p>\n  <p><strong>Male Weight:</strong> { ingenium.maleWeight }</p>\n  <p><strong>Adult Age:</strong> { ingenium.adultAge }</p>\n  <p><strong>Maximum Lifespan:</strong> { maximumAge }</p>\n</section>\n"],"names":["t0_value","ctx","t4_value","t6_value","t11_value","t15_value","insert_hydration","target","div","anchor","append_hydration","h5","p0","strong0","p1","strong1","p2","strong2","dirty","set_data","t0","t4","t6","t11","t15","t42_value","t46_value","t50_value","t54_value","t58_value","section","h1","h20","div0","label0","input0","h30","div1","label1","input1","div2","label2","input2","h31","div3","label3","input3","div4","label4","input4","h21","div7","div5","h32","div6","h33","h22","p3","p4","p5","p6","strong3","p7","strong4","p8","strong5","i","t42","t46","t50","t54","t58","maximumAge","femaleHeightModifier","femaleWeightModifier","maleHeightModifier","maleWeightModifier","femaleCategories","maleCategories","ingenium","calculate","ageScale","$$invalidate","AgeCategories.getHumanVariant","getIngenium","to_number"],"mappings":"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"}