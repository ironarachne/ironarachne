{"version":3,"file":"3.PxsOmQS4.js","sources":["../../../../../../src/lib/weapons/config.ts","../../../../../../src/lib/weapons/weapon.ts","../../../../../../src/lib/weapons/generator.ts","../../../../../../src/lib/weapons/component.ts","../../../../../../src/lib/weapons/effect.ts","../../../../../../src/lib/weapons/type.ts","../../../../../../src/lib/weapons/weapons.ts","../../../../../../src/lib/weapons/scifi.ts","../../../../../../src/lib/arms_manufacturer/arms_manufacturer.ts","../../../../../../src/lib/arms_manufacturer/generator.ts","../../../../../../src/routes/arms-manufacturer/+page.svelte"],"sourcesContent":["import type WeaponType from \"./type\";\n\nexport default class WeaponGeneratorConfig {\n  weaponTypes: WeaponType[];\n\n  constructor() {\n    this.weaponTypes = [];\n  }\n}\n","export default class Weapon {\n  name: string;\n  maker: string;\n  damage: string;\n  effects: string[];\n  cosmetics: string[];\n  description: string;\n\n  constructor() {\n    this.name = \"\";\n    this.maker = \"\";\n    this.damage = \"\";\n    this.effects = [];\n    this.cosmetics = [];\n    this.description = \"\";\n  }\n}\n","import * as MUN from \"@ironarachne/made-up-names\";\nimport * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport WeaponGeneratorConfig from \"./config\";\nimport type WeaponType from \"./type\";\nimport Weapon from \"./weapon\";\n\nexport default class WeaponGenerator {\n  config: WeaponGeneratorConfig;\n\n  constructor() {\n    this.config = new WeaponGeneratorConfig();\n  }\n\n  generate(): Weapon {\n    let weapon = new Weapon();\n    let weaponType = RND.item(this.config.weaponTypes);\n\n    weapon.damage = weaponType.damageType;\n    weapon.effects = randomEffects(weaponType);\n    weapon.cosmetics = randomCosmetics(weaponType);\n    weapon.name = MUN.modelNumber() + \" \" + weaponType.name;\n    weapon.description = describe(weapon, weaponType);\n\n    return weapon;\n  }\n}\n\nfunction describe(weapon: Weapon, weaponType: WeaponType): string {\n  let description = RND.item(weaponType.bases) + \" has \";\n\n  description += Words.arrayToPhrase(weapon.effects) + \" and \";\n  description += Words.arrayToPhrase(weapon.cosmetics) + \". It \";\n  description += weapon.effects + \".\";\n\n  return description;\n}\n\nfunction randomCosmetics(weaponType: WeaponType): string[] {\n  let cosmetics: string[] = [];\n\n  const numberOfCosmetics = random.int(1, 3);\n\n  let cosmeticList: string[] = [];\n\n  for (const cosmetic of weaponType.cosmetics) {\n    cosmeticList.push(cosmetic.name);\n  }\n\n  cosmeticList = RND.shuffle(cosmeticList);\n\n  for (let i = 0; i < numberOfCosmetics; i++) {\n    let cosmetic = cosmeticList.pop();\n    let cosmeticComponent;\n\n    for (const c of weaponType.cosmetics) {\n      if (c.name === cosmetic) {\n        cosmeticComponent = c;\n      }\n    }\n\n    if (cosmeticComponent !== undefined) {\n      cosmetics.push(RND.item(cosmeticComponent.options));\n    }\n  }\n\n  return cosmetics;\n}\n\nfunction randomEffects(weaponType: WeaponType): string[] {\n  let effects: string[] = [];\n\n  const numberOfEffects = random.int(1, 3);\n\n  let effectList: string[] = [];\n\n  for (const effect of weaponType.effects) {\n    effectList.push(effect.name);\n  }\n\n  effectList = RND.shuffle(effectList);\n\n  for (let i = 0; i < numberOfEffects; i++) {\n    let effect = effectList.pop();\n\n    let effectComponent;\n\n    for (const e of weaponType.effects) {\n      if (e.name === effect) {\n        effectComponent = e;\n      }\n    }\n\n    if (effectComponent !== undefined) {\n      effects.push(RND.item(effectComponent.options));\n    }\n  }\n\n  return effects;\n}\n","export default class WeaponComponent {\n  name: string;\n  options: string[];\n\n  constructor() {\n    this.name = \"\";\n    this.options = [];\n  }\n}\n","export default class WeaponEffect {\n  name: string;\n  options: string[];\n\n  constructor() {\n    this.name = \"\";\n    this.options = [];\n  }\n}\n","import type WeaponComponent from \"./component.js\";\nimport type WeaponEffect from \"./effect.js\";\n\nexport default class WeaponType {\n  name: string;\n  bases: string[];\n  cosmetics: WeaponComponent[];\n  effects: WeaponEffect[];\n  range: string;\n  hands: number;\n  damageType: string;\n\n  constructor() {\n    this.name = \"\";\n    this.bases = [];\n    this.cosmetics = [];\n    this.effects = [];\n    this.range = \"\";\n    this.hands = 0;\n    this.damageType = \"\";\n  }\n}\n","import WeaponComponent from \"./component.js\";\nimport WeaponEffect from \"./effect.js\";\nimport WeaponType from \"./type.js\";\nimport Weapon from \"./weapon.js\";\n\nexport function newWeapon(\n  name: string,\n  maker: string,\n  damage: string,\n  effects: string[],\n  description: string,\n): Weapon {\n  let weapon = new Weapon();\n  weapon.name = name;\n  weapon.maker = maker;\n  weapon.damage = damage;\n  weapon.effects = effects;\n  weapon.description = description;\n\n  return weapon;\n}\n\nexport function newWeaponEffect(name: string, options: string[]): WeaponEffect {\n  let effect = new WeaponEffect();\n  effect.name = name;\n  effect.options = options;\n\n  return effect;\n}\n\nexport function newWeaponComponent(name: string, options: string[]): WeaponComponent {\n  let component = new WeaponComponent();\n  component.name = name;\n  component.options = options;\n\n  return component;\n}\n\nexport function newWeaponType(\n  name: string,\n  bases: string[],\n  cosmetics: WeaponComponent[],\n  effects: WeaponEffect[],\n  range: string,\n  hands: number,\n  damageType: string,\n): WeaponType {\n  let weaponType = new WeaponType();\n  weaponType.name = name;\n  weaponType.bases = bases;\n  weaponType.cosmetics = cosmetics;\n  weaponType.effects = effects;\n  weaponType.range = range;\n  weaponType.hands = hands;\n  weaponType.damageType = damageType;\n\n  return weaponType;\n}\n","import * as Weapons from \"./weapons.js\";\n\nexport const all = [\n  Weapons.newWeaponType(\n    \"energy rifle\",\n    [\n      \"This rifle\",\n      \"This energy rifle\",\n      \"This blaster rifle\",\n      \"This energy carbine\",\n      \"This carbine\",\n    ],\n    [\n      Weapons.newWeaponComponent(\"barrel\", [\"an extended barrel\", \"a short barrel\", \"a grooved barrel\"]),\n      Weapons.newWeaponComponent(\"scope\", [\"advanced sighting\", \"a long scope\", \"a short scope\"]),\n      Weapons.newWeaponComponent(\"stock\", [\n        \"a short stock\",\n        \"a clever stock\",\n        \"a comfortable stock\",\n        \"an extended stock\",\n      ]),\n      Weapons.newWeaponComponent(\"trigger\", [\n        \"a hair trigger\",\n        \"a double trigger\",\n        \"a comfortable trigger\",\n      ]),\n    ],\n    [\n      Weapons.newWeaponEffect(\"energy bolt\", [\n        \"fires green bolts\",\n        \"fires blue bolts\",\n        \"fires red bolts\",\n        \"fires yellow bolts\",\n        \"fires purple bolts\",\n      ]),\n      Weapons.newWeaponEffect(\"sound\", [\n        \"sounds like a buzzsaw\",\n        \"has a high-pitched whine\",\n        \"emits a rumbling sound\",\n      ]),\n      Weapons.newWeaponEffect(\"recoil\", [\"kicks hard\", \"has no recoil\", \"has a slight recoil\"]),\n      Weapons.newWeaponEffect(\"accuracy\", [\n        \"has poor accuracy\",\n        \"has excellent accuracy\",\n        \"uses onboard AI to enhance accuracy\",\n        \"has excellent accuracy\",\n      ]),\n    ],\n    \"long\",\n    2,\n    \"energy\",\n  ),\n  Weapons.newWeaponType(\n    \"energy pistol\",\n    [\"This pistol\", \"This energy pistol\", \"This blaster pistol\"],\n    [\n      Weapons.newWeaponComponent(\"barrel\", [\"an extended barrel\", \"a short barrel\", \"a grooved barrel\"]),\n      Weapons.newWeaponComponent(\"trigger\", [\n        \"a hair trigger\",\n        \"a double trigger\",\n        \"a comfortable trigger\",\n      ]),\n      Weapons.newWeaponComponent(\"grip\", [\n        \"a comfortable grip\",\n        \"a synthetic hide grip\",\n        \"a biometric grip\",\n      ]),\n    ],\n    [\n      Weapons.newWeaponEffect(\"energy bolt\", [\n        \"fires green bolts\",\n        \"fires blue bolts\",\n        \"fires red bolts\",\n        \"fires yellow bolts\",\n        \"fires purple bolts\",\n      ]),\n      Weapons.newWeaponEffect(\"sound\", [\n        \"is very quiet\",\n        \"has a high-pitched firing sound\",\n        \"emits a low sound when it fires\",\n      ]),\n      Weapons.newWeaponEffect(\"recoil\", [\"kicks hard\", \"has no recoil\", \"has a slight recoil\"]),\n      Weapons.newWeaponEffect(\"accuracy\", [\n        \"has poor accuracy\",\n        \"has excellent accuracy\",\n        \"has good accuracy\",\n      ]),\n    ],\n    \"short\",\n    1,\n    \"energy\",\n  ),\n  Weapons.newWeaponType(\n    \"pistol\",\n    [\"This pistol\", \"This revolver\", \"This sidearm\"],\n    [\n      Weapons.newWeaponComponent(\"barrel\", [\"an extended barrel\", \"a short barrel\", \"a grooved barrel\"]),\n      Weapons.newWeaponComponent(\"trigger\", [\n        \"a hair trigger\",\n        \"a comfortable trigger\",\n        \"a sensitive trigger\",\n      ]),\n      Weapons.newWeaponComponent(\"grip\", [\n        \"a comfortable grip\",\n        \"a synthetic hide grip\",\n        \"a biometric grip\",\n      ]),\n    ],\n    [\n      Weapons.newWeaponEffect(\"ammunition\", [\n        \"fires light rounds\",\n        \"fires heavy rounds\",\n        \"fires armor-piercing rounds\",\n        \"fires incendiary rounds\",\n      ]),\n      Weapons.newWeaponEffect(\"sound\", [\n        \"is very quiet\",\n        \"has a reverberating firing sound\",\n        \"is loud when it fires\",\n      ]),\n      Weapons.newWeaponEffect(\"recoil\", [\"kicks hard\", \"has no recoil\", \"has a slight recoil\"]),\n      Weapons.newWeaponEffect(\"accuracy\", [\n        \"has poor accuracy\",\n        \"has excellent accuracy\",\n        \"has good accuracy\",\n      ]),\n    ],\n    \"short\",\n    1,\n    \"projectile\",\n  ),\n  Weapons.newWeaponType(\n    \"rifle\",\n    [\n      \"This rifle\",\n      \"This assault rifle\",\n      \"This sniper rifle\",\n      \"This assault carbine\",\n      \"This carbine\",\n    ],\n    [\n      Weapons.newWeaponComponent(\"barrel\", [\"an extended barrel\", \"a short barrel\", \"a grooved barrel\"]),\n      Weapons.newWeaponComponent(\"scope\", [\n        \"advanced sighting\",\n        \"a long scope\",\n        \"a nightvision scope\",\n        \"a short scope\",\n      ]),\n      Weapons.newWeaponComponent(\"stock\", [\n        \"a short stock\",\n        \"a clever stock\",\n        \"a comfortable stock\",\n        \"an extended stock\",\n        \"a collapsible stock\",\n      ]),\n      Weapons.newWeaponComponent(\"trigger\", [\n        \"a hair trigger\",\n        \"a double trigger\",\n        \"a comfortable trigger\",\n      ]),\n    ],\n    [\n      Weapons.newWeaponEffect(\"ammunition\", [\n        \"fires light rounds\",\n        \"fires heavy rounds\",\n        \"fires armor-piercing rounds\",\n        \"fires anti-vehicular rounds\",\n        \"fires incendiary rounds\",\n        \"fires high explosive rounds\",\n      ]),\n      Weapons.newWeaponEffect(\"sound\", [\n        \"sounds like a cannon\",\n        \"has a high-pitched firing sound\",\n        \"echoes when it fires\",\n      ]),\n      Weapons.newWeaponEffect(\"recoil\", [\"kicks hard\", \"has no recoil\", \"has a slight recoil\"]),\n      Weapons.newWeaponEffect(\"accuracy\", [\n        \"has poor accuracy\",\n        \"has excellent accuracy\",\n        \"uses onboard AI to enhance accuracy\",\n        \"has excellent accuracy\",\n      ]),\n    ],\n    \"long\",\n    2,\n    \"projectile\",\n  ),\n];\n","import type Weapon from \"$lib/weapons/weapon.js\";\n\nexport default class ArmsManufacturer {\n  name: string;\n  description: string;\n  models: Weapon[];\n\n  constructor(name: string, description: string, models: Weapon[]) {\n    this.name = name;\n    this.description = description;\n    this.models = models;\n  }\n}\n","import WeaponGeneratorConfig from \"$lib/weapons/config.js\";\nimport WeaponGenerator from \"$lib/weapons/generator.js\";\nimport * as SciFiWeaponTypes from \"$lib/weapons/scifi.js\";\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as RND from \"@ironarachne/rng\";\nimport random from \"random\";\nimport ArmsManufacturer from \"./arms_manufacturer.js\";\n\nexport default class ArmsManufacturerGenerator {\n  generate(): ArmsManufacturer {\n    return generate();\n  }\n}\n\nfunction generate(): ArmsManufacturer {\n  const name = randomName();\n\n  let description = `${name} `;\n\n  const specialty = RND.item(SciFiWeaponTypes.all);\n  let secondaryOptions = SciFiWeaponTypes.all.filter((wType) => wType.name !== specialty.name);\n\n  const secondary = RND.item(secondaryOptions);\n\n  description += RND.item([\n    ` specializes in ${specialty.name}s. `,\n    ` is known for their ${specialty.name}s. `,\n  ]);\n\n  description += randomOutlook();\n  description += randomReputation();\n\n  let models = [];\n\n  const numberOfPrimary = random.int(3, 4);\n\n  let generator = new WeaponGenerator();\n  let config = new WeaponGeneratorConfig();\n  config.weaponTypes = [specialty];\n  generator.config = config;\n\n  for (let i = 0; i < numberOfPrimary; i++) {\n    let model = generator.generate();\n    models.push(model);\n  }\n\n  config.weaponTypes = [secondary];\n  generator.config = config;\n\n  const numberOfSecondary = random.int(0, 2);\n\n  for (let i = 0; i < numberOfSecondary; i++) {\n    let model = generator.generate();\n    models.push(model);\n  }\n\n  return new ArmsManufacturer(name, description, models);\n}\n\nfunction randomOutlook(): string {\n  return RND.item([\n    \" They focus exclusively on quality, and their products are very expensive.\",\n    \" They focus heavily on reliability.\",\n    \" They are devoted to profit above all else and their products are lower in quality.\",\n    \" They pride themselves on their workmanship.\",\n  ]);\n}\n\nfunction randomReputation(): string {\n  return RND.item([\n    \" Their products are widely regarded as the standard to beat.\",\n    \" Their products have a following among bounty hunters and mercenaries.\",\n    \" Their products are well-regarded by military powers.\",\n    \" They sometimes suffer derision because of their attitude.\",\n    \" Their market presence is almost nonexistent.\",\n    \" Some black markets focus exclusively on their products.\",\n  ]);\n}\n\nfunction randomName() {\n  const patterns = [\"pvlul\", \"vpvfv\"];\n\n  let nameFragment = MUN.invent(patterns);\n\n  const suffixes = [\n    \"Heavy Industries\",\n    \"Arms, Limited\",\n    \"Incorporated\",\n    \"Consolidated\",\n    \"Corporation\",\n    \"Applied Sciences\",\n  ];\n\n  let suffix = RND.item(suffixes);\n\n  return `${nameFragment} ${suffix}`;\n}\n\nfunction randomWeaponNameGenerator() {\n  return RND.item([\n    () => {\n      const patterns = [\"v\", \"c\", \"cc\", \"pc\", \"vc\", \"ccc\"];\n\n      const nameFragment = MUN.invent(patterns);\n\n      const suffix = \"-\" + random.int(1, 99);\n\n      return nameFragment + suffix;\n    },\n    () => {\n      const patterns = [\"v\", \"c\"];\n\n      const nameFragment = MUN.invent(patterns);\n\n      const suffix = \"\" + random.int(1, 99);\n\n      return nameFragment + suffix;\n    },\n    () => {\n      const patterns = [\"v\", \"c\"];\n\n      const nameFragment = MUN.invent(patterns);\n\n      const suffix = \"-\" + random.int(1, 99);\n\n      return nameFragment + suffix;\n    },\n  ]);\n}\n","<script lang=\"ts\">\n  import ArmsManufacturerGenerator from \"$lib/arms_manufacturer/generator.js\";\n  import * as RND from \"@ironarachne/rng\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n\n  let seed = RND.randomString(13);\n  random.use(seedrandom(seed));\n  let generator = new ArmsManufacturerGenerator();\n  let manufacturer = generator.generate();\n\n  function generate() {\n    seed = RND.randomString(13);\n    random.use(seedrandom(seed));\n    manufacturer = generator.generate();\n  }\n</script>\n\n<svelte:head>\n  <title>Arms Manufacturer Generator | Iron Arachne</title>\n</svelte:head>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/scifi.scss';\n</style>\n\n<section class=\"scifi main\">\n  <h1>Arms Manufacturer Generator</h1>\n  <p>This generator produces sci-fi arms manufacturing companies.</p>\n  <button on:click={generate}>Generate</button>\n  <p>{ manufacturer.description }</p>\n  <h2>Models</h2>\n  {#each manufacturer.models as model}\n  <div>\n    <h3>{model.name}</h3>\n    <p>{model.description}</p>\n  </div>\n  {/each}\n</section>\n"],"names":["WeaponGeneratorConfig","Weapon","WeaponGenerator","weapon","weaponType","RND.item","randomEffects","randomCosmetics","MUN.modelNumber","describe","description","Words.arrayToPhrase","cosmetics","numberOfCosmetics","random","cosmeticList","cosmetic","RND.shuffle","cosmeticComponent","c","effects","numberOfEffects","effectList","effect","effectComponent","e","WeaponComponent","WeaponEffect","WeaponType","newWeaponEffect","name","options","newWeaponComponent","component","newWeaponType","bases","range","hands","damageType","all","Weapons.newWeaponType","Weapons.newWeaponComponent","Weapons.newWeaponEffect","ArmsManufacturer","models","ArmsManufacturerGenerator","generate","randomName","specialty","SciFiWeaponTypes.all","secondaryOptions","wType","secondary","randomOutlook","randomReputation","numberOfPrimary","generator","config","i","model","numberOfSecondary","nameFragment","MUN.invent","suffix","t0_value","ctx","t2_value","insert_hydration","target","div","anchor","append_hydration","h3","p","dirty","set_data","t0","t2","t7_value","each_value","ensure_array_like","section","h1","p0","button","p1","h2","t7","seed","RND.randomString","seedrandom","manufacturer","$$invalidate"],"mappings":"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"}