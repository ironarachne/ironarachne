{"version":3,"file":"human.b0573b7b.js","sources":["../../../../../../node_modules/@ironarachne/made-up-names/dist/generator_set.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/dwarf.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/elf.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/halfling.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/human.js"],"sourcesContent":["\"use strict\";\nimport GenericNameGenerator from \"./generic_name_generator.js\";\nexport default class GeneratorSet {\n    constructor() {\n        this.name = \"\";\n        this.culture = new GenericNameGenerator();\n        this.country = new GenericNameGenerator();\n        this.family = new GenericNameGenerator();\n        this.female = new GenericNameGenerator();\n        this.male = new GenericNameGenerator();\n        this.town = new GenericNameGenerator();\n    }\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class DwarfSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"dwarf\";\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    const prefixes = [\n        \"BATTLE\",\n        \"BROAD\",\n        \"COPPER\",\n        \"FIRE\",\n        \"GEM\",\n        \"GOLD\",\n        \"INGOT\",\n        \"JADE\",\n        \"OAK\",\n        \"ONYX\",\n        \"ROCK\",\n        \"RUBY\",\n        \"SILVER\",\n        \"STEEL\",\n        \"STONE\",\n    ];\n    const suffixes = [\n        \"BANE\",\n        \"BEARD\",\n        \"BREWER\",\n        \"CHIN\",\n        \"FALL\",\n        \"FOOT\",\n        \"GRIP\",\n        \"HAMMER\",\n        \"HILL\",\n        \"MOUNTAIN\",\n        \"RIVER\",\n        \"TUNNEL\",\n    ];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"pvRINv\",\n        \"pWvlINA\",\n        \"pvlInv\",\n        \"THvlIn\",\n        \"pvMLInA\",\n        \"pvNLInA\",\n        \"pvFURA\",\n        \"pvFvlA\",\n        \"slvlINA\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"pvRIN\",\n        \"pWvlIN\",\n        \"pvlIN\",\n        \"THvlIN\",\n        \"THvlIM\",\n        \"pvMLI\",\n        \"pvNLI\",\n        \"plxIN\",\n        \"pvFUR\",\n        \"pvFvl\",\n        \"slvlIN\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class ElfSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"elf\";\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vlpvlvn\"];\n    let prefixes = [\n        \"WHITE\",\n        \"GREEN\",\n        \"BLUE\",\n        \"WILD\",\n        \"SUMMER\",\n        \"WINTER\",\n        \"WIND\",\n        \"BEACH\",\n        \"DAWN\",\n        \"DUSK\",\n        \"SKY\",\n        \"NIGHT\",\n    ];\n    let suffixes = [\n        \"FLOWER\",\n        \"WALKER\",\n        \"SONG\",\n        \"RUNNER\",\n        \"CROWN\",\n        \"BLOSSOM\",\n        \"BELL\",\n        \"WATCHER\",\n        \"GUARD\",\n        \"STAR\",\n        \"GROVE\",\n    ];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vlpvlvnA\",\n        \"pvLvDRIEL\",\n        \"pvLvTHRIEL\",\n        \"vlWEN\",\n        \"vlvnwA\",\n        \"vlvnwE\",\n        \"vLLUvn\",\n        \"vsvLME\",\n        \"cvlwEN\",\n        \"vnovMIEL\",\n        \"vlIxN\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vlpvlvn\",\n        \"vnvnvnpv\",\n        \"pARvTHION\",\n        \"vlMIEL\",\n        \"vlMvRION\",\n        \"vRvnoUR\",\n        \"vNxlION\",\n        \"vNDxRIL\",\n        \"vNDxNE\",\n        \"vRvNxRE\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class HalflingSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"halfling\";\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"BvdvnS\", \"pvMpu\"];\n    const prefixes = [\n        \"BRANDY\",\n        \"FEATHER\",\n        \"HAIRY\",\n        \"HOG\",\n        \"HORN\",\n        \"LITTLE\",\n        \"LONG\",\n        \"OAK\",\n        \"OLD\",\n        \"PROUD\",\n        \"PUDDI\",\n        \"SWIFT\",\n        \"UNDER\",\n        \"WANDER\",\n        \"WHIT\",\n    ];\n    const suffixes = [\"BELLY\", \"BOTTOM\", \"DALE\", \"FOOT\", \"HOUSE\", \"PEN\", \"WOOD\", \"WORT\"];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"oEOnY\", \"oEARL\", \"pELInDA\", \"mvlvnoA\", \"plvSovn\", \"Mvovlpvlo\", \"pvfvnA\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"BvlBv\", \"svnwvsE\", \"pvPPvn\", \"pvlvplvn\", \"wvnflvo\", \"pvlnO\", \"vovlpvRT\"];\n    return gen;\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class HumanSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"human\";\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"pv+PER\",\n        \"sLvTCHER\",\n        \"svRRIER\",\n        \"pvnDElSON\",\n        \"pvnDElS\",\n        \"vvpSBURG\",\n        \"vvpSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vcpLAND\",\n        \"vcpLvND\",\n        \"vcfFORD\",\n        \"vcnFvRD\",\n    ];\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vnvlA\", \"vnv\", \"vc+vlvN\", \"vlvnA\", \"vcnvA\", \"cvlvNIA\", \"cvlvNA\", \"pySSvka\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vFFlvn\",\n        \"cvclvn\",\n        \"vpvlvn\",\n        \"cvLLvvn\",\n        \"cvlvpul\",\n        \"vp+vl\",\n        \"pvspvn\",\n        \"pulvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n    ];\n    return gen;\n}\n"],"names":["GeneratorSet","GenericNameGenerator","DwarfSet","family","female","male","gen","prefixes","suffixes","i","j","ElfSet","HalflingSet","HumanSet"],"mappings":"yDAEe,MAAMA,CAAa,CAC9B,aAAc,CACV,KAAK,KAAO,GACZ,KAAK,QAAU,IAAIC,EACnB,KAAK,QAAU,IAAIA,EACnB,KAAK,OAAS,IAAIA,EAClB,KAAK,OAAS,IAAIA,EAClB,KAAK,KAAO,IAAIA,EAChB,KAAK,KAAO,IAAIA,CACnB,CACL,CCTe,MAAMC,UAAiBF,CAAa,CAC/C,aAAc,CACV,QACA,KAAK,KAAO,QACZ,KAAK,OAASG,IACd,KAAK,OAASC,IACd,KAAK,KAAOC,GACf,CACL,CACA,SAASF,GAAS,CACd,IAAIG,EAAM,IAAIL,EACd,MAAMM,EAAW,CACb,SACA,QACA,SACA,OACA,MACA,OACA,QACA,OACA,MACA,OACA,OACA,OACA,SACA,QACA,OACR,EACUC,EAAW,CACb,OACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,WACA,QACA,QACR,EACI,QAASC,EAAI,EAAGA,EAAIF,EAAS,OAAQE,IACjC,QAASC,EAAI,EAAGA,EAAIF,EAAS,OAAQE,IACjCJ,EAAI,SAAS,KAAKC,EAASE,CAAC,EAAID,EAASE,CAAC,CAAC,EAGnD,OAAOJ,CACX,CACA,SAASF,GAAS,CACd,IAAIE,EAAM,IAAIL,EACd,OAAAK,EAAI,SAAW,CACX,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACR,EACWA,CACX,CACA,SAASD,GAAO,CACZ,IAAIC,EAAM,IAAIL,EACd,OAAAK,EAAI,SAAW,CACX,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACR,EACWA,CACX,CChFe,MAAMK,UAAeX,CAAa,CAC7C,aAAc,CACV,QACA,KAAK,KAAO,MACZ,KAAK,OAASG,IACd,KAAK,OAASC,IACd,KAAK,KAAOC,GACf,CACL,CACA,SAASF,GAAS,CACd,IAAIG,EAAM,IAAIL,EACdK,EAAI,SAAW,CAAC,SAAS,EACzB,IAAIC,EAAW,CACX,QACA,QACA,OACA,OACA,SACA,SACA,OACA,QACA,OACA,OACA,MACA,OACR,EACQC,EAAW,CACX,SACA,SACA,OACA,SACA,QACA,UACA,OACA,UACA,QACA,OACA,OACR,EACI,QAASC,EAAI,EAAGA,EAAIF,EAAS,OAAQE,IACjC,QAASC,EAAI,EAAGA,EAAIF,EAAS,OAAQE,IACjCJ,EAAI,SAAS,KAAKC,EAASE,CAAC,EAAID,EAASE,CAAC,CAAC,EAGnD,OAAOJ,CACX,CACA,SAASF,GAAS,CACd,IAAIE,EAAM,IAAIL,EACd,OAAAK,EAAI,SAAW,CACX,WACA,YACA,aACA,QACA,SACA,SACA,SACA,SACA,SACA,WACA,OACR,EACWA,CACX,CACA,SAASD,GAAO,CACZ,IAAIC,EAAM,IAAIL,EACd,OAAAK,EAAI,SAAW,CACX,UACA,WACA,YACA,SACA,WACA,UACA,UACA,UACA,SACA,SACR,EACWA,CACX,CC9Ee,MAAMM,UAAoBZ,CAAa,CAClD,aAAc,CACV,QACA,KAAK,KAAO,WACZ,KAAK,OAASG,IACd,KAAK,OAASC,IACd,KAAK,KAAOC,GACf,CACL,CACA,SAASF,GAAS,CACd,IAAIG,EAAM,IAAIL,EACdK,EAAI,SAAW,CAAC,SAAU,OAAO,EACjC,MAAMC,EAAW,CACb,SACA,UACA,QACA,MACA,OACA,SACA,OACA,MACA,MACA,QACA,QACA,QACA,QACA,SACA,MACR,EACUC,EAAW,CAAC,QAAS,SAAU,OAAQ,OAAQ,QAAS,MAAO,OAAQ,MAAM,EACnF,QAASC,EAAI,EAAGA,EAAIF,EAAS,OAAQE,IACjC,QAASC,EAAI,EAAGA,EAAIF,EAAS,OAAQE,IACjCJ,EAAI,SAAS,KAAKC,EAASE,CAAC,EAAID,EAASE,CAAC,CAAC,EAGnD,OAAOJ,CACX,CACA,SAASF,GAAS,CACd,IAAIE,EAAM,IAAIL,EACd,OAAAK,EAAI,SAAW,CAAC,QAAS,QAAS,UAAW,UAAW,UAAW,YAAa,QAAQ,EACjFA,CACX,CACA,SAASD,GAAO,CACZ,IAAIC,EAAM,IAAIL,EACd,OAAAK,EAAI,SAAW,CAAC,QAAS,UAAW,SAAU,WAAY,UAAW,QAAS,UAAU,EACjFA,CACX,CC9Ce,MAAMO,UAAiBb,CAAa,CAC/C,aAAc,CACV,QACA,KAAK,KAAO,QACZ,KAAK,OAASG,IACd,KAAK,OAASC,IACd,KAAK,KAAOC,GACf,CACL,CACA,SAASF,GAAS,CACd,IAAIG,EAAM,IAAIL,EACd,OAAAK,EAAI,SAAW,CACX,UACA,UACA,UACA,QACA,SACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,UACA,UACA,UACA,UACA,SACR,EACWA,CACX,CACA,SAASF,GAAS,CACd,IAAIE,EAAM,IAAIL,EACd,OAAAK,EAAI,SAAW,CAAC,QAAS,MAAO,UAAW,QAAS,QAAS,UAAW,SAAU,SAAS,EACpFA,CACX,CACA,SAASD,GAAO,CACZ,IAAIC,EAAM,IAAIL,EACd,OAAAK,EAAI,SAAW,CACX,SACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,SACA,QACR,EACWA,CACX","x_google_ignoreList":[0,1,2,3,4]}