var C=Object.defineProperty;var T=(h,i,r)=>i in h?C(h,i,{enumerable:!0,configurable:!0,writable:!0,value:r}):h[i]=r;var f=(h,i,r)=>(T(h,typeof i!="symbol"?i+"":i,r),r);import"./index.ffc0792f.js";import{b as O,r as _}from"./index.f6302111.js";import{w as M,r as t,a as m}from"./index.7337e42a.js";import{P as R,b as B}from"./generator.8036774f.js";import{g as k}from"./lodash.b6127185.js";function q(){return k(["pvn","pvnvn","pvnvv","slvnvn","lvfv","lvfvn","tvtv","pvtv+n","pvtv+","pv+c+v","tv+c+v","slv+c+vv","pvnvlv","pvnvlvnv","svnvlvnv","pv+llvlv","pvpvpv+n","slv+c+v+n","slvc+vn","slvc+vnv","slvpvpv","slvpv+pv"])}class F{constructor(){f(this,"name");f(this,"color");f(this,"description");f(this,"classification");f(this,"radius");f(this,"mass");f(this,"temperature");f(this,"luminosity");this.name="",this.color="",this.description="",this.classification="",this.radius=0,this.mass=0,this.temperature=0,this.luminosity=0}getColorFromTemperature(){return this.temperature<3700?"red":this.temperature<5200?"orange":this.temperature<6e3?"yellow":this.temperature<7500?"yellow-white":this.temperature<1e4?"white":this.temperature<3e4?"blue-white":"blue"}}class D{constructor(){f(this,"name");f(this,"description");f(this,"stars");f(this,"planets");this.name="",this.description="",this.stars=[],this.planets=[]}}class g{constructor(i,r,e,a,u,o,l,c,s,n){f(this,"name");f(this,"radius_min");f(this,"radius_max");f(this,"mass_min");f(this,"mass_max");f(this,"temperature_min");f(this,"temperature_max");f(this,"luminosity_min");f(this,"luminosity_max");f(this,"commonality");this.name=i,this.radius_min=r,this.radius_max=e,this.mass_min=a,this.mass_max=u,this.temperature_min=o,this.temperature_max=l,this.luminosity_min=c,this.luminosity_max=s,this.commonality=n}}function V(){return[new g("main sequence",.1,.5,.1,.5,2e3,4e3,.01,.05,40),new g("main sequence",.6,.9,.6,.8,4e3,5e3,.1,.8,45),new g("main sequence",.9,1.1,.8,1.3,5e3,6e3,.8,3,60),new g("main sequence",1.1,1.5,1.3,1.8,6e3,8e3,3,8,30),new g("main sequence",1.5,4,1.8,5,8e3,15e3,15,25,10),new g("main sequence",4,6,8,12,15e3,25e3,900,1100,5),new g("main sequence",8,12,45,55,35e3,45e3,9e4,11e4,1),new g("giant",10,50,1,5,3e3,1e4,50,1e3,2),new g("supergiant",30,500,10,70,4e3,4e4,3e4,1e6,1)]}class P{constructor(){f(this,"possibleClassifications");this.possibleClassifications=V()}}class A{constructor(i){f(this,"config");this.config=i}generate(){const i=M(this.config.possibleClassifications),r=new F;r.classification=i.name,r.radius=t.float(i.radius_min,i.radius_max)*695508,r.mass=t.float(i.mass_min,i.mass_max)*1.989,r.temperature=t.int(i.temperature_min,i.temperature_max),r.luminosity=t.float(i.luminosity_min,i.luminosity_max)*3.828,r.color=r.getColorFromTemperature();const e=O(r.color);return r.description=`This is ${e} ${r.color} ${r.classification} star.`,r.name=q(),r}}class N{constructor(){f(this,"minPlanets");f(this,"maxPlanets");this.minPlanets=3,this.maxPlanets=12}}class E{constructor(i){f(this,"config");this.config=i}generate(){let i=new D,r=new P;const a=new A(r).generate();i.name=a.name,i.stars.push(a);const u=t.int(this.config.minPlanets,this.config.maxPlanets);let o=new B,l=new R(o);for(let s=0;s<u;s++){const n=l.generate();i.planets.push(n)}i.planets.sort(function(s,n){return s.distance_from_sun<n.distance_from_sun?-1:s.distance_from_sun>n.distance_from_sun?1:0});for(let s=0;s<i.planets.length;s++)i.planets[s].is_inhabited||(i.planets[s].name=i.name+" "+_(s+1));return i.description=`The ${i.name} system has ${u} planets`,t.int(1,100)>70?i.description+=" and an asteroid belt.":i.description+=".",i}}class G{constructor(i,r){f(this,"width");f(this,"height");this.width=i,this.height=r}render(){let i='<svg width="'+this.width+'" height="'+this.height+'" viewBox="0 0 '+this.width+" "+this.height+'">';i+='<rect width="'+this.width+'" height="'+this.height+'" fill="black" />';const r=Math.floor(this.width*this.height*.005);for(let e=0;e<r;e++){const a=t.int(0,this.width),u=t.int(0,this.height);i+='<rect x="'+a+'" y="'+u+'" width="1" height="1" fill="'+$()+'" />'}return i+="</svg>",i}}function $(){const h=t.int(80,180);let i=h,r=h,e=h,a=!1;return t.int(1,100)>70&&a===!1&&(e+=t.int(10,20),a=!0),t.int(1,100)>70&&a==!1&&(i+=t.int(10,20),a=!0),t.int(1,100)>70&&a==!1&&(r+=t.int(10,20),a=!0),"rgb("+i+","+r+","+e+")"}class J{constructor(i,r){f(this,"width");f(this,"height");this.height=r,this.width=i}render(i){const r=L(i.classification.name),e=r.renderSVG();let a="medium";i.diameter<8e3?a="small":i.diameter>19e3&&(a="large");const u=Math.floor(this.width/2),o=Math.floor(this.height/2),l=t.int(0,1e3),c=Math.min(this.width,this.height);let s=0;const n=(i.diameter-i.classification.diameter_min)/(i.classification.diameter_max-i.classification.diameter_min);let d=.8,b=.9;a==="small"?(d=.2,b=.4):a==="medium"&&(d=.5,b=.7);let x=(b-d)*n+d;s=Math.floor(c)*x/2;const y=Math.floor(s*1.1),v=new G(this.width,this.height).render();let p='<svg width="'+this.width+'" height="'+this.height+'" viewBox="0 0 '+this.width+" "+this.height+'">';return p+="<defs>",p+='<radialGradient id="atmosphere-'+l+'"><stop offset="95%" stop-color="'+r.atmosphereColor+'" stop-opacity="0.8" /><stop offset="100%" stop-color="rgb(255,255,255)" stop-opacity="0" /></radialGradient>',p+='<radialGradient id="planetShadow" cx="0.5" cy="0.5" r="0.75" fx="0.275" fy="0.275"><stop offset="0%" stop-color="rgb(0,0,0)" stop-opacity="0" /><stop offset="80%" stop-color="rgb(0,0,70)" stop-opacity="0.8" /><stop offset="90%" stop-color="rgb(0,0,0)" stop-opacity="0.8" /><stop offset="100%" stop-color="rgb(0,00,40)" stop-opacity="0.6" /></radialGradient>',p+='<pattern id="planetTexture-'+l+'" x="0" y="0" width="1" height="1">'+e+"</pattern>",p+="</defs>",p+=v,i.has_atmosphere&&(p+='<circle cx="'+u+'" cy="'+o+'" r="'+y+'" fill="url(#atmosphere-'+l+')" />'),p+='<circle cx="'+u+'" cy="'+o+'" r="'+s+'" fill="url(#planetTexture-'+l+')" />',p+='<circle cx="'+u+'" cy="'+o+'" r="'+s+'" fill="url(#planetShadow)" />',p}}function L(h){const i=[{name:"barren",hasAtmosphere:!1,atmosphereColor:"blue",renderSVG:function(){const r=m(4);let e='<svg x="0" y="0" width="256" height="256" viewBox="0 0 256 256">';e+="<defs>",e+='<radialGradient id="craterTrough'+r+'" cx="0.6" cy="0.6" fx="0.4" fy="0.4"><stop offset="0%" stop-color="rgb(170,170,170)" /><stop offset="5%" stop-color="rgb(150,150,150)" /><stop offset="95%" stop-color="rgb(150,150,150)" stop-opacity="0" /><stop offset="100%" stop-color="rgb(110,110,110)" /></radialGradient>',e+='<filter id="barrenTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.05" numOctaves="2" result="turbulence"/><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="15" xChannelSelector="R" yChannelSelector="G" /></filter>',e+="</defs>",e+='<rect x="0" y="0" width="256" height="256" fill="rgb(150,150,150)" />';const a=t.int(6,14);for(let o=0;o<a;o++){const l=t.int(1,90),c=t.int(1,90),s=t.int(10,20),n=t.int(110,170);e+='<circle cx="'+l+'" cy="'+c+'" r="'+s+'" fill="rgb('+n+", "+n+", "+n+')" filter="url(#barrenTexture'+r+')" />'}const u=t.int(55,80);for(let o=0;o<u;o++){const l=t.int(20,200),c=t.int(20,200),s=t.int(3,8),n='<circle cx="'+l+'" cy="'+c+'" r="'+s+'" fill="url(#craterTrough'+r+')" />';e+=n}return e+="</svg>",e}},{name:"arid",hasAtmosphere:!0,atmosphereColor:"rgb(170,224,211)",renderSVG:function(){const r=m(4);let e='<svg x="0" y="0" width="256" height="256" viewBox="0 0 256 256">';e+="<defs>",e+='<radialGradient id="aridCrater'+r+'" cx="0.6" cy="0.6" fx="0.4" fy="0.4"><stop offset="0%" stop-color="rgb(237,220,151)" /><stop offset="5%" stop-color="rgb(227,210,141)" /><stop offset="95%" stop-color="rgb(217,200,131)" stop-opacity="0" /><stop offset="100%" stop-color="rgb(197,190,121)" /></radialGradient>',e+='<filter id="aridTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.05" numOctaves="2" result="turbulence"/><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="15" xChannelSelector="R" yChannelSelector="G" /></filter>',e+="</defs>",e+='<rect x="0" y="0" width="256" height="256" fill="rgb(227,210,141)" />';const a=t.int(6,14);for(let o=0;o<a;o++){const l=t.int(1,90),c=t.int(1,90),s=t.int(10,20),n=t.int(-10,20);e+='<circle cx="'+l+'" cy="'+c+'" r="'+s+'" fill="rgb('+(227+n)+", "+(210+n)+", "+(141+n)+')" filter="url(#aridTexture'+r+')" />'}const u=t.int(25,30);for(let o=0;o<u;o++){const l=t.int(20,200),c=t.int(20,200),s=t.int(3,8),n='<circle cx="'+l+'" cy="'+c+'" r="'+s+'" fill="url(#aridCrater'+r+')" />';e+=n}return e+="</svg>",e}},{name:"garden",hasAtmosphere:!0,atmosphereColor:"blue",renderSVG:function(){const r=m(4);let e='<svg x="0" y="0" width="256" height="256" viewBox="0 0 256 256">';e+="<defs>",e+='<radialGradient id="gardenContinentGradient'+r+'"><stop offset="0%" stop-color="rgb(130,181,91)" /><stop offset="100%" stop-color="rgb(120,153,55)" /></radialGradient>',e+='<filter id="gardenTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.05" numOctaves="2" result="turbulence"/><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="15" xChannelSelector="R" yChannelSelector="G" /></filter>',e+='<filter id="cloudTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.45" numOctaves="2" result="turbulence" /><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="30" xChannelSelector="R" yChannelSelector="G" /><feGaussianBlur stdDeviation="0.2" /></filter>',e+="</defs>",e+='<rect x="0" y="0" width="256" height="256" fill="rgb(36,27,161)" />';const a=t.int(7,18);for(let o=0;o<a;o++){const l=t.int(1,90),c=t.int(1,90),s=t.int(5,30);e+='<circle cx="'+l+'" cy="'+c+'" r="'+s+'" fill="url(#gardenContinentGradient'+r+')" filter="url(#gardenTexture'+r+')" />'}const u=t.int(20,30);for(let o=0;o<u;o++){const l=t.int(15,100),c=t.int(15,100),s=t.int(5,13),n=t.int(5,9);e+='<ellipse cx="'+l+'" cy="'+c+'" rx="'+s+'" ry="'+n+'" fill="white" filter="url(#cloudTexture'+r+')" />'}return e+="</svg>",e}},{name:"jungle",hasAtmosphere:!0,atmosphereColor:"blue",renderSVG:function(){const r=m(4);let e='<svg x="0" y="0" width="256" height="256" viewBox="0 0 256 256">';e+="<defs>",e+='<linearGradient id="jungleLakeGradient'+r+'"><stop offset="0%" stop-color="rgb(17,109,128)" /><stop offset="100%" stop-color="rgb(7,99,118)" /></linearGradient>',e+='<filter id="jungleTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.05" numOctaves="2" result="turbulence"/><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="15" xChannelSelector="R" yChannelSelector="G" /></filter>',e+='<filter id="cloudTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.2" numOctaves="2" result="turbulence" /><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="30" xChannelSelector="R" yChannelSelector="G" /><feGaussianBlur stdDeviation="0.1" /></filter>',e+="</defs>",e+='<rect x="0" y="0" width="256" height="256" fill="rgb(8,94,40)" />';const a=t.int(6,14);for(let l=0;l<a;l++){const c=t.int(1,90),s=t.int(1,90),n=t.int(10,20),d=t.int(-10,20);e+='<circle cx="'+c+'" cy="'+s+'" r="'+n+'" fill="rgb('+(10+d)+", "+(96+d)+", "+(42+d)+')" filter="url(#jungleTexture'+r+')" />'}const u=t.int(4,7);for(let l=0;l<u;l++){const c=t.int(1,90),s=t.int(1,90),n=t.int(5,10);e+='<circle cx="'+c+'" cy="'+s+'" r="'+n+'" fill="url(#jungleLakeGradient'+r+')" filter="url(#jungleTexture'+r+')" />'}const o=t.int(40,60);for(let l=0;l<o;l++){const c=t.int(15,100),s=t.int(15,100),n=t.int(5,9),d=t.int(5,9);e+='<ellipse cx="'+c+'" cy="'+s+'" rx="'+n+'" ry="'+d+'" fill="white" filter="url(#cloudTexture'+r+')" />'}return e+="</svg>",e}},{name:"swamp",hasAtmosphere:!0,atmosphereColor:"blue",renderSVG:function(){const r=m(4);let e='<svg x="0" y="0" width="256" height="256" viewBox="0 0 256 256">';e+="<defs>",e+='<linearGradient id="swampLakeGradient'+r+'"><stop offset="0%" stop-color="rgb(17,109,128)" /><stop offset="100%" stop-color="rgb(7,99,118)" /></linearGradient>',e+='<filter id="swampTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.05" numOctaves="2" result="turbulence"/><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="15" xChannelSelector="R" yChannelSelector="G" /></filter>',e+='<filter id="cloudTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.2" numOctaves="2" result="turbulence" /><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="30" xChannelSelector="R" yChannelSelector="G" /><feGaussianBlur stdDeviation="0.1" /></filter>',e+="</defs>",e+='<rect x="0" y="0" width="256" height="256" fill="rgb(8,94,40)" />';const a=t.int(6,14);for(let l=0;l<a;l++){const c=t.int(1,90),s=t.int(1,90),n=t.int(10,20),d=t.int(-10,20);e+='<circle cx="'+c+'" cy="'+s+'" r="'+n+'" fill="rgb('+(10+d)+", "+(96+d)+", "+(42+d)+')" filter="url(#swampTexture'+r+')" />'}const u=t.int(4,7);for(let l=0;l<u;l++){const c=t.int(1,90),s=t.int(1,90),n=t.int(5,10);e+='<circle cx="'+c+'" cy="'+s+'" r="'+n+'" fill="url(#swampLakeGradient'+r+')" filter="url(#swampTexture'+r+')" />'}const o=t.int(40,60);for(let l=0;l<o;l++){const c=t.int(15,100),s=t.int(15,100),n=t.int(5,9),d=t.int(5,9);e+='<ellipse cx="'+c+'" cy="'+s+'" rx="'+n+'" ry="'+d+'" fill="white" filter="url(#cloudTexture'+r+')" />'}return e+="</svg>",e}},{name:"volcanic",hasAtmosphere:!0,atmosphereColor:"rgb(224,153,47)",renderSVG:function(){const r=m(4);let e='<svg x="0" y="0" width="256" height="256" viewBox="0 0 256 256">';e+="<defs>",e+='<radialGradient id="volcanicCrater'+r+'" cx="0.6" cy="0.6" fx="0.4" fy="0.4"><stop offset="0%" stop-color="rgb(67,50,45)" /><stop offset="5%" stop-color="rgb(57,40,35)" /><stop offset="95%" stop-color="rgb(47,30,25)" stop-opacity="0" /><stop offset="100%" stop-color="rgb(37,20,15)" /></radialGradient>',e+='<filter id="volcanicTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.05" numOctaves="2" result="turbulence"/><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="15" xChannelSelector="R" yChannelSelector="G" /></filter>',e+="</defs>",e+='<rect x="0" y="0" width="256" height="256" fill="rgb(57,40,35)" />';const a=t.int(6,14);for(let o=0;o<a;o++){const l=t.int(1,90),c=t.int(1,90),s=t.int(10,20),n=t.int(-10,20);e+='<circle cx="'+l+'" cy="'+c+'" r="'+s+'" fill="rgb('+(57+n)+", "+(40+n)+", "+(35+n)+')" filter="url(#volcanicTexture'+r+')" />'}const u=t.int(26,30);for(let o=0;o<u;o++){const l=t.int(1,90),c=t.int(1,90),s=t.int(1,4),n=t.int(-10,20);e+='<circle cx="'+l+'" cy="'+c+'" r="'+s+'" fill="rgb('+(235+n)+", "+(132+n)+", "+(5+n)+')" filter="url(#volcanicTexture'+r+')" />'}return e+="</svg>",e}},{name:"gas giant",hasAtmosphere:!1,atmosphereColor:"blue",renderSVG:function(){const r=m(4);let e='<svg x="0" y="0" width="256" height="256" viewBox="0 0 256 256">';e+="<defs>",e+='<filter id="bandFilter'+r+'"><feTurbulence type="turbulence" baseFrequency="0.05" numOctaves="2" result="turbulence"/><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="15" xChannelSelector="R" yChannelSelector="G" /></filter>',e+="</defs>";const a=t.int(10,16);let u=256;const o=t.int(60,255),l=t.int(60,255),c=t.int(60,255),s="rgb("+o+","+l+","+c+")";let n="";for(let d=0;d<a;d++){const b=t.int(0,5),x=t.int(3,15),y=256-u+x+b,w=o+t.int(-30,30),v=l+t.int(-30,30),p=c+t.int(-30,30),S='<rect x="0" y="'+y+'" width="256" height="'+x+'" fill="rgb('+w+", "+v+", "+p+')" filter="url(#bandFilter'+r+')" />';n+=S,u-=x-b}return e+='<rect x="0" y="0" width="256" height="256" fill="'+s+'" />',e+=n,e+="</svg>",e}},{name:"toxic",hasAtmosphere:!0,atmosphereColor:"rgb(171,224,45)",renderSVG:function(){const r=m(4);let e='<svg x="0" y="0" width="256" height="256" viewBox="0 0 256 256">';e+="<defs>",e+='<linearGradient id="toxicLakeGradient'+r+'"><stop offset="0%" stop-color="rgb(152,222,52)" /><stop offset="100%" stop-color="rgb(172,232,67)" /></linearGradient>',e+='<filter id="toxicTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.05" numOctaves="2" result="turbulence"/><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="15" xChannelSelector="R" yChannelSelector="G" /></filter>',e+="</defs>",e+='<rect x="0" y="0" width="256" height="256" fill="rgb(168,155,39)" />';const a=t.int(6,14);for(let o=0;o<a;o++){const l=t.int(1,90),c=t.int(1,90),s=t.int(10,20),n=t.int(-10,20);e+='<circle cx="'+l+'" cy="'+c+'" r="'+s+'" fill="rgb('+(168+n)+", "+(155+n)+", "+(39+n)+')" filter="url(#toxicTexture'+r+')" />'}const u=t.int(4,7);for(let o=0;o<u;o++){const l=t.int(1,90),c=t.int(1,90),s=t.int(10,20);e+='<circle cx="'+l+'" cy="'+c+'" r="'+s+'" fill="url(#toxicLakeGradient'+r+')" filter="url(#toxicTexture'+r+')" />'}return e+="</svg>",e}},{name:"ice",hasAtmosphere:!0,atmosphereColor:"rgb(125,229,255)",renderSVG:function(){const r=m(4);let e='<svg x="0" y="0" width="256" height="256" viewBox="0 0 256 256">';e+="<defs>",e+='<radialGradient id="iceCrater'+r+'" cx="0.6" cy="0.6" fx="0.4" fy="0.4"><stop offset="0%" stop-color="rgb(234,255,255)" /><stop offset="5%" stop-color="rgb(224,250,255)" /><stop offset="95%" stop-color="rgb(214,240,245)" stop-opacity="0" /><stop offset="100%" stop-color="rgb(204,230,235)" /></radialGradient>',e+='<filter id="iceTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.05" numOctaves="2" result="turbulence"/><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="15" xChannelSelector="R" yChannelSelector="G" /></filter>',e+="</defs>",e+='<rect x="0" y="0" width="256" height="256" fill="rgb(224,250,255)" />';const a=t.int(6,14);for(let u=0;u<a;u++){const o=t.int(1,90),l=t.int(1,90),c=t.int(10,20),s=t.int(0,20);e+='<circle cx="'+o+'" cy="'+l+'" r="'+c+'" fill="rgb('+(210+s)+", "+(230+s)+", "+(235+s)+')" filter="url(#iceTexture'+r+')" />'}return e+="</svg>",e}},{name:"ocean",hasAtmosphere:!0,atmosphereColor:"blue",renderSVG:function(){const r=m(4);let e='<svg x="0" y="0" width="256" height="256" viewBox="0 0 256 256">';e+="<defs>",e+='<radialGradient id="oceanGradient'+r+'" cx="0.5" cy="0.5"><stop offset="0%" stop-color="rgb(45,14,201)" /><stop offset="100%" stop-color="rgb(95,117,227)" />',e+='<filter id="cloudTexture'+r+'"><feTurbulence type="turbulence" baseFrequency="0.2" numOctaves="2" result="turbulence" /><feDisplacementMap in2="turbulence" in="SourceGraphic" scale="30" xChannelSelector="R" yChannelSelector="G" /><feGaussianBlur stdDeviation="0.1" /></filter>',e+="</defs>",e+='<rect x="0" y="0" width="256" height="256" fill="url(#oceanGradient'+r+')" />',e+="</svg>";const a=t.int(20,30);for(let u=0;u<a;u++){const o=t.int(15,100),l=t.int(15,100),c=t.int(5,9),s=t.int(5,9);e+='<ellipse cx="'+o+'" cy="'+l+'" rx="'+c+'" ry="'+s+'" fill="white" filter="url(#cloudTexture'+r+')" />'}return e}}];for(let r=0;r<i.length;r++)if(i[r].name==h)return i[r];return i[0]}class K{constructor(i,r){f(this,"width");f(this,"height");this.width=i,this.height=r}render(i){let r="";i.color=="red"?r="rgb(255,43,10)":i.color=="orange"?r="rgb(255,146,20)":i.color=="yellow"?r="rgb(255,223,18)":i.color=="yellow-white"?r="rgb(251, 255, 168)":i.color=="white"?r="rgb(255,255,255)":i.color=="blue-white"?r="rgb(198, 243, 247)":i.color=="blue"&&(r="rgb(59,118,255)");const e=Math.floor(this.width/2),a=Math.floor(this.height/2),u=Math.min(this.width,this.height);let o=Math.floor(u)*t.float(.2,.4)/2;i.classification=="main sequence"?o=Math.floor(u)*t.float(.6,.7)/2:i.classification=="giant"?o=Math.floor(u)*t.float(.8,.9)/2:i.classification=="supergiant"&&(o=Math.floor(u)*t.float(.9,1.1)/2);const l=Math.floor(o*1.4),s=new G(this.width,this.height).render();let n='<svg width="'+this.width+'" height="'+this.height+'" viewBox="0 0 '+this.width+" "+this.height+'">';return n+='<defs><radialGradient id="starglow"><stop offset="60%" stop-color="'+r+'" stop-opacity="0.8" /><stop offset="100%" stop-color="rgb(255,255,255)" stop-opacity="0" /></radialGradient></defs>',n+='<filter id="starSurface">',n+='<feFlood x="0%" y="0%" width="100%" height="100%" flood-color="'+r+'" result="base" />',n+='<feTurbulence type="fractalNoise" baseFrequency="0.05" numOctaves="2" result="noise" />',n+='<feBlend in2="base" in="noise" mode="multiply" />',n+="</filter>",n+=`<mask id="starMask"><circle cx="${e}" cy="${a}" r="${o}" fill="white" /></mask>`,n+=s,n+='<circle cx="'+e+'" cy="'+a+'" r="'+l+'" fill="url(#starglow)" />',n+='<circle cx="'+e+'" cy="'+a+'" r="'+o+'" fill="'+r+'" filter="url(#starSurface)" mask="url(#starMask)" />',n+="</svg>",n}}export{E as S,N as a,J as b,K as c};
//# sourceMappingURL=star-svg.45890603.js.map
