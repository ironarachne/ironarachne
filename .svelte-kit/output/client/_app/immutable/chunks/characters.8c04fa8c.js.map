{"version":3,"file":"characters.8c04fa8c.js","sources":["../../../../../../node_modules/@ironarachne/made-up-names/dist/cultures/elvish.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/cultures/fantasy.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/cultures/germanic.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/cultures/japanish.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/cultures.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/dragonborn.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/gnome.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/half_elf.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/half_orc.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races/tiefling.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/races.js","../../../../../../node_modules/@ironarachne/made-up-names/dist/generator_sets.js","../../../../../../src/lib/archetypes/archetypes.ts","../../../../../../src/lib/physical_traits/physical_traits.ts","../../../../../../src/lib/species/animals/ape.ts","../../../../../../src/lib/species/animals/axe_beak.ts","../../../../../../src/lib/species/animals/baboon.ts","../../../../../../src/lib/species/animals/badger.ts","../../../../../../src/lib/species/animals/bat.ts","../../../../../../src/lib/species/animals/bear.ts","../../../../../../src/lib/species/animals/blink_dog.ts","../../../../../../src/lib/species/animals/boar.ts","../../../../../../src/lib/species/animals/camel.ts","../../../../../../src/lib/species/animals/cat.ts","../../../../../../src/lib/species/animals/cow.ts","../../../../../../src/lib/species/animals/crocodile.ts","../../../../../../src/lib/species/animals/dog.ts","../../../../../../src/lib/species/animals/eagle.ts","../../../../../../src/lib/species/animals/elk.ts","../../../../../../src/lib/species/animals/goat.ts","../../../../../../src/lib/species/animals/horse.ts","../../../../../../src/lib/species/animals/lion.ts","../../../../../../src/lib/species/animals/rat.ts","../../../../../../src/lib/species/animals/snake.ts","../../../../../../src/lib/species/animals/wolf.ts","../../../../../../src/lib/species/demons/dretch.ts","../../../../../../src/lib/species/demons/hell_hound.ts","../../../../../../src/lib/species/demons/imp.ts","../../../../../../src/lib/species/demons/lemure.ts","../../../../../../src/lib/species/demons/quasit.ts","../../../../../../src/lib/species/elementals/dust_mephit.ts","../../../../../../src/lib/species/elementals/ice_mephit.ts","../../../../../../src/lib/species/elementals/magma_mephit.ts","../../../../../../src/lib/species/elementals/steam_mephit.ts","../../../../../../src/lib/species/insects/fire_beetle.ts","../../../../../../src/lib/species/insects/giant_ant.ts","../../../../../../src/lib/species/insects/giant_bee.ts","../../../../../../src/lib/species/insects/giant_beetle.ts","../../../../../../src/lib/species/insects/giant_centipede.ts","../../../../../../src/lib/species/insects/giant_dragonfly.ts","../../../../../../src/lib/species/insects/giant_scorpion.ts","../../../../../../src/lib/species/insects/giant_spider.ts","../../../../../../src/lib/species/monstrosities/cockatrice.ts","../../../../../../src/lib/species/monstrosities/darkmantle.ts","../../../../../../src/lib/species/monstrosities/gryfalcon.ts","../../../../../../src/lib/species/monstrosities/gryphon.ts","../../../../../../src/lib/species/monstrosities/harpy.ts","../../../../../../src/lib/species/monstrosities/hippogriff.ts","../../../../../../src/lib/species/monstrosities/owlbear.ts","../../../../../../src/lib/species/monstrosities/rust_monster.ts","../../../../../../src/lib/species/monstrosities/worg.ts","../../../../../../src/lib/species/oozes/black_pudding.ts","../../../../../../src/lib/species/oozes/blue_jelly.ts","../../../../../../src/lib/species/oozes/blue_slime.ts","../../../../../../src/lib/species/oozes/brown_pudding.ts","../../../../../../src/lib/species/oozes/gelatinous_cube.ts","../../../../../../src/lib/species/oozes/green_slime.ts","../../../../../../src/lib/species/oozes/grey_ooze.ts","../../../../../../src/lib/species/oozes/ochre_jelly.ts","../../../../../../src/lib/species/sentient/aarakocra.ts","../../../../../../src/lib/species/sentient/aasimar.ts","../../../../../../src/lib/species/sentient/bugbear.ts","../../../../../../src/lib/species/sentient/centaur.ts","../../../../../../src/lib/species/sentient/dark_elf.ts","../../../../../../src/lib/species/sentient/deep_gnome.ts","../../../../../../src/lib/species/sentient/dragonborn.ts","../../../../../../src/lib/species/sentient/duergar.ts","../../../../../../src/lib/species/sentient/dwarf.ts","../../../../../../src/lib/species/sentient/elf.ts","../../../../../../src/lib/species/sentient/firbolg.ts","../../../../../../src/lib/species/sentient/gnome.ts","../../../../../../src/lib/species/sentient/goblin.ts","../../../../../../src/lib/species/sentient/halfling.ts","../../../../../../src/lib/species/sentient/hobgoblin.ts","../../../../../../src/lib/species/sentient/human.ts","../../../../../../src/lib/species/sentient/orc.ts","../../../../../../src/lib/species/sentient/tiefling.ts","../../../../../../src/lib/species/sentient/troll.ts","../../../../../../src/lib/species/undead/ghoul.ts","../../../../../../src/lib/species/undead/shadow.ts","../../../../../../src/lib/species/undead/will_o_the_wisp.ts","../../../../../../src/lib/species/all.ts","../../../../../../src/lib/species/modifiers/skeleton.ts","../../../../../../src/lib/species/modifiers/vampire.ts","../../../../../../src/lib/species/modifiers/zombie.ts","../../../../../../src/lib/species/common.ts","../../../../../../src/lib/characters/personality/all_traits.ts","../../../../../../src/lib/characters/personality/personality.ts","../../../../../../src/lib/characters/titles/titles.ts","../../../../../../src/lib/characters/characters.ts"],"sourcesContent":["\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class ElvishSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"elvish\";\n        this.culture = culture();\n        this.country = country();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n        this.town = town();\n    }\n}\nfunction culture() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"(A,O)l(B,G,K)(I,U)l(O,A,E)n\",\n        \"(A,E)(M,N)I(M,N)(I,U)(M,N)pv\",\n        \"(B,G,K)(A,E)Rv(TH,l)ION\",\n        \"vl(M,N)IEL\",\n        \"vl(M,N)v(L,R)ION\",\n        \"vR(I,A)noUR\",\n        \"vNxlION\",\n        \"vNDxRIL\",\n        \"vNDxNE\",\n        \"(A,I,O)RvNxRE\",\n    ];\n    return gen;\n}\nfunction country() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"(A,O)l(B,G,K)(I,U)l(O,A,E)n\",\n        \"(A,E)(M,N)I(M,N)(I,U)(M,N)pv\",\n        \"(B,G,K)(A,E)Rv(TH,l)ION\",\n        \"vl(M,N)IEL\",\n        \"vl(M,N)v(L,R)ION\",\n        \"vR(I,A)noUR\",\n        \"vNxlION\",\n        \"vNDxRIL\",\n        \"vNDxNE\",\n        \"(A,I,O)RvNxRE\",\n    ];\n    return gen;\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vlpvlvn\"];\n    let prefixes = [\n        \"WHITE\",\n        \"GREEN\",\n        \"BLUE\",\n        \"WILD\",\n        \"SUMMER\",\n        \"WINTER\",\n        \"WIND\",\n        \"BEACH\",\n        \"DAWN\",\n        \"DUSK\",\n        \"SKY\",\n        \"NIGHT\",\n    ];\n    let suffixes = [\n        \"FLOWER\",\n        \"WALKER\",\n        \"SONG\",\n        \"RUNNER\",\n        \"CROWN\",\n        \"BLOSSOM\",\n        \"BELL\",\n        \"WATCHER\",\n        \"GUARD\",\n        \"STAR\",\n        \"GROVE\",\n    ];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vlpvlvnA\",\n        \"pvLvDRIEL\",\n        \"pvLvTHRIEL\",\n        \"vlWEN\",\n        \"vlvnwA\",\n        \"vlvnwE\",\n        \"vLLUvn\",\n        \"vsvLME\",\n        \"cvlwEN\",\n        \"vnovMIEL\",\n        \"vlIxN\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vl(D,G,K,B)vlvn\",\n        \"vnvnvnpv\",\n        \"pARv(TH,l)I(O,E)N\",\n        \"vl(M,N)IEL\",\n        \"vlMvRION\",\n        \"vRvnoUR\",\n        \"vNxlION\",\n        \"vN(D,T)xRIL\",\n        \"vN(D,T)xNE\",\n        \"vRvNxRE\",\n    ];\n    return gen;\n}\nfunction town() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vlpvlvn\",\n        \"vnvnvnpv\",\n        \"pARvTHION\",\n        \"vlMIEL\",\n        \"vlMvRION\",\n        \"vRvnoUR\",\n        \"vNxlION\",\n        \"vNDxRIL\",\n        \"vNDxNE\",\n        \"vRvNxRE\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class FantasySet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"fantasy\";\n        this.country = country();\n        this.culture = culture();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n        this.town = town();\n    }\n}\nfunction culture() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"pmlMyNmN\", \"kmlMyNm\", \"kyTHmkI\", \"pOhRAkI\"];\n    return gen;\n}\nfunction country() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"pvlvlIA\", \"lvpvpIA\", \"vnvlvpA\", \"vpvlY\", \"flvnv\", \"vfpvlION\", \"vlxRIA\"];\n    return gen;\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"kyPER\",\n        \"sLvTCHER\",\n        \"sv(RR,R)IER\",\n        \"pvn(D,T)ElS(E,O)N\",\n        \"pvnDElS\",\n        \"ypSBURG\",\n        \"ypSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vkLAND\",\n        \"yfpLmND\",\n        \"vcfFORD\",\n        \"vSnFvRD\",\n    ];\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vnvlA\", \"ynA\", \"vbvlyN\", \"vlvnA\", \"vcnvA\", \"pvlvNIA\", \"tvlvNA\", \"pvSSvkA\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"jmB\",\n        \"vFFlvn\",\n        \"evplvn\",\n        \"vpylvn\",\n        \"fvLLyn\",\n        \"fvlvpml\",\n        \"vppvl\",\n        \"pmspvn\",\n        \"pv+lvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n    ];\n    return gen;\n}\nfunction town() {\n    let gen = new GenericNameGenerator();\n    const first = [\n        \"Two\",\n        \"Three\",\n        \"Four\",\n        \"Five\",\n        \"Six\",\n        \"Seven\",\n        \"Eight\",\n        \"Nine\",\n        \"Ten\",\n        \"Twin\",\n        \"Triple\",\n        \"Black\",\n        \"White\",\n        \"Blue\",\n        \"Grey\",\n        \"Green\",\n        \"Purple\",\n        \"Red\",\n        \"Yellow\",\n    ];\n    const second = [\n        \"Barrows\",\n        \"Cliffs\",\n        \"Falls\",\n        \"Hills\",\n        \"Hollows\",\n        \"Mountains\",\n        \"Peaks\",\n        \"Ridges\",\n        \"Rivers\",\n        \"Rocks\",\n        \"Streams\",\n        \"Towers\",\n        \"Trees\",\n        \"Valleys\",\n        \"Waters\",\n    ];\n    for (let i = 0; i < first.length; i++) {\n        for (let j = 0; j < second.length; j++) {\n            gen.patterns.push(first[i].toUpperCase() + \" \" + second[j].toUpperCase());\n        }\n    }\n    let firstNameGenerator = male();\n    let firstNames = firstNameGenerator.patterns;\n    firstNameGenerator = female();\n    firstNames = firstNames.concat(firstNameGenerator.patterns);\n    const suffixes = [\n        \"Folly\",\n        \"Boon\",\n        \"Rest\",\n        \"Bequest\",\n        \"Garden\",\n        \"Repose\",\n        \"Haven\",\n        \"End\",\n        \"Pass\",\n        \"Forge\",\n        \"Bulwark\",\n    ];\n    for (let i = 0; i < firstNames.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(firstNames[i] + \"'S \" + suffixes[j].toUpperCase());\n        }\n    }\n    let patterns = [\"vlpvl\", \"tvnv\", \"lvpcv\"];\n    let additions = [\n        \"arm\",\n        \"bend\",\n        \"borough\",\n        \"bury\",\n        \"don\",\n        \"end\",\n        \"ford\",\n        \"forge\",\n        \"gale\",\n        \"glade\",\n        \"haven\",\n        \"keep\",\n        \"meet\",\n        \"rock\",\n        \"stead\",\n        \"stone\",\n        \"ton\",\n        \"town\",\n        \"vale\",\n        \"ville\",\n    ];\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < additions.length; j++) {\n            gen.patterns.push(patterns[i] + additions[j].toUpperCase());\n        }\n    }\n    patterns = [\n        \"Lake\",\n        \"River\",\n        \"Fire\",\n        \"Mountain\",\n        \"Stream\",\n        \"Hill\",\n        \"White\",\n        \"Winter\",\n        \"Fall\",\n        \"Gold\",\n        \"Silver\",\n        \"Copper\",\n        \"Iron\",\n        \"Field\",\n        \"Sky\",\n        \"Summer\",\n        \"Autumn\",\n        \"Spring\",\n        \"Night\",\n    ];\n    additions = [\n        \"stead\",\n        \"town\",\n        \"bend\",\n        \"bury\",\n        \"ton\",\n        \"vale\",\n        \"borough\",\n        \"haven\",\n        \"keep\",\n        \"meet\",\n        \"forge\",\n        \"gale\",\n        \"stone\",\n        \"rock\",\n        \"glade\",\n        \"ford\",\n    ];\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < additions.length; j++) {\n            gen.patterns.push(patterns[i].toUpperCase() + additions[j].toUpperCase());\n        }\n    }\n    return gen;\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class GermanicSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"germanic\";\n        this.country = country();\n        this.culture = culture();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n        this.town = town();\n    }\n}\nfunction culture() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"kmlMyNmN\", \"kmlMyNm\", \"kmTHmk\"];\n    return gen;\n}\nfunction country() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"pmkLAND\", \"lyMvNIEN\", \"evtLAND\", \"pvtmNIEN\", \"eynMARK\"];\n    return gen;\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"ivRSoMANN\",\n        \"SCHnveZLmR\",\n        \"SCHnve\",\n        \"wvnZFRyD\",\n        \"kmnvG\",\n        \"kmnvR\",\n        \"kmnIG\",\n        \"wmnFRyD\",\n    ];\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"avNNIiER\",\n        \"sAnoRA\",\n        \"sARA\",\n        \"smlInA\",\n        \"imlEN\",\n        \"imlENA\",\n        \"yLnA\",\n        \"bAlIA\",\n        \"hAlIA\",\n        \"wILnA\",\n        \"NAbIA\",\n        \"NmbIA\",\n        \"kARmlINE\",\n        \"vLmNORA\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Mvlk\",\n        \"vRNmn\",\n        \"MmTHIAS\",\n        \"NmkO\",\n        \"kOnRAD\",\n        \"kmnR\",\n        \"oInO\",\n        \"lUoA\",\n        \"LvRs\",\n        \"MvGnUs\",\n        \"Nvo\",\n    ];\n    return gen;\n}\nfunction town() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vpENBERG\",\n        \"vpmnBERG\",\n        \"vpnSBERG\",\n        \"kvnBERG\",\n        \"pmRpENHEIM\",\n        \"pmRpHEIM\",\n        \"imnENFELD\",\n        \"imRSFELD\",\n        \"vpENBURG\",\n        \"vpmnBURG\",\n        \"vpnSBURG\",\n        \"kvnBURG\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class JapanishSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"japanish\";\n        this.country = country();\n        this.culture = culture();\n        this.family = family();\n        this.female = female();\n        this.male = male();\n        this.town = town();\n    }\n}\nfunction culture() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"(N,M)v(H,G,K)(E,U)(M,N)\",\n        \"(N,M)v(H,G,K)(E,U)(M,N)I\",\n        \"(AI,U)(N,M)(U,I)\",\n        \"(AO,AE,AI,v)(R,L)(A,I)\",\n    ];\n    return gen;\n}\nfunction country() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"(N,M)(A,E)(G,K)(A,E)R(I,A,IA)\", \"(S,K)(A,E)(G,K)(A,E)(R,T)(I,A,IA)\"];\n    return gen;\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"(A,U)(G,K)(A,U)H(I,A)(T,D)(A,O)\",\n        \"(G,K)(A,I)(NN,N,M)O(SU,T)(KE,KA,E,A)\",\n        \"(T,D)A(G,K)E(T,CH)(A,E)\",\n        \"(M,N)(A,O)R(I,A)\",\n        \"I(Z,S)(A,U)(M,N)I\",\n    ];\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"(AI,A)KO\",\n        \"SA(R,Y)v\",\n        \"Y(A,U,O)R(A,I)\",\n        \"(SA,YU,YO)R(U,A,I)(M,N)(A,I)\",\n        \"K(A,E,U)(TSU,TE,DE,TO,DO)K(A,I)\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"YO(SHI,TE,DE,HA)H(A,I)(D,T)(O,E)\",\n        \"(M,N)(A,O)R(A,I,U)(D,T)(A,O)\",\n        \"SvSvKE\",\n        \"(G,K)(A,E)N(J,G,K)(I,E)\",\n    ];\n    return gen;\n}\nfunction town() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"(K,G)(A,E)N(T,D)(A,O)\",\n        \"(T,D)v(KY,G,K)(A,O)\",\n        \"(M,N)(A,E)N(G,K,P)OR(A,O,I)\",\n        \"(M,N)(A,O,U)N(A,E)(T,D,R)A\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport ElvishSet from \"./cultures/elvish.js\";\nimport FantasySet from \"./cultures/fantasy.js\";\nimport GermanicSet from \"./cultures/germanic.js\";\nimport JapanishSet from \"./cultures/japanish.js\";\nexport function all() {\n    return [new GermanicSet(), new FantasySet(), new JapanishSet(), new ElvishSet()];\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class DragonbornSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"dragonborn\";\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vlpvlvn\", \"ovlMvRvV\", \"pvRRcYlION\", \"pvRRcYlIvN\", \"pvdcYlIvN\", \"cvRvXIUS\"];\n    let prefixes = [\n        \"WHITE\",\n        \"GREEN\",\n        \"BLUE\",\n        \"WILD\",\n        \"SUMMER\",\n        \"WINTER\",\n        \"WIND\",\n        \"DAWN\",\n        \"DUSK\",\n        \"SKY\",\n        \"NIGHT\",\n        \"FIRE\",\n        \"FLAME\",\n        \"RAGE\",\n        \"HAMMER\",\n        \"RED\",\n        \"DARK\",\n        \"SPELL\",\n        \"WAR\",\n    ];\n    let suffixes = [\"BLADE\", \"BROW\", \"SCALE\", \"SPEAR\", \"RIDER\", \"WALKER\", \"RUNNER\", \"TALON\"];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"tvMvt\", \"cv+l\", \"cvlv\", \"ovRRv\", \"lAIvNN\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vlKvSIA\", \"cvLvSAR\", \"cvlvt\", \"ovnv+R\"];\n    return gen;\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class GnomeSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"gnome\";\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vPSpvMS\", \"cvnKLER\", \"cvdLER\", \"cvdER\", \"pvpLOp\"];\n    const prefixes = [\n        \"AGATE\",\n        \"ALLOY\",\n        \"COPPER\",\n        \"CRYSTAL\",\n        \"DIAMOND\",\n        \"DUST\",\n        \"GEM\",\n        \"GOLD\",\n        \"IRON\",\n        \"JADE\",\n        \"JET\",\n        \"JEWEL\",\n        \"ONYX\",\n        \"OPAL\",\n        \"PELLET\",\n        \"RUBY\",\n        \"SAPPHIRE\",\n        \"SILVER\",\n        \"WIRE\",\n    ];\n    const suffixes = [\n        \"BITER\",\n        \"BOPPER\",\n        \"BRANDER\",\n        \"CHARMER\",\n        \"CHEST\",\n        \"DROPPER\",\n        \"HAMMER\",\n        \"MALLET\",\n        \"POPPER\",\n        \"SEEDER\",\n        \"SENDER\",\n        \"SHAPER\",\n        \"SWEEPER\",\n        \"TINKER\",\n        \"TRADER\",\n        \"WATCHER\",\n        \"WEAVER\",\n        \"WINKER\",\n        \"WOOSHER\",\n        \"WORKER\",\n    ];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"avNNA\",\n        \"SHvNvDDI\",\n        \"MvoLI\",\n        \"voAnA\",\n        \"voAnI\",\n        \"vvTHNE\",\n        \"ovpv\",\n        \"SNvflvnv\",\n        \"pvdvnv\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"Blvocvf\", \"oOdvp\", \"pvnlv\", \"pvnp\", \"cvlVER\", \"wvlVER\", \"pvlwvl\", \"pvlwv\"];\n    return gen;\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class HalfElfSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"half-elf\";\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"pv+PER\",\n        \"sLvTCHER\",\n        \"svRRIER\",\n        \"pvnDElSON\",\n        \"pvnDElS\",\n        \"vvpSBURG\",\n        \"vvpSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vcpLAND\",\n        \"vcpLvND\",\n        \"vcfFORD\",\n        \"vcnFvRD\",\n    ];\n    let prefixes = [\n        \"WHITE\",\n        \"GREEN\",\n        \"BLUE\",\n        \"WILD\",\n        \"SUMMER\",\n        \"WINTER\",\n        \"WIND\",\n        \"BEACH\",\n        \"DAWN\",\n        \"DUSK\",\n        \"SKY\",\n        \"NIGHT\",\n    ];\n    let suffixes = [\n        \"FLOWER\",\n        \"WALKER\",\n        \"SONG\",\n        \"RUNNER\",\n        \"CROWN\",\n        \"BLOSSOM\",\n        \"BELL\",\n        \"WATCHER\",\n        \"GUARD\",\n        \"STAR\",\n        \"GROVE\",\n    ];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vnvlA\", \"vnv\", \"vdvlvN\", \"vlvnA\", \"vcnvA\", \"cvlvNIA\", \"cvlvNA\", \"pvSSvpa\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vFFlvn\",\n        \"cvclvn\",\n        \"vpvlvn\",\n        \"cvLLvvn\",\n        \"cvlvpul\",\n        \"vppvl\",\n        \"pvspvn\",\n        \"pv+lvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class HalfOrcSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"half-orc\";\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"pv+PER\",\n        \"sLvTCHER\",\n        \"svRRIER\",\n        \"pvnDElSON\",\n        \"pvnDElS\",\n        \"vvpSBURG\",\n        \"vvpSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vcpLAND\",\n        \"vcpLvND\",\n        \"vcfFORD\",\n        \"vcnFvRD\",\n    ];\n    const prefixes = [\n        \"SMASH\",\n        \"BULL\",\n        \"RAGE\",\n        \"DEATH\",\n        \"MURDER\",\n        \"SKULL\",\n        \"FIGHT\",\n        \"BREAK\",\n        \"WAR\",\n        \"BATTLE\",\n        \"GROG\",\n        \"FEAR\",\n    ];\n    const suffixes = [\"FIST\", \"SMASH\", \"REND\", \"BLADE\", \"AXE\", \"CHOPPER\", \"CUTTER\", \"KILLER\"];\n    for (let i = 0; i < prefixes.length; i++) {\n        for (let j = 0; j < suffixes.length; j++) {\n            gen.patterns.push(prefixes[i] + suffixes[j]);\n        }\n    }\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vnvlA\",\n        \"vnv\",\n        \"vdvlvN\",\n        \"vlvnA\",\n        \"vcnvA\",\n        \"cvlvNIA\",\n        \"cvlvNA\",\n        \"pvc+vpa\",\n        \"vpBvZA\",\n        \"vppvsA\",\n    ];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vFFlvn\",\n        \"cvclvn\",\n        \"vpvlvn\",\n        \"cvLLvvn\",\n        \"cvlvpv+l\",\n        \"vppvl\",\n        \"pvspvn\",\n        \"pv+lvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n        \"pvp\",\n        \"pvpvp\",\n        \"pvppvs\",\n        \"pAlpvs\",\n        \"pAlpvG\",\n        \"svRM\",\n        \"svRN\",\n        \"svRNpvK\",\n        \"pv+pvK\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport GeneratorSet from \"../generator_set.js\";\nimport GenericNameGenerator from \"../generic_name_generator.js\";\nexport default class TieflingSet extends GeneratorSet {\n    constructor() {\n        super();\n        this.name = \"tiefling\";\n        this.family = family();\n        this.female = female();\n        this.male = male();\n    }\n}\nfunction family() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"Apvlnvn\",\n        \"vpvcnvn\",\n        \"vSHlvnp\",\n        \"SnvTH\",\n        \"pvvLOR\",\n        \"pv+PER\",\n        \"sLvTCHER\",\n        \"svRRIER\",\n        \"pvnDElSON\",\n        \"pvnDElS\",\n        \"vvpSBURG\",\n        \"vvpSBERG\",\n        \"vlnvTHION\",\n        \"vpRvHAM\",\n        \"vcpLAND\",\n        \"vcpLvND\",\n        \"vcfFORD\",\n        \"vcnFvRD\",\n    ];\n    return gen;\n}\nfunction female() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\"vnvlA\", \"vnv\", \"vdvlvN\", \"vlvnA\", \"vcnvA\", \"cvlvNIA\", \"cvlvNA\", \"pySSvka\"];\n    return gen;\n}\nfunction male() {\n    let gen = new GenericNameGenerator();\n    gen.patterns = [\n        \"vFFlvn\",\n        \"cvclvn\",\n        \"vpvlvn\",\n        \"cvLLvvn\",\n        \"cvlvpul\",\n        \"vppvl\",\n        \"pvspvn\",\n        \"pv+lvn\",\n        \"pvlsvp\",\n        \"pvDRvC\",\n    ];\n    return gen;\n}\n","\"use strict\";\nimport DragonbornSet from \"./races/dragonborn.js\";\nimport DwarfSet from \"./races/dwarf.js\";\nimport ElfSet from \"./races/elf.js\";\nimport GnomeSet from \"./races/gnome.js\";\nimport HalfElfSet from \"./races/half_elf.js\";\nimport HalfOrcSet from \"./races/half_orc.js\";\nimport HalflingSet from \"./races/halfling.js\";\nimport HumanSet from \"./races/human.js\";\nimport TieflingSet from \"./races/tiefling.js\";\nexport function all() {\n    return [\n        new DragonbornSet(),\n        new DwarfSet(),\n        new ElfSet(),\n        new GnomeSet(),\n        new HalfElfSet(),\n        new HalflingSet(),\n        new HalfOrcSet(),\n        new HumanSet(),\n        new TieflingSet(),\n    ];\n}\n","\"use strict\";\nimport * as Cultures from \"./cultures.js\";\nimport * as Races from \"./races.js\";\nexport function all() {\n    const cultures = Cultures.all();\n    const races = Races.all();\n    let result = [];\n    result = result.concat(cultures);\n    result = result.concat(races);\n    return result;\n}\nexport function getSetByName(name, sets) {\n    for (let i = 0; i < sets.length; i++) {\n        if (sets[i].name === name) {\n            return sets[i];\n        }\n    }\n    throw new Error(\"failed to find set with name: \" + name);\n}\n","import type Archetype from \"./archetype.js\";\n\nexport const blank: Archetype = {\n  name: \"\",\n  abilities: [],\n  tags: [],\n  threatLevel: 0,\n  itemGenerators: [],\n};\n\nexport function byName(name: string, archetypes: Archetype[]): Archetype {\n  for (let i = 0; i < archetypes.length; i++) {\n    if (archetypes[i].name == name) {\n      return archetypes[i];\n    }\n  }\n\n  throw new Error(`Failed to find archetype \"${name}\"`);\n}\n\nexport function byTag(tag: string, archetypes: Archetype[]): Archetype[] {\n  let result = [];\n\n  for (let i = 0; i < archetypes.length; i++) {\n    if (archetypes[i].tags.includes(tag)) {\n      result.push(archetypes[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function byThreatRange(\n  minThreatLevel: number,\n  maxThreatLevel: number,\n  archetypes: Archetype[],\n): Archetype[] {\n  let result = [];\n\n  for (let i = 0; i < archetypes.length; i++) {\n    let totalThreatLevel = getTotalThreatLevel(archetypes[i]);\n\n    if (\n      totalThreatLevel >= minThreatLevel && totalThreatLevel <= maxThreatLevel\n    ) {\n      result.push(archetypes[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function getTotalThreatLevel(archetype: Archetype): number {\n  let totalThreatLevel = archetype.threatLevel;\n  for (let i = 0; i < archetype.abilities.length; i++) {\n    totalThreatLevel += archetype.abilities[i].threatLevel;\n  }\n\n  return totalThreatLevel;\n}\n","import * as RND from \"@ironarachne/rng\";\nimport type PhysicalTrait from \"./physical_trait\";\nimport type PhysicalTraitGeneratorConfig from \"./physical_trait_generator_config\";\n\nexport function generate(config: PhysicalTraitGeneratorConfig): PhysicalTrait {\n  let name = config.name;\n  let category = config.category;\n  let tags = config.tags;\n  let description = RND.item(config.options) + \" \" + config.name;\n\n  return {\n    name,\n    description,\n    category,\n    tags,\n  };\n}\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"ape\",\n  pluralName: \"apes\",\n  adjective: \"ape\",\n  breedType: \"ape\",\n  environments: [\"forest\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"silver\", \"brown\", \"grey\", \"olive\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"ape\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"axe beak\",\n  pluralName: \"axe beaks\",\n  adjective: \"axe beak\",\n  breedType: \"axe beak\",\n  environments: [\"forest\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"feathers\",\n      category: \"feathers\",\n      options: [\"silver\", \"brown\", \"grey\", \"olive\"],\n      tags: [\"feathers\"],\n    },\n    {\n      name: \"beak\",\n      category: \"beak\",\n      options: [\"long\", \"hooked\", \"sharp\", \"crooked\"],\n      tags: [\"beak\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"hatchling\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"axe beak\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"baboon\",\n  pluralName: \"baboons\",\n  adjective: \"baboon\",\n  breedType: \"baboon\",\n  environments: [\"forest\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"silver\", \"brown\", \"grey\", \"olive\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 0,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"ape\", \"baboon\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"badger\",\n  pluralName: \"badgers\",\n  adjective: \"badger\",\n  breedType: \"badger\",\n  environments: [\"forest\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"silver\", \"brown\", \"grey\", \"olive\", \"black\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"badger\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"bat\",\n  pluralName: \"bats\",\n  adjective: \"bat\",\n  breedType: \"bat\",\n  environments: [\"forest\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"silver\", \"brown\", \"grey\", \"olive\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"wings\",\n      category: \"wings\",\n      options: [\"big\", \"wide\", \"black\", \"brown\", \"tan\"],\n      tags: [\"wings\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 0,\n  abilities: [\n    {\n      name: \"flight\",\n      description: \"can fly\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"bat\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"bear\",\n  pluralName: \"bears\",\n  adjective: \"bear\",\n  breedType: \"bear\",\n  environments: [\"forest\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"silver\", \"brown\", \"grey\", \"olive\", \"white\", \"tan\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 2,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"bear\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"blink dog\",\n  pluralName: \"blink dogs\",\n  adjective: \"blink dog\",\n  breedType: \"blink dog\",\n  environments: [\"forest\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"grey\", \"blue\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"blink\",\n      description: \"can teleport short distances\",\n      category: \"movement\",\n      threatLevel: 2,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"blink dog\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"boar\",\n  pluralName: \"boars\",\n  adjective: \"boar\",\n  breedType: \"boar\",\n  environments: [\"forest\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"tan\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"boar\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"camel\",\n  pluralName: \"camels\",\n  adjective: \"camel\",\n  breedType: \"camel\",\n  environments: [\"desert\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"beige\", \"brown\", \"tan\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"camel\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"cat\",\n  pluralName: \"cats\",\n  adjective: \"cat\",\n  breedType: \"cat\",\n  environments: [\"desert\", \"forest\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\n        \"black\",\n        \"brown\",\n        \"tan\",\n        \"grey\",\n        \"white\",\n        \"calico\",\n        \"tortoiseshell\",\n        \"ginger\",\n        \"mottled\",\n        \"striped\",\n        \"spotted\",\n      ],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\", \"blue\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    { name: \"kitten\", noun: \"kitten\", minAge: 0, maxAge: 1, genderedNoun: [\"girl\", \"boy\", \"kitten\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 2, maxAge: 10, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 11,\n      maxAge: 30,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 0,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"cat\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"cow\",\n  pluralName: \"cows\",\n  adjective: \"cow\",\n  breedType: \"cow\",\n  environments: [\"forest\", \"grassland\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"tan\", \"dappled\", \"white and black\", \"white\", \"grey\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"horns\",\n      category: \"horns\",\n      options: [\"long\", \"short\", \"curved\"],\n      tags: [\"horns\"],\n    },\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"white\", \"brown\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\", \"blue\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"cow\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"crocodile\",\n  pluralName: \"crocodiles\",\n  adjective: \"crocodile\",\n  breedType: \"crocodile\",\n  environments: [\"forest\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"scales\",\n      category: \"scales\",\n      options: [\"black\", \"brown\", \"green\"],\n      tags: [\"scales\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"crocodile\", \"reptile\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"dog\",\n  pluralName: \"dogs\",\n  adjective: \"dog\",\n  breedType: \"dog\",\n  environments: [\"desert\", \"grassland\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"tan\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\", \"blue\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 0,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"dog\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"eagle\",\n  pluralName: \"eagles\",\n  adjective: \"eagle\",\n  breedType: \"eagle\",\n  environments: [\"desert\", \"forest\", \"grassland\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"feathers\",\n      category: \"feathers\",\n      options: [\"black\", \"brown\", \"tan\"],\n      tags: [\"feathers\"],\n    },\n    {\n      name: \"beak\",\n      category: \"beak\",\n      options: [\"brown\", \"yellow\", \"light\", \"black\"],\n      tags: [\"beak\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"hatchling\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"adult\", noun: \"adult\", minAge: 2, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 0,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"eagle\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"elk\",\n  pluralName: \"elks\",\n  adjective: \"elk\",\n  breedType: \"elk\",\n  environments: [\"forest\", \"grassland\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"tan\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 2,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"elk\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"goat\",\n  pluralName: \"goats\",\n  adjective: \"goat\",\n  breedType: \"goat\",\n  environments: [\"forest\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"tan\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"horns\",\n      category: \"horns\",\n      options: [\"long\", \"short\", \"stubby\", \"curved\"],\n      tags: [\"horns\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 0,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"goat\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"horse\",\n  pluralName: \"horses\",\n  adjective: \"horse\",\n  breedType: \"horse\",\n  environments: [\"forest\", \"grassland\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"tan\", \"dappled\", \"pinto\", \"white\", \"grey\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"white\", \"brown\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\", \"blue\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"horse\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"lion\",\n  pluralName: \"lions\",\n  adjective: \"lion\",\n  breedType: \"lion\",\n  environments: [\"desert\", \"grassland\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"tan\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\", \"blue\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 2,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"lion\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"rat\",\n  pluralName: \"rats\",\n  adjective: \"rat\",\n  breedType: \"rat\",\n  environments: [\"desert\", \"forest\", \"grassland\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"tan\", \"grey\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"pink\", \"light\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 0,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"rat\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"snake\",\n  pluralName: \"snakes\",\n  adjective: \"snake\",\n  breedType: \"snake\",\n  environments: [\"desert\", \"forest\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"scales\",\n      category: \"scales\",\n      options: [\"black\", \"brown\", \"tan\", \"striped\", \"diamond-patterned\", \"green\", \"grey\", \"white\", \"pale\", \"yellow\"],\n      tags: [\"scales\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\", \"black\", \"white\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"hatchling\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 0,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"snake\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"wolf\",\n  pluralName: \"wolves\",\n  adjective: \"wolf\",\n  breedType: \"wolf\",\n  environments: [\"desert\", \"grassland\", \"mountain\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"tan\", \"white\", \"grey\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"green\", \"blue\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"puppy\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"wolf\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"dretch\",\n  pluralName: \"dretches\",\n  adjective: \"dretch\",\n  breedType: \"dretch\",\n  environments: [\"desert\", \"forest\", \"grassland\", \"mountain\", \"underdark\", \"urban\"],\n  creatureTypes: [\"fiend\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"mottled brown\", \"olive\", \"tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"brown\", \"dark\", \"red\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"fetid cloud\",\n      description: \"can emit a fetid cloud of gas\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n  ],\n  commonality: 3,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"demon\", \"dretch\", \"fiend\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"hell hound\",\n  pluralName: \"hell hounds\",\n  adjective: \"hell hound\",\n  breedType: \"hell hound\",\n  environments: [\"desert\", \"forest\", \"grassland\", \"mountain\", \"underdark\", \"urban\"],\n  creatureTypes: [\"fiend\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"brown\", \"grey\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"mottled brown\", \"olive\", \"black\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"glowing amber\", \"glowing orange\", \"glowing red\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"immunity: fire damage\",\n      description: \"is immune to fire damage\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n    {\n      name: \"breath weapon: fire\",\n      description: \"can breathe fire once an hour\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"demon\", \"fiend\", \"hell hound\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"imp\",\n  pluralName: \"imps\",\n  adjective: \"imp\",\n  breedType: \"imp\",\n  environments: [\"desert\", \"forest\", \"grassland\", \"mountain\", \"underdark\", \"urban\"],\n  creatureTypes: [\"fiend\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"mottled brown\", \"olive\", \"black\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"glowing amber\", \"glowing orange\", \"glowing red\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 3,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"shapeshift into animal\",\n      description: \"can shapeshift into an animal\",\n      category: \"shapeshift\",\n      threatLevel: 2,\n    },\n    {\n      name: \"darkvision\",\n      description: \"can see in darkness\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n    {\n      name: \"resistance: magic\",\n      description: \"is resistant to magic\",\n      category: \"resistance\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"demon\", \"fiend\", \"imp\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"lemure\",\n  pluralName: \"lemures\",\n  adjective: \"lemure\",\n  breedType: \"lemure\",\n  environments: [\"desert\", \"forest\", \"grassland\", \"mountain\", \"underdark\", \"urban\"],\n  creatureTypes: [\"fiend\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"mottled brown\", \"olive\", \"mottled green\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"glowing\", \"black\", \"white\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"immunity: fire damage\",\n      description: \"is immune to fire damage\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n    {\n      name: \"immunity: poison\",\n      description: \"is immune to poison\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 4,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"demon\", \"fiend\", \"lemure\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"quasit\",\n  pluralName: \"quasits\",\n  adjective: \"quasit\",\n  breedType: \"quasit\",\n  environments: [\"desert\", \"forest\", \"grassland\", \"mountain\", \"underdark\", \"urban\"],\n  creatureTypes: [\"fiend\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"mottled brown\", \"olive\", \"mottled green\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"grey\", \"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"shapeshift into insect\",\n      description: \"can shapeshift into an insect\",\n      category: \"shapeshift\",\n      threatLevel: 2,\n    },\n    {\n      name: \"minor invisibility\",\n      description: \"can turn invisible at will, but not while attacking\",\n      category: \"invisibility\",\n      threatLevel: 2,\n    },\n    {\n      name: \"resistance: magic\",\n      description: \"is resistant to magic\",\n      category: \"resistance\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"demon\", \"fiend\", \"quasit\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"dust mephit\",\n  pluralName: \"dust mephits\",\n  adjective: \"dust mephit\",\n  breedType: \"dust mephit\",\n  environments: [\"desert\"],\n  creatureTypes: [\"elemental\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"mottled brown\", \"tan\", \"mottled tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"grey\", \"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"death burst\",\n      description: \"explodes on death\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n    {\n      name: \"blinding dust breath\",\n      description: \"blinds enemies\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"elemental\", \"dust mephit\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"ice mephit\",\n  pluralName: \"ice mephits\",\n  adjective: \"ice mephit\",\n  breedType: \"ice mephit\",\n  environments: [\"arctic\"],\n  creatureTypes: [\"elemental\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"brown\", \"mottled brown\", \"tan\", \"mottled tan\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"grey\", \"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"spell: fog cloud\",\n      description: \"can cast fog cloud\",\n      category: \"spell\",\n      threatLevel: 2,\n    },\n    {\n      name: \"ice explosion on death\",\n      description: \"explodes in ice shards on death\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n    {\n      name: \"breath weapon: frost\",\n      description: \"can breathe frost\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n    {\n      name: \"immunity: cold\",\n      description: \"is immune to cold\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"elemental\", \"ice mephit\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"magma mephit\",\n  pluralName: \"magma mephits\",\n  adjective: \"magma mephit\",\n  breedType: \"magma mephit\",\n  environments: [\"underdark\"],\n  creatureTypes: [\"elemental\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"red\", \"mottled red\", \"black\", \"mottled black\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"red\", \"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"spell: heat metal\",\n      description: \"can cast heat metal\",\n      category: \"spell\",\n      threatLevel: 1,\n    },\n    {\n      name: \"lava explosion on death\",\n      description: \"explodes in lava on death\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n    {\n      name: \"breath weapon: fire\",\n      description: \"can breathe fire\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n    {\n      name: \"immunity: fire\",\n      description: \"is immune to fire\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"elemental\", \"magma mephit\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"steam mephit\",\n  pluralName: \"steam mephits\",\n  adjective: \"steam mephit\",\n  breedType: \"steam mephit\",\n  environments: [\"underwater\"],\n  creatureTypes: [\"elemental\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"red\", \"mottled red\", \"black\", \"mottled black\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"red\", \"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"spell: blur\",\n      description: \"can cast blur\",\n      category: \"spell\",\n      threatLevel: 1,\n    },\n    {\n      name: \"steam explosion on death\",\n      description: \"explodes in steam on death\",\n      category: \"attack\",\n      threatLevel: 1,\n    },\n    {\n      name: \"scalding steam breath\",\n      description: \"can breathe scalding steam\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n    {\n      name: \"immunity: fire\",\n      description: \"is immune to fire\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n    {\n      name: \"immunity: poison\",\n      description: \"is immune to poison\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"elemental\", \"steam mephit\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"fire beetle\",\n  pluralName: \"fire beetles\",\n  adjective: \"fire beetle\",\n  breedType: \"fire beetle\",\n  environments: [\"forest\", \"underdark\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"red\", \"mottled red\", \"black\", \"mottled black\"],\n      tags: [\"body\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"red\", \"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"illumination\",\n      description: \"glows with soft orange light\",\n      category: \"misc\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"insect\", \"fire beetle\", \"beetle\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"giant ant\",\n  pluralName: \"giant ants\",\n  adjective: \"giant ant\",\n  breedType: \"giant ant\",\n  environments: [\"forest\", \"grassland\", \"hill\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"red\", \"black\", \"brown\"],\n      tags: [\"body\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"red\", \"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"insect\", \"giant ant\", \"ant\", \"swarm\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"giant bee\",\n  pluralName: \"giant bees\",\n  adjective: \"giant bee\",\n  breedType: \"giant bee\",\n  environments: [\"forest\", \"grassland\", \"hill\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"yellow\", \"black\", \"brown\"],\n      tags: [\"body\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [{\n    name: \"flight\",\n    description: \"can fly\",\n    category: \"movement\",\n    threatLevel: 1,\n  }],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"insect\", \"giant bee\", \"bee\", \"flying\", \"swarm\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"giant beetle\",\n  pluralName: \"giant beetles\",\n  adjective: \"giant beetle\",\n  breedType: \"giant beetle\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"urban\", \"underdark\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"blue\", \"brown\", \"black\", \"ochre\"],\n      tags: [\"body\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"insect\", \"giant beetle\", \"beetle\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"giant centipede\",\n  pluralName: \"giant centipedes\",\n  adjective: \"giant centipede\",\n  breedType: \"giant centipede\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"red\", \"black\", \"brown\"],\n      tags: [\"body\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"red\", \"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"venomous bite\",\n      description: \"can bite with venom\",\n      category: \"attack\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"insect\", \"giant centipede\", \"centipede\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"giant dragonfly\",\n  pluralName: \"giant dragonflies\",\n  adjective: \"giant dragonfly\",\n  breedType: \"giant dragonfly\",\n  environments: [\"forest\", \"grassland\", \"hill\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"yellow\", \"black\", \"brown\"],\n      tags: [\"body\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"flight\",\n      description: \"can fly\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"insect\", \"giant dragonfly\", \"dragonfly\", \"flying\", \"swarm\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"giant scorpion\",\n  pluralName: \"giant scorpions\",\n  adjective: \"giant scorpion\",\n  breedType: \"giant scorpion\",\n  environments: [\"desert\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"yellow\", \"black\", \"brown\"],\n      tags: [\"body\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"black\", \"dark\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"venomous sting\",\n      description: \"can sting with venom\",\n      category: \"attack\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"arachnid\", \"insect\", \"giant scorpion\", \"scorpion\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"giant spider\",\n  pluralName: \"giant spiders\",\n  adjective: \"giant spider\",\n  breedType: \"giant spider\",\n  environments: [\"coastal\", \"forest\", \"grassland\", \"hill\", \"mountain\", \"underdark\", \"urban\"],\n  creatureTypes: [\"beast\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"white\", \"black\", \"brown\"],\n      tags: [\"body\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"black\", \"dark\", \"red\", \"brown\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"venomous bite\",\n      description: \"can bite with venom\",\n      category: \"attack\",\n      threatLevel: 1,\n    },\n    {\n      name: \"spin web\",\n      description: \"can spin webs\",\n      category: \"misc\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"insect\", \"giant spider\", \"spider\", \"arachnid\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"cockatrice\",\n  pluralName: \"cockatrices\",\n  adjective: \"cockatrice\",\n  breedType: \"cockatrice\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\"],\n  creatureTypes: [\"monstrosity\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"wings\",\n      category: \"wings\",\n      options: [\"striped\", \"short\", \"broad\"],\n      tags: [\"wings\"],\n    },\n    {\n      name: \"feathers\",\n      category: \"feathers\",\n      options: [\"black\", \"grey\", \"red\", \"brown\"],\n      tags: [\"feathers\"],\n    },\n    {\n      name: \"scales\",\n      category: \"scales\",\n      options: [\"black\", \"russet\", \"red\", \"brown\"],\n      tags: [\"scales\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"black\", \"orange\", \"red\", \"brown\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"venomous bite\",\n      description: \"can bite with venom\",\n      category: \"attack\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"cockatrice\", \"monstrosity\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"darkmantle\",\n  pluralName: \"darkmantles\",\n  adjective: \"darkmantle\",\n  breedType: \"darkmantle\",\n  environments: [\"mountain\", \"underdark\"],\n  creatureTypes: [\"monstrosity\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"black\", \"grey\", \"brown\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"black\", \"orange\", \"red\", \"brown\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"stalactite disguise\",\n      description: \"can disguise as stalactite\",\n      category: \"misc\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"darkmantle\", \"monstrosity\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"gryfalcon\",\n  pluralName: \"gryfalcons\",\n  adjective: \"gryfalcon\",\n  breedType: \"gryfalcon\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\"],\n  creatureTypes: [\"monstrosity\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"wings\",\n      category: \"wings\",\n      options: [\"striped\", \"long\", \"tapered\"],\n      tags: [\"wings\"],\n    },\n    {\n      name: \"beak\",\n      category: \"beak\",\n      options: [\"short\", \"narrow\", \"sharp\"],\n      tags: [\"beak\"],\n    },\n    {\n      name: \"feathers\",\n      category: \"feathers\",\n      options: [\"white\", \"grey\", \"silver\", \"brown\"],\n      tags: [\"feathers\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"brown\", \"blue\", \"amber\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 3,\n  abilities: [\n    {\n      name: \"flight\",\n      description: \"can fly\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"gryfalcon\", \"monstrosity\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"gryphon\",\n  pluralName: \"gryphons\",\n  adjective: \"gryphon\",\n  breedType: \"gryphon\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\"],\n  creatureTypes: [\"monstrosity\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"wings\",\n      category: \"wings\",\n      options: [\"wide\", \"broad\"],\n      tags: [\"wings\"],\n    },\n    {\n      name: \"beak\",\n      category: \"beak\",\n      options: [\"hooked\", \"crooked\", \"large\", \"sharp\"],\n      tags: [\"beak\"],\n    },\n    {\n      name: \"feathers\",\n      category: \"feathers\",\n      options: [\"white\", \"grey\", \"silver\", \"brown\"],\n      tags: [\"feathers\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"brown\", \"blue\", \"amber\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 3,\n  abilities: [\n    {\n      name: \"flight\",\n      description: \"can fly\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"gryphon\", \"monstrosity\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"harpy\",\n  pluralName: \"harpies\",\n  adjective: \"harpy\",\n  breedType: \"harpy\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\"],\n  creatureTypes: [\"monstrosity\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"wings\",\n      category: \"wings\",\n      options: [\"striped\", \"long\", \"tapered\"],\n      tags: [\"wings\"],\n    },\n    {\n      name: \"feathers\",\n      category: \"feathers\",\n      options: [\"white\", \"grey\", \"silver\", \"brown\"],\n      tags: [\"feathers\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"white\", \"black\", \"tan\", \"brown\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"brown\", \"blue\", \"amber\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"flight\",\n      description: \"can fly\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"harpy\", \"monstrosity\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"hippogriff\",\n  pluralName: \"hippogriffs\",\n  adjective: \"hippogriff\",\n  breedType: \"hippogriff\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\"],\n  creatureTypes: [\"monstrosity\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"wings\",\n      category: \"wings\",\n      options: [\"striped\", \"long\", \"tapered\"],\n      tags: [\"wings\"],\n    },\n    {\n      name: \"beak\",\n      category: \"beak\",\n      options: [\"short\", \"narrow\", \"sharp\"],\n      tags: [\"beak\"],\n    },\n    {\n      name: \"feathers\",\n      category: \"feathers\",\n      options: [\"white\", \"grey\", \"silver\", \"brown\"],\n      tags: [\"feathers\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"brown\", \"blue\", \"amber\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 3,\n  abilities: [\n    {\n      name: \"flight\",\n      description: \"can fly\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"hippogriff\", \"monstrosity\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"owlbear\",\n  pluralName: \"owlbears\",\n  adjective: \"owlbear\",\n  breedType: \"owlbear\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\"],\n  creatureTypes: [\"monstrosity\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"beak\",\n      category: \"beak\",\n      options: [\"hooked\", \"crooked\", \"large\", \"sharp\"],\n      tags: [\"beak\"],\n    },\n    {\n      name: \"feathers\",\n      category: \"feathers\",\n      options: [\"white\", \"grey\", \"silver\", \"brown\"],\n      tags: [\"feathers\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"brown\", \"blue\", \"amber\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 4,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"owlbear\", \"monstrosity\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"rust monster\",\n  pluralName: \"rust monsters\",\n  adjective: \"rust monster\",\n  breedType: \"rust monster\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\"],\n  creatureTypes: [\"monstrosity\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"red\", \"russet\", \"brown\"],\n      tags: [\"body\"],\n    },\n    {\n      name: \"feelers\",\n      category: \"feelers\",\n      options: [\"brown\", \"ochre\", \"tan\", \"grey\"],\n      tags: [\"feelers\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 0,\n  abilities: [\n    {\n      name: \"rusting touch\",\n      description: \"rusts nonmagical metal it touches\",\n      category: \"attack\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"rust monster\", \"monstrosity\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"worg\",\n  pluralName: \"worgs\",\n  adjective: \"worg\",\n  breedType: \"worg\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\"],\n  creatureTypes: [\"monstrosity\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fangs\",\n      category: \"fangs\",\n      options: [\"hooked\", \"crooked\", \"large\", \"sharp\"],\n      tags: [\"fangs\"],\n    },\n    {\n      name: \"fur\",\n      category: \"fur\",\n      options: [\"black\", \"grey\", \"white\", \"brown\", \"dark\"],\n      tags: [\"fur\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"pale\", \"grey\", \"black\", \"brown\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"brown\", \"red\", \"amber\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 2,\n  abilities: [\n    {\n      name: \"darkvision\",\n      description: \"can see in the dark\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"worg\", \"monstrosity\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"black pudding\",\n  pluralName: \"black puddings\",\n  adjective: \"black pudding\",\n  breedType: \"black pudding\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"ooze\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"black\", \"viscous black\", \"dark\"],\n      tags: [\"body\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"metal dissolution\",\n      description: \"dissolve nonmagical metal things\",\n      category: \"attack\",\n      threatLevel: 1,\n    },\n    {\n      name: \"amorphous\",\n      description: \"can squeeze through small spaces\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n    {\n      name: \"climb walls and ceilings\",\n      description: \"can climb walls and ceilings\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"black pudding\", \"ooze\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"blue jelly\",\n  pluralName: \"blue jellies\",\n  adjective: \"blue jelly\",\n  breedType: \"blue jelly\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"ooze\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"blue\", \"azure\", \"dark blue\"],\n      tags: [\"body\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"amorphous\",\n      description: \"can squeeze through small spaces\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n    {\n      name: \"climb walls and ceilings\",\n      description: \"can climb walls and ceilings\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"blue jelly\", \"ooze\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"blue slime\",\n  pluralName: \"blue slimes\",\n  adjective: \"blue slime\",\n  breedType: \"blue slime\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"ooze\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"blue\", \"azure\", \"dark blue\"],\n      tags: [\"body\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"amorphous\",\n      description: \"can squeeze through small spaces\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n    {\n      name: \"climb walls and ceilings\",\n      description: \"can climb walls and ceilings\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"blue slime\", \"ooze\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"brown pudding\",\n  pluralName: \"brown puddings\",\n  adjective: \"brown pudding\",\n  breedType: \"brown pudding\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"ooze\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"brown\", \"russet\", \"dark brown\"],\n      tags: [\"body\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"amorphous\",\n      description: \"can squeeze through small spaces\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n    {\n      name: \"climb walls and ceilings\",\n      description: \"can climb walls and ceilings\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"brown pudding\", \"ooze\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"gelatinous cube\",\n  pluralName: \"gelatinous cubes\",\n  adjective: \"gelatinous cube\",\n  breedType: \"gelatinous cube\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"ooze\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"clear\", \"translucent\", \"foggy\"],\n      tags: [\"body\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"nonmetal dissolution\",\n      description: \"dissolve nonmagical nonmetal things\",\n      category: \"attack\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"gelatinous cube\", \"ooze\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"green slime\",\n  pluralName: \"green slimes\",\n  adjective: \"green slime\",\n  breedType: \"green slime\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"ooze\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"green\", \"emerald green\", \"dark green\"],\n      tags: [\"body\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"amorphous\",\n      description: \"can squeeze through small spaces\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n    {\n      name: \"climb walls and ceilings\",\n      description: \"can climb walls and ceilings\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"green slime\", \"ooze\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"grey ooze\",\n  pluralName: \"grey oozes\",\n  adjective: \"grey ooze\",\n  breedType: \"grey ooze\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"ooze\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"grey\", \"dark grey\", \"light grey\"],\n      tags: [\"body\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"amorphous\",\n      description: \"can squeeze through small spaces\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n    {\n      name: \"climb walls and ceilings\",\n      description: \"can climb walls and ceilings\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n    {\n      name: \"corrode metal\",\n      description: \"corrode metal\",\n      category: \"misc\",\n      threatLevel: 1,\n    },\n    {\n      name: \"imitate oily pool\",\n      description: \"imitate oily pool\",\n      category: \"misc\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"grey ooze\", \"ooze\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"ochre jelly\",\n  pluralName: \"ochre jellies\",\n  adjective: \"ochre jelly\",\n  breedType: \"ochre jelly\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"ooze\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"ochre\", \"yellow\", \"dark ochre\"],\n      tags: [\"body\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"amorphous\",\n      description: \"can squeeze through small spaces\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n    {\n      name: \"climb walls and ceilings\",\n      description: \"can climb walls and ceilings\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n    {\n      name: \"lightning split\",\n      description: \"split in half when hit with lightning\",\n      category: \"misc\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"ochre jelly\", \"ooze\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nconst wingLengths = [\"short\", \"long\"];\nconst wingTypes = [\"black-tipped\", \"sleek\", \"knife-edged\", \"graceful\", \"full\"];\nlet wingAppearances = [];\nfor (let j = 0; j < wingTypes.length; j++) {\n  for (let i = 0; i < wingLengths.length; i++) {\n    wingAppearances.push(`${wingLengths[i]} and ${wingTypes[j]}`);\n  }\n  wingAppearances.push(wingTypes[j]);\n}\n\nexport default <Species> {\n  name: \"aarakocra\",\n  pluralName: \"aarakocra\",\n  adjective: \"aarakocra\",\n  breedType: \"aarakocra\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n  ],\n  creatureTypes: [\"humanoid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"feathers\",\n      category: \"feathers\",\n      options: [\"white\", \"mottled\", \"brown\", \"russet\", \"black\", \"grey\", \"red\", \"orange\"],\n      tags: [\"feathers\"],\n    },\n    {\n      name: \"wings\",\n      category: \"wings\",\n      options: wingAppearances,\n      tags: [\"wings\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"yellow\", \"red\", \"white\", \"silver\", \"gold\", \"blue\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(1.2),\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"flight\",\n      description: \"can fly\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(0.7, 0.95),\n  tags: [\"corruptible\", \"aarakocra\", \"flying\", \"martial\", \"magic\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"aasimar\",\n  pluralName: \"aasimar\",\n  adjective: \"aasimar\",\n  breedType: \"human\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n    \"underdark\",\n  ],\n  creatureTypes: [\"humanoid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\", \"white\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\", \"black\", \"brown\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"blue\", \"brown\", \"dark\", \"green\", \"gold\", \"silver\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(1.6),\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"healing touch\",\n      description: \"can heal with a touch\",\n      category: \"spell\",\n      threatLevel: 1,\n    },\n    {\n      name: \"summon light\",\n      description: \"can summon light\",\n      category: \"spell\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(0.9, 0.95),\n  tags: [\"aasimar\", \"celestial\", \"human\", \"martial\", \"magic\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"bugbear\",\n  pluralName: \"bugbears\",\n  adjective: \"bugbear\",\n  breedType: \"human\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n    \"underdark\",\n  ],\n  creatureTypes: [\"humanoid\", \"goblinoid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"brown\", \"dark\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"black\", \"dark green\", \"dark grey\", \"grey\", \"light green\", \"green\", \"grey\", \"olive\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"red\", \"brown\", \"dark\", \"yellow\", \"orange\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(0.8),\n  baseThreatLevel: 2,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(1.1, 1.15),\n  tags: [\"corruptible\", \"bugbear\", \"greenskin\", \"martial\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"centaur\",\n  pluralName: \"centaurs\",\n  adjective: \"centaur\",\n  breedType: \"centaur\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n  ],\n  creatureTypes: [\"fey\", \"tauroid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n    {\n      name: \"horse-hide\",\n      category: \"horse-hide\",\n      options: [\"black\", \"brown\", \"dark\", \"light\", \"white\"],\n      tags: [\"horse-hide\"],\n    },\n    {\n      name: \"hooves\",\n      category: \"hooves\",\n      options: [\"heavy\", \"small\", \"sharp\", \"black\", \"white\", \"hairy\"],\n      tags: [\"hooves\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(1.85),\n  baseThreatLevel: 2,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(1.45, 1.25),\n  tags: [\"centaur\", \"human\", \"martial\", \"magic\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"dark elf\",\n  pluralName: \"dark elves\",\n  adjective: \"dark elven\",\n  breedType: \"human\",\n  environments: [\"forest\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"humanoid\", \"elf\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"white\", \"light grey\", \"ashen\", \"silver\", \"blue-grey\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"black\", \"jet black\", \"dark grey\", \"grey\", \"light grey\", \"blue-grey\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"blue\", \"purple\", \"brown\", \"dark\", \"amber\", \"grey\", \"red\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(7),\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"darkvision\",\n      description: \"can see in the dark\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n    {\n      name: \"spell: faerie fire\",\n      description: \"can cast faerie fire\",\n      category: \"spell\",\n      threatLevel: 2,\n    },\n    {\n      name: \"spell: dancing lights\",\n      description: \"can cast dancing lights\",\n      category: \"spell\",\n      threatLevel: 2,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(0.6, 0.9),\n  tags: [\"corruptible\", \"dark elf\", \"elf\", \"martial\", \"magic\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"deep gnome\",\n  pluralName: \"deep gnomes\",\n  adjective: \"deep gnome\",\n  breedType: \"human\",\n  environments: [\"forest\", \"mountain\", \"underdark\"],\n  creatureTypes: [\"humanoid\", \"gnome\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"dark\", \"light\", \"white\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"grey\", \"dark grey\", \"pale\", \"light grey\", \"bone white\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"black\", \"brown\", \"dark\", \"white\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(5),\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"darkvision\",\n      description: \"can see in the dark\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(0.5, 0.5),\n  tags: [\"corruptible\", \"deep gnome\", \"gnome\", \"martial\", \"magic\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nlet ageCategories = AgeCategories.getHumanVariant(0.8);\n\nfor (let i = 0; i < ageCategories.length; i++) {\n  if (ageCategories[i].name == \"infant\") {\n    ageCategories[i].name = \"hatchling\";\n  }\n}\n\nexport default <Species> {\n  name: \"dragonborn\",\n  pluralName: \"dragonborn\",\n  adjective: \"dragonborn\",\n  breedType: \"dragonborn\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n    \"underdark\",\n  ],\n  creatureTypes: [\"humanoid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"crest\",\n      category: \"crest\",\n      options: [\"finned\", \"horned\", \"ridged\", \"spiked\", \"spined\", \"webbed\"],\n      tags: [\"crest\"],\n    },\n    {\n      name: \"scales\",\n      category: \"skin\",\n      options: [\n        \"amethyst\",\n        \"black\",\n        \"blue\",\n        \"brass\",\n        \"bronze\",\n        \"copper\",\n        \"crystal\",\n        \"emerald\",\n        \"gold\",\n        \"green\",\n        \"red\",\n        \"sapphire\",\n        \"silver\",\n        \"topaz\",\n        \"white\",\n      ],\n      tags: [\"scales\", \"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"blue\", \"dark\", \"green\", \"orange\", \"red\", \"turquoise\", \"white\", \"yellow\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: ageCategories,\n  baseThreatLevel: 2,\n  abilities: [\n    {\n      name: \"breath weapon\",\n      description: \"can breathe an element (acid, cold, fire, lightning, poison) appropriate to the dragonborn's type\",\n      category: \"attack\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 10,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(1.7, 1.1),\n  tags: [\"corruptible\", \"dragonborn\", \"dragonkin\", \"martial\", \"sentient\", \"magic\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"duergar\",\n  pluralName: \"duergar\",\n  adjective: \"duergar\",\n  breedType: \"human\",\n  environments: [\"underdark\"],\n  creatureTypes: [\"humanoid\", \"dwarf\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"dark\", \"black\", \"russet\", \"brown\", \"red\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"grey\", \"blue-grey\", \"dark grey\", \"light grey\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"black\", \"red\", \"dark\", \"amber\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(3),\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"darkvision\",\n      description: \"can see in the dark\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(1, 0.75),\n  tags: [\"corruptible\", \"duergar\", \"dwarf\", \"martial\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"dwarf\",\n  pluralName: \"dwarves\",\n  adjective: \"dwarven\",\n  breedType: \"human\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n    \"underdark\",\n  ],\n  creatureTypes: [\"humanoid\", \"dwarf\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"dark\", \"black\", \"russet\", \"brown\", \"red\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"grey\", \"blue-grey\", \"dark grey\", \"light grey\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"black\", \"red\", \"dark\", \"amber\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(3),\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"darkvision\",\n      description: \"can see in the dark\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 20,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(1, 0.75),\n  tags: [\"corruptible\", \"dwarf\", \"martial\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"elf\",\n  pluralName: \"elves\",\n  adjective: \"elven\",\n  breedType: \"human\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n    \"underdark\",\n  ],\n  creatureTypes: [\"humanoid\", \"elf\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"tan\", \"light\", \"bronzed\", \"white\", \"pale\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"blue\", \"green\", \"brown\", \"dark\", \"amber\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(7),\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"darkvision\",\n      description: \"can see in the dark\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n    {\n      name: \"trance\",\n      description: \"can meditate instead of sleeping\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n    {\n      name: \"immunity: sleep\",\n      description: \"cannot be put to sleep by magic\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 30,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(0.6, 0.9),\n  tags: [\"corruptible\", \"elf\", \"martial\", \"magic\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"firbolg\",\n  pluralName: \"firbolgs\",\n  adjective: \"firbolg\",\n  breedType: \"giant\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\"],\n  creatureTypes: [\"humanoid\", \"giant\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(5),\n  baseThreatLevel: 2,\n  abilities: [\n    {\n      name: \"minor invisibility\",\n      description: \"can turn invisible when not attacking\",\n      category: \"invisibility\",\n      threatLevel: 2,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(1.9, 1.8),\n  tags: [\"firbolg\", \"giant\", \"human\", \"martial\", \"magic\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"gnome\",\n  pluralName: \"gnomes\",\n  adjective: \"gnomish\",\n  breedType: \"human\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n  ],\n  creatureTypes: [\"humanoid\", \"gnome\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(5),\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 20,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(0.4, 0.4),\n  tags: [\"corruptible\", \"gnome\", \"martial\", \"magic\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"goblin\",\n  pluralName: \"goblins\",\n  adjective: \"goblin\",\n  breedType: \"human\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n    \"underdark\",\n  ],\n  creatureTypes: [\"humanoid\", \"goblinoid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"green\", \"grey\", \"pale\", \"dark green\", \"brown\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"red\", \"brown\", \"dark\", \"orange\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(1.15),\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"darkvision\",\n      description: \"can see in the dark\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 15,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(0.5, 0.6),\n  tags: [\"goblin\", \"greenskin\", \"martial\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"halfling\",\n  pluralName: \"halflings\",\n  adjective: \"halfling\",\n  breedType: \"human\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n  ],\n  creatureTypes: [\"humanoid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"bronzed\", \"light\", \"pale\", \"tan\", \"white\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(1.5),\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 20,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(0.5, 0.6),\n  tags: [\"halfling\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"hobgoblin\",\n  pluralName: \"hobgoblins\",\n  adjective: \"hobgoblin\",\n  breedType: \"human\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n    \"underdark\",\n  ],\n  creatureTypes: [\"humanoid\", \"goblinoid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"brown\", \"dark\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"red\", \"dark grey\", \"grey\", \"russet\", \"bronze\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"red\", \"brown\", \"dark\", \"yellow\", \"orange\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(0.8),\n  baseThreatLevel: 2,\n  abilities: [\n    {\n      name: \"darkvision\",\n      description: \"can see in the dark\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(1.1, 1.15),\n  tags: [\"hobgoblin\", \"greenskin\", \"martial\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"human\",\n  pluralName: \"humans\",\n  adjective: \"human\",\n  breedType: \"human\",\n  environments: [\"arctic\", \"coastal\", \"desert\", \"forest\", \"grassland\", \"hill\", \"mountain\", \"urban\", \"underdark\"],\n  creatureTypes: [\"humanoid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"blonde\", \"brown\", \"dark\", \"light\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"black\", \"bronzed\", \"ebony\", \"light\", \"pale\", \"tan\", \"white\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"blue\", \"brown\", \"dark\", \"green\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.humanStandard(),\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 200,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(),\n  tags: [\"corruptible\", \"human\", \"martial\", \"magic\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"orc\",\n  pluralName: \"orcs\",\n  adjective: \"orc\",\n  breedType: \"human\",\n  environments: [\"arctic\", \"coastal\", \"desert\", \"forest\", \"grassland\", \"hill\", \"mountain\", \"urban\", \"underdark\"],\n  creatureTypes: [\"humanoid\", \"goblinoid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"brown\", \"dark\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"black\", \"dark green\", \"dark grey\", \"grey\", \"light green\", \"green\", \"grey\", \"olive\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"red\", \"brown\", \"dark\", \"yellow\", \"orange\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(0.8),\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 10,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(1.1, 1.15),\n  tags: [\"corruptible\", \"orc\", \"greenskin\", \"martial\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nconst hornLengths = [\"short\", \"long\"];\nconst hornTypes = [\"curved\", \"straight\", \"curled\", \"spiraled\"];\nlet hornAppearances = [];\nfor (let j = 0; j < hornTypes.length; j++) {\n  for (let i = 0; i < hornLengths.length; i++) {\n    hornAppearances.push(`${hornLengths[i]} and ${hornTypes[j]}`);\n  }\n  hornAppearances.push(hornTypes[j]);\n}\n\nexport default <Species> {\n  name: \"tiefling\",\n  pluralName: \"tieflings\",\n  adjective: \"tiefling\",\n  breedType: \"human\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n    \"underdark\",\n  ],\n  creatureTypes: [\"humanoid\", \"demonic\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\n        \"black\",\n        \"brown\",\n        \"dark\",\n        \"red\",\n        \"russet\",\n        \"blue\",\n        \"dark blue\",\n        \"dark red\",\n        \"dark purple\",\n        \"purple\",\n      ],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\n        \"tan\",\n        \"light\",\n        \"bronzed\",\n        \"white\",\n        \"pale\",\n        \"red\",\n        \"purple\",\n        \"blue\",\n        \"ochre\",\n        \"yellow\",\n        \"brown\",\n        \"black\",\n      ],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"black\", \"red\", \"white\", \"silver\", \"gold\", \"blue\", \"green\"],\n      tags: [\"eyes\"],\n    },\n    {\n      name: \"horns\",\n      category: \"horns\",\n      options: hornAppearances,\n      tags: [\"horns\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(1.2),\n  baseThreatLevel: 1,\n  abilities: [],\n  commonality: 10,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(1.2, 1.0),\n  tags: [\"corruptible\", \"tiefling\", \"demonic\", \"martial\", \"magic\", \"sentient\"],\n};\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"troll\",\n  pluralName: \"trolls\",\n  adjective: \"troll\",\n  breedType: \"giant\",\n  environments: [\n    \"arctic\",\n    \"coastal\",\n    \"desert\",\n    \"forest\",\n    \"grassland\",\n    \"hill\",\n    \"mountain\",\n    \"urban\",\n    \"underdark\",\n  ],\n  creatureTypes: [\"humanoid\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"hair\",\n      category: \"hair\",\n      options: [\"black\", \"brown\", \"dark\", \"red\", \"russet\"],\n      tags: [\"hair\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"black\", \"dark green\", \"dark grey\", \"grey\", \"light green\", \"green\", \"grey\", \"olive\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"amber\", \"red\", \"brown\", \"dark\", \"yellow\", \"orange\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: AgeCategories.getHumanVariant(0.8),\n  baseThreatLevel: 3,\n  abilities: [\n    {\n      name: \"regeneration\",\n      description: \"regenerate unless burned\",\n      category: \"misc\",\n      threatLevel: 2,\n    },\n  ],\n  commonality: 8,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.getHumanVariant(1.4, 1.45),\n  tags: [\"corruptible\", \"troll\", \"greenskin\", \"martial\", \"sentient\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"ghoul\",\n  pluralName: \"ghouls\",\n  adjective: \"ghoul\",\n  breedType: \"ghoul\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\"],\n  creatureTypes: [\"undead\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"fangs\",\n      category: \"fangs\",\n      options: [\"hooked\", \"crooked\", \"large\", \"sharp\"],\n      tags: [\"fangs\"],\n    },\n    {\n      name: \"skin\",\n      category: \"skin\",\n      options: [\"pale\", \"pallid\", \"grey\", \"light grey\"],\n      tags: [\"skin\"],\n    },\n    {\n      name: \"eyes\",\n      category: \"eyes\",\n      options: [\"brown\", \"red\", \"yellow\", \"grey\"],\n      tags: [\"eyes\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 4,\n  abilities: [],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"ghoul\", \"undead\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"shadow\",\n  pluralName: \"shadows\",\n  adjective: \"shadow\",\n  breedType: \"shadow\",\n  environments: [\"forest\", \"grassland\", \"hill\", \"mountain\", \"swamp\", \"urban\"],\n  creatureTypes: [\"undead\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"black\", \"wispy\", \"ethereal\", \"dark\"],\n      tags: [\"body\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  abilities: [\n    {\n      name: \"amorphous\",\n      description: \"can squeeze through small spaces\",\n      category: \"movement\",\n      threatLevel: 1,\n    },\n    {\n      name: \"immunity: necrotic magic\",\n      description: \"immune to necrotic magic\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n    {\n      name: \"immunity: poison\",\n      description: \"immune to poison\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n    {\n      name: \"darkvision\",\n      description: \"can see in the dark\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n    {\n      name: \"drain strength\",\n      description: \"drains strength on melee attacks\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n  ],\n  baseThreatLevel: 4,\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"shadow\", \"undead\"],\n};\n","import * as Sizes from \"$lib/size/sizes.js\";\nimport type Species from \"../species.js\";\n\nexport default <Species> {\n  name: \"will o' the wisp\",\n  pluralName: \"will o' the wisps\",\n  adjective: \"will o' the wisp\",\n  breedType: \"will o' the wisp\",\n  environments: [\"forest\", \"swamp\"],\n  creatureTypes: [\"undead\"],\n  physicalTraitGeneratorConfigs: [\n    {\n      name: \"body\",\n      category: \"body\",\n      options: [\"glowing\", \"bright\", \"round\", \"ethereal\"],\n      tags: [\"body\"],\n    },\n  ],\n  ageCategories: [\n    {\n      name: \"infant\",\n      noun: \"baby\",\n      minAge: 0,\n      maxAge: 1,\n      genderedNoun: [\"baby girl\", \"baby boy\", \"baby\"],\n      commonality: 1,\n    },\n    { name: \"child\", noun: \"child\", minAge: 2, maxAge: 4, genderedNoun: [\"girl\", \"boy\", \"child\"], commonality: 2 },\n    { name: \"adult\", noun: \"adult\", minAge: 5, maxAge: 30, genderedNoun: [\"woman\", \"man\", \"adult\"], commonality: 20 },\n    {\n      name: \"elderly\",\n      noun: \"elder\",\n      minAge: 31,\n      maxAge: 45,\n      genderedNoun: [\"old woman\", \"old man\", \"elder\"],\n      commonality: 1,\n    },\n  ],\n  baseThreatLevel: 1,\n  abilities: [\n    {\n      name: \"illumination\",\n      description: \"glows with a bright light\",\n      category: \"misc\",\n      threatLevel: 1,\n    },\n    {\n      name: \"minor invisibility\",\n      description: \"can become invisible unless attacking\",\n      category: \"invisibility\",\n      threatLevel: 2,\n    },\n  ],\n  commonality: 5,\n  genders: [\n    { name: \"female\", pronouns: { subjective: \"she\", objective: \"her\", possessive: \"her\", reflexive: \"herself\" } },\n    { name: \"male\", pronouns: { subjective: \"he\", objective: \"him\", possessive: \"his\", reflexive: \"himself\" } },\n  ],\n  sizeGeneratorConfigMatrix: Sizes.humanStandard(), // TODO: make real sizes\n  tags: [\"will o' the wisp\", \"undead\"],\n};\n","import ape from \"./animals/ape\";\nimport axe_beak from \"./animals/axe_beak\";\nimport baboon from \"./animals/baboon\";\nimport badger from \"./animals/badger\";\nimport bat from \"./animals/bat\";\nimport bear from \"./animals/bear\";\nimport blink_dog from \"./animals/blink_dog\";\nimport boar from \"./animals/boar\";\nimport camel from \"./animals/camel\";\nimport cat from \"./animals/cat\";\nimport cow from \"./animals/cow\";\nimport crocodile from \"./animals/crocodile\";\nimport dog from \"./animals/dog\";\nimport eagle from \"./animals/eagle\";\nimport elk from \"./animals/elk\";\nimport goat from \"./animals/goat\";\nimport horse from \"./animals/horse\";\nimport lion from \"./animals/lion\";\nimport rat from \"./animals/rat\";\nimport snake from \"./animals/snake\";\nimport wolf from \"./animals/wolf\";\nimport dretch from \"./demons/dretch\";\nimport hell_hound from \"./demons/hell_hound\";\nimport imp from \"./demons/imp\";\nimport lemure from \"./demons/lemure\";\nimport quasit from \"./demons/quasit\";\nimport dust_mephit from \"./elementals/dust_mephit\";\nimport ice_mephit from \"./elementals/ice_mephit\";\nimport magma_mephit from \"./elementals/magma_mephit\";\nimport steam_mephit from \"./elementals/steam_mephit\";\nimport fire_beetle from \"./insects/fire_beetle\";\nimport giant_ant from \"./insects/giant_ant\";\nimport giant_bee from \"./insects/giant_bee\";\nimport giant_beetle from \"./insects/giant_beetle\";\nimport giant_centipede from \"./insects/giant_centipede\";\nimport giant_dragonfly from \"./insects/giant_dragonfly\";\nimport giant_scorpion from \"./insects/giant_scorpion\";\nimport giant_spider from \"./insects/giant_spider\";\nimport cockatrice from \"./monstrosities/cockatrice\";\nimport darkmantle from \"./monstrosities/darkmantle\";\nimport gryfalcon from \"./monstrosities/gryfalcon\";\nimport gryphon from \"./monstrosities/gryphon\";\nimport harpy from \"./monstrosities/harpy\";\nimport hippogriff from \"./monstrosities/hippogriff\";\nimport owlbear from \"./monstrosities/owlbear\";\nimport rust_monster from \"./monstrosities/rust_monster\";\nimport worg from \"./monstrosities/worg\";\nimport black_pudding from \"./oozes/black_pudding\";\nimport blue_jelly from \"./oozes/blue_jelly\";\nimport blue_slime from \"./oozes/blue_slime\";\nimport brown_pudding from \"./oozes/brown_pudding\";\nimport gelatinous_cube from \"./oozes/gelatinous_cube\";\nimport green_slime from \"./oozes/green_slime\";\nimport grey_ooze from \"./oozes/grey_ooze\";\nimport ochre_jelly from \"./oozes/ochre_jelly\";\nimport aarakocra from \"./sentient/aarakocra\";\nimport aasimar from \"./sentient/aasimar\";\nimport bugbear from \"./sentient/bugbear\";\nimport centaur from \"./sentient/centaur\";\nimport dark_elf from \"./sentient/dark_elf\";\nimport deep_gnome from \"./sentient/deep_gnome\";\nimport dragonborn from \"./sentient/dragonborn\";\nimport duergar from \"./sentient/duergar\";\nimport dwarf from \"./sentient/dwarf\";\nimport elf from \"./sentient/elf\";\nimport firbolg from \"./sentient/firbolg\";\nimport gnome from \"./sentient/gnome\";\nimport goblin from \"./sentient/goblin\";\nimport halfling from \"./sentient/halfling\";\nimport hobgoblin from \"./sentient/hobgoblin\";\nimport human from \"./sentient/human\";\nimport orc from \"./sentient/orc\";\nimport tiefling from \"./sentient/tiefling\";\nimport troll from \"./sentient/troll\";\nimport ghoul from \"./undead/ghoul\";\nimport shadow from \"./undead/shadow\";\nimport will_o_the_wisp from \"./undead/will_o_the_wisp\";\n\nexport default [\n  ape,\n  axe_beak,\n  baboon,\n  badger,\n  bat,\n  bear,\n  blink_dog,\n  boar,\n  camel,\n  cat,\n  cow,\n  crocodile,\n  dog,\n  eagle,\n  elk,\n  goat,\n  horse,\n  lion,\n  rat,\n  snake,\n  wolf,\n  dretch,\n  hell_hound,\n  imp,\n  lemure,\n  quasit,\n  dust_mephit,\n  ice_mephit,\n  magma_mephit,\n  steam_mephit,\n  aarakocra,\n  aasimar,\n  bugbear,\n  centaur,\n  dark_elf,\n  deep_gnome,\n  dragonborn,\n  duergar,\n  dwarf,\n  elf,\n  firbolg,\n  gnome,\n  goblin,\n  halfling,\n  hobgoblin,\n  human,\n  orc,\n  tiefling,\n  troll,\n  fire_beetle,\n  giant_ant,\n  giant_bee,\n  giant_beetle,\n  giant_centipede,\n  giant_dragonfly,\n  giant_scorpion,\n  giant_spider,\n  cockatrice,\n  darkmantle,\n  gryfalcon,\n  gryphon,\n  harpy,\n  hippogriff,\n  owlbear,\n  rust_monster,\n  worg,\n  black_pudding,\n  blue_jelly,\n  blue_slime,\n  brown_pudding,\n  gelatinous_cube,\n  green_slime,\n  grey_ooze,\n  ochre_jelly,\n  ghoul,\n  shadow,\n  will_o_the_wisp,\n];\n","import type Species from \"../species.js\";\n\nexport function modify(species: Species): Species {\n  let result: Species = JSON.parse(JSON.stringify(species));\n\n  let modifierName = \"skeletal\";\n\n  result.name = `${modifierName} ${result.name}`;\n  result.pluralName = `${modifierName} ${result.pluralName}`;\n  result.adjective = `${modifierName} ${result.adjective}`;\n  result.abilities.push(\n    {\n      name: \"immunity: piercing\",\n      description: \"immune to piercing damage\",\n      category: \"immunity\",\n      threatLevel: 1,\n    },\n  );\n  result.tags.push(\"skeleton\");\n  result.tags.push(\"undead\");\n\n  return result;\n}\n","import type Species from \"../species.js\";\n\nexport function modify(species: Species): Species {\n  let result: Species = JSON.parse(JSON.stringify(species));\n\n  let modifierName = \"vampire\";\n\n  result.name = `${modifierName} ${result.name}`;\n  result.pluralName = `${modifierName} ${result.pluralName}`;\n  result.adjective = `${modifierName} ${result.adjective}`;\n\n  let vampiricAbilities = [\n    {\n      name: \"vampiric bite\",\n      description: \"can bite others to drain their life force and heal itself\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n    {\n      name: \"vampiric charm\",\n      description: \"can charm others to do its bidding\",\n      category: \"attack\",\n      threatLevel: 3,\n    },\n    {\n      name: \"shapeshift into animal\",\n      description: \"can shapeshift into an animal\",\n      category: \"shapeshift\",\n      threatLevel: 2,\n    },\n    {\n      name: \"darkvision\",\n      description: \"can see in darkness\",\n      category: \"senses\",\n      threatLevel: 1,\n    },\n    {\n      name: \"resistance: magic\",\n      description: \"is resistant to magic\",\n      category: \"resistance\",\n      threatLevel: 2,\n    },\n    {\n      name: \"shapeshift into mist\",\n      description: \"can shapeshift into mist\",\n      category: \"shapeshift\",\n      threatLevel: 2,\n    },\n  ];\n  result.abilities = result.abilities.concat(vampiricAbilities);\n  result.tags.push(\"vampire\");\n  result.tags.push(\"undead\");\n\n  return result;\n}\n","import type Species from \"../species.js\";\n\nexport function modify(species: Species): Species {\n  let result: Species = JSON.parse(JSON.stringify(species));\n\n  let modifierName = \"zombie\";\n\n  result.name = `${modifierName} ${result.name}`;\n  result.pluralName = `${modifierName} ${result.pluralName}`;\n  result.adjective = `${modifierName} ${result.adjective}`;\n  result.abilities.push(\n    {\n      name: \"self-resurrection\",\n      description: \"can resurrect itself unless the head is destroyed or removed\",\n      category: \"self-resurrection\",\n      threatLevel: 3,\n    },\n  );\n\n  let newTags = [];\n\n  for (let i = 0; i < result.tags.length; i++) {\n    if (result.tags[i] != \"sentient\") {\n      newTags.push(result.tags[i]);\n    }\n  }\n\n  result.tags = newTags;\n\n  result.abilities.push(\n    {\n      name: \"zombification bite\",\n      description: \"can bite others to transform them into zombies\",\n      category: \"attack\",\n      threatLevel: 2,\n    },\n  );\n  result.tags.push(\"zombie\");\n  result.tags.push(\"undead\");\n\n  return result;\n}\n","import * as AgeCategories from \"$lib/age/age_categories.js\";\nimport type AgeCategory from \"$lib/age/age_category.js\";\nimport type PhysicalTrait from \"$lib/physical_traits/physical_trait.js\";\nimport type PhysicalTraitGeneratorConfig from \"$lib/physical_traits/physical_trait_generator_config.js\";\nimport * as PhysicalTraits from \"$lib/physical_traits/physical_traits.js\";\nimport type { SizeMatrix } from \"$lib/size/size_matrix.js\";\nimport * as RND from \"@ironarachne/rng\";\nimport all from \"./all.js\";\nimport * as Skeleton from \"./modifiers/skeleton.js\";\nimport * as Vampire from \"./modifiers/vampire.js\";\nimport * as Zombie from \"./modifiers/zombie.js\";\nimport type Species from \"./species.js\";\n\nexport function breed(species1: Species, species2: Species): Species {\n  if (!breedable(species1, species2)) {\n    throw new Error(`Species ${species1.name} and ${species2.name} are not breedable.`);\n  }\n\n  let result: Species = species1;\n\n  result.environments = getCommonEnvironments(species1, species2);\n  result.physicalTraitGeneratorConfigs = mergeTraits(species1, species2);\n  result.ageCategories = averageAgeCategories(species1, species2);\n  result.tags = mergeTags(species1.tags, species2.tags);\n  result.name = generateCompositeName(species1, species2);\n  result.sizeGeneratorConfigMatrix = averageSizes(species1, species2);\n\n  return result;\n}\n\nexport function averageAgeCategories(species1: Species, species2: Species): AgeCategory[] {\n  // Since there might be more age categories in one species than the other, we need to find the\n  // species with the highest maximum age.\n  let maxAge: number = Math.max(\n    species1.ageCategories[species1.ageCategories.length - 1].maxAge,\n    species2.ageCategories[species2.ageCategories.length - 1].maxAge,\n  );\n  let minAge: number = Math.min(\n    species1.ageCategories[species1.ageCategories.length - 1].maxAge,\n    species2.ageCategories[species2.ageCategories.length - 1].maxAge,\n  );\n\n  let maxSpecies: Species = species1.ageCategories[species1.ageCategories.length - 1].maxAge\n      > species2.ageCategories[species2.ageCategories.length - 1].maxAge\n    ? species1\n    : species2;\n\n  // Now average them\n  let average: number = (maxAge + minAge) / 2;\n\n  // Now get a ratio of the max age to the average age.\n  let ratio: number = maxAge / average;\n\n  // Now generate a new set of age categories based on maxSpecies's age categories, but modified by the ratio\n  // of the max age to the min age.\n  let result: AgeCategory[] = AgeCategories.getVariant(ratio, maxSpecies.ageCategories);\n\n  return result;\n}\n\nexport function averageSizes(species1: Species, species2: Species): SizeMatrix {\n  let result: SizeMatrix = species1.sizeGeneratorConfigMatrix;\n\n  for (let i = 0; i < species1.sizeGeneratorConfigMatrix.length; i++) {\n    for (let j = 0; j < species1.sizeGeneratorConfigMatrix[i].entries.length; j++) {\n      result[i].entries[j].sizeGeneratorConfig.minHeight =\n        (species1.sizeGeneratorConfigMatrix[i].entries[j].sizeGeneratorConfig.minHeight\n          + species2.sizeGeneratorConfigMatrix[i].entries[j].sizeGeneratorConfig.minHeight) / 2;\n      result[i].entries[j].sizeGeneratorConfig.maxHeight =\n        (species1.sizeGeneratorConfigMatrix[i].entries[j].sizeGeneratorConfig.maxHeight\n          + species2.sizeGeneratorConfigMatrix[i].entries[j].sizeGeneratorConfig.maxHeight) / 2;\n      result[i].entries[j].sizeGeneratorConfig.minWeight =\n        (species1.sizeGeneratorConfigMatrix[i].entries[j].sizeGeneratorConfig.minWeight\n          + species2.sizeGeneratorConfigMatrix[i].entries[j].sizeGeneratorConfig.minWeight) / 2;\n      result[i].entries[j].sizeGeneratorConfig.maxWeight =\n        (species1.sizeGeneratorConfigMatrix[i].entries[j].sizeGeneratorConfig.maxWeight\n          + species2.sizeGeneratorConfigMatrix[i].entries[j].sizeGeneratorConfig.maxWeight) / 2;\n    }\n  }\n\n  return result;\n}\n\nexport function breedable(species1: Species, species2: Species): boolean {\n  if (species1.breedType == species2.breedType) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function byAnyTag(tags: string[], options: Species[]): Species[] {\n  let result = [];\n\n  let unique = true;\n\n  for (let i = 0; i < options.length; i++) {\n    unique = true;\n    for (let j = 0; j < tags.length; j++) {\n      if (options[i].tags.includes(tags[j]) && unique) {\n        result.push(options[i]);\n        unique = false;\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function byCreatureType(creatureType: string, options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].creatureTypes.includes(creatureType)) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function byEnvironment(environment: string, options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].environments.includes(environment) || options[i].environments.length == 0) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function byName(name: string, options: Species[]): Species {\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].name == name) {\n      return options[i];\n    }\n  }\n\n  throw new Error(`No species found with name ${name}.`);\n}\n\nexport function byTag(tag: string, options: Species[]): Species[] {\n  let result: Species[] = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].tags.includes(tag)) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function generateCompositeName(species1: Species, species2: Species): string {\n  let firstName = species1.name > species2.name ? species1.name : species2.name;\n  let lastName = species1.name > species2.name ? species2.name : species1.name;\n\n  return `${firstName}-${lastName}`;\n}\n\nexport function getCommonEnvironments(species1: Species, species2: Species): string[] {\n  let result = [];\n\n  for (let i = 0; i < species1.environments.length; i++) {\n    if (species2.environments.includes(species1.environments[i])) {\n      result.push(species1.environments[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function getModifiedVariants(options: Species[]): Species[] {\n  let result: Species[] = [];\n\n  result = result.concat(getSkeletonVariants(options));\n  result = result.concat(getVampireVariants(options));\n  result = result.concat(getZombieVariants(options));\n\n  return result;\n}\n\nexport function getSkeletonVariants(options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    let skeleton = Skeleton.modify(options[i]);\n    result.push(skeleton);\n  }\n\n  return result;\n}\n\nexport function getVampireVariants(options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    let vampire = Vampire.modify(options[i]);\n    result.push(vampire);\n  }\n\n  return result;\n}\n\nexport function getZombieVariants(options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    let zombie = Zombie.modify(options[i]);\n    result.push(zombie);\n  }\n\n  return result;\n}\n\nexport function mergeTags(tags1: string[], tags2: string[]): string[] {\n  let result: string[] = tags1;\n\n  for (let i = 0; i < tags2.length; i++) {\n    if (!result.includes(tags2[i])) {\n      result.push(tags2[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function mergeTraits(species1: Species, species2: Species): PhysicalTraitGeneratorConfig[] {\n  let result: PhysicalTraitGeneratorConfig[] = species1.physicalTraitGeneratorConfigs;\n\n  for (let i = 0; i < species2.physicalTraitGeneratorConfigs.length; i++) {\n    let config = species2.physicalTraitGeneratorConfigs[i];\n\n    let configNames: string[] = result.map((c) => c.name);\n\n    for (let j = 0; j < result.length; j++) {\n      if (result[j].name == config.name) {\n        // if the config already exists, add any new options to it\n        for (let k = 0; k < config.options.length; k++) {\n          if (!result[j].options.includes(config.options[k])) {\n            result[j].options.push(config.options[k]);\n          }\n        }\n      } else {\n        if (!configNames.includes(config.name)) {\n          // if the config doesn't exist, add it\n          result.push(config);\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function randomTraits(species: Species): PhysicalTrait[] {\n  let traits: PhysicalTrait[] = [];\n\n  for (let i = 0; i < species.physicalTraitGeneratorConfigs.length; i++) {\n    const newTrait = PhysicalTraits.generate(species.physicalTraitGeneratorConfigs[i]);\n    traits.push(newTrait);\n  }\n\n  return traits;\n}\n\nexport function randomUniqueSet(options: Species[], count: number): Species[] {\n  let result: Species[] = [];\n\n  options = RND.shuffle(options);\n\n  if (options.length >= count) {\n    for (let i = 0; i < count; i++) {\n      let item: Species | undefined = options.pop();\n      if (item !== undefined) {\n        result.push(item);\n      }\n    }\n  } else {\n    throw new Error(\"Not enough options to choose from.\");\n  }\n\n  return result;\n}\n\nexport function randomWeighted(options: Species[]): Species {\n  return RND.weighted(options);\n}\n\nexport function sentient(): Species[] {\n  return byTag(\"sentient\", all);\n}\n\nexport function withCreatureType(creatureType: string, options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (options[i].creatureTypes.includes(creatureType)) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n\nexport function withoutTag(tag: string, options: Species[]): Species[] {\n  let result = [];\n\n  for (let i = 0; i < options.length; i++) {\n    if (!options[i].tags.includes(tag)) {\n      result.push(options[i]);\n    }\n  }\n\n  return result;\n}\n","import type PersonalityTrait from \"./personality_trait\";\n\nexport function all(): PersonalityTrait[] {\n  return [\n    {\n      name: \"aggressiveness\",\n      score: 0,\n      descriptor: \"\",\n      negativeDescriptor: \"passive\",\n      positiveDescriptor: \"belligerent\",\n    },\n    { name: \"altruism\", score: 0, descriptor: \"\", negativeDescriptor: \"selfish\", positiveDescriptor: \"selfless\" },\n    { name: \"bravery\", score: 0, descriptor: \"\", negativeDescriptor: \"cowardly\", positiveDescriptor: \"brave\" },\n    {\n      name: \"competitiveness\",\n      score: 0,\n      descriptor: \"\",\n      negativeDescriptor: \"cooperative\",\n      positiveDescriptor: \"competitive\",\n    },\n    { name: \"confidence\", score: 0, descriptor: \"\", negativeDescriptor: \"uncertain\", positiveDescriptor: \"confident\" },\n    {\n      name: \"creativity\",\n      score: 0,\n      descriptor: \"\",\n      negativeDescriptor: \"unimaginative\",\n      positiveDescriptor: \"creative\",\n    },\n    { name: \"eloquence\", score: 0, descriptor: \"\", negativeDescriptor: \"plain-spoken\", positiveDescriptor: \"eloquent\" },\n    { name: \"friendliness\", score: 0, descriptor: \"\", negativeDescriptor: \"aloof\", positiveDescriptor: \"friendly\" },\n    { name: \"honesty\", score: 0, descriptor: \"\", negativeDescriptor: \"dishonest\", positiveDescriptor: \"honest\" },\n    {\n      name: \"industriousness\",\n      score: 0,\n      descriptor: \"\",\n      negativeDescriptor: \"lazy\",\n      positiveDescriptor: \"hard-working\",\n    },\n    { name: \"intelligence\", score: 0, descriptor: \"\", negativeDescriptor: \"stupid\", positiveDescriptor: \"smart\" },\n    { name: \"kindness\", score: 0, descriptor: \"\", negativeDescriptor: \"cruel\", positiveDescriptor: \"kind\" },\n    { name: \"loyalty\", score: 0, descriptor: \"\", negativeDescriptor: \"disloyal\", positiveDescriptor: \"loyal\" },\n    { name: \"optimism\", score: 0, descriptor: \"\", negativeDescriptor: \"pessimistic\", positiveDescriptor: \"optimistic\" },\n    { name: \"politeness\", score: 0, descriptor: \"\", negativeDescriptor: \"rude\", positiveDescriptor: \"polite\" },\n    {\n      name: \"thoughtfulness\",\n      score: 0,\n      descriptor: \"\",\n      negativeDescriptor: \"unthinking\",\n      positiveDescriptor: \"thoughtful\",\n    },\n    { name: \"tolerance\", score: 0, descriptor: \"\", negativeDescriptor: \"intolerant\", positiveDescriptor: \"tolerant\" },\n    { name: \"wisdom\", score: 0, descriptor: \"\", negativeDescriptor: \"foolish\", positiveDescriptor: \"wise\" },\n  ];\n}\n","import * as RND from \"@ironarachne/rng\";\nimport random from \"random\";\nimport type PersonalityGeneratorConfig from \"./personality_generator_config\";\nimport type PersonalityTrait from \"./personality_trait\";\n\nexport function generate(config: PersonalityGeneratorConfig): PersonalityTrait[] {\n  let traits = [];\n\n  RND.shuffle(config.traits);\n\n  for (let i = 0; i < config.numberOfPositiveTraits; i++) {\n    let trait = config.traits.pop();\n    if (trait === undefined) {\n      throw new Error(\"Personality trait is undefined.\");\n    }\n    trait.score = random.int(1, 50);\n    trait.descriptor = trait.positiveDescriptor;\n    traits.push(trait);\n  }\n\n  for (let i = 0; i < config.numberOfNegativeTraits; i++) {\n    let trait = config.traits.pop();\n    if (trait === undefined) {\n      throw new Error(\"Personality trait is undefined.\");\n    }\n    trait.score = random.int(-50, -1);\n    trait.descriptor = trait.negativeDescriptor;\n    traits.push(trait);\n  }\n\n  return traits;\n}\n","import type Title from \"./title\";\n\nexport function getTitleForGender(gender: string, title: Title): string {\n  if (gender === \"female\") {\n    return title.femaleTitle;\n  }\n  return title.maleTitle;\n}\n\nexport function getHonorific(gender: string, title: Title): string {\n  if (gender === \"female\") {\n    return title.femaleHonorific;\n  }\n  return title.maleHonorific;\n}\n\nexport function hasHigherPrecedenceThan(title1: Title, title2: Title): boolean {\n  return title1.precedence > title2.precedence;\n}\n\nexport function hasLowerPrecedenceThan(title1: Title, title2: Title): boolean {\n  return title1.precedence < title2.precedence;\n}\n","import * as AgeCategories from \"$lib/age/age_categories\";\nimport * as Archetypes from \"$lib/archetypes/archetypes\";\nimport type Gender from \"$lib/gender/gender.js\";\nimport * as Measurements from \"$lib/measurements\";\nimport * as SizeMatrix from \"$lib/size/size_matrix.js\";\nimport * as CommonSpecies from \"$lib/species/common\";\nimport * as MUN from \"@ironarachne/made-up-names\";\nimport * as RND from \"@ironarachne/rng\";\nimport * as Words from \"@ironarachne/words\";\nimport random from \"random\";\nimport type Character from \"./character\";\nimport type CharacterGeneratorConfig from \"./character_generator_config\";\nimport * as PersonalityTraits from \"./personality/all_traits\";\nimport * as Personality from \"./personality/personality\";\nimport type PersonalityGeneratorConfig from \"./personality/personality_generator_config\";\nimport type PersonalityTrait from \"./personality/personality_trait\";\nimport type Title from \"./titles/title\";\nimport * as Titles from \"./titles/titles\";\n\nexport function describe(character: Character): string {\n  let description = \"\";\n\n  const sbj = character.gender.pronouns.subjective;\n  const ucSbj = Words.capitalize(sbj);\n  const genderNoun = character.ageCategory.noun;\n\n  const height = character.height\n    + \" cm (\"\n    + Measurements.inchesToFeetExpression(Measurements.cmToInches(character.height))\n    + \")\";\n  const weight = character.weight + \" kg (\" + Math.round(Measurements.kgToPounds(character.weight)) + \" lb.)\";\n  const spPhrase = character.species.adjective + \" \" + genderNoun;\n  const traits = Words.arrayToPhrase(describeTraits(character));\n\n  description = RND.item([\n    `${character.firstName} ${character.lastName} is a ${height} tall ${spPhrase}. ${ucSbj} is ${character.age} years old. ${character.firstName} has ${traits}. `,\n    `${character.firstName} is ${\n      Words.article(spPhrase)\n    } ${spPhrase} of ${character.age} years. ${ucSbj} is ${height} tall and weighs ${weight}. ${ucSbj} has ${traits}. `,\n  ]);\n\n  description += describePersonality(character) + \".\";\n\n  return description;\n}\n\nexport function describePersonality(character: Character): string {\n  let traits = [];\n\n  for (let i = 0; i < character.personalityTraits.length; i++) {\n    traits.push(character.personalityTraits[i].descriptor);\n  }\n\n  let description = Words.capitalize(character.gender.pronouns.subjective) + \" is \" + Words.arrayToPhrase(traits);\n\n  return description;\n}\n\nexport function describeTraits(character: Character): string[] {\n  let traits = [];\n\n  for (let i = 0; i < character.physicalTraits.length; i++) {\n    traits.push(character.physicalTraits[i].description);\n  }\n\n  return traits;\n}\n\nexport function generate(config: CharacterGeneratorConfig): Character {\n  const species = RND.weighted(config.speciesOptions);\n  const genderName = RND.item(config.genderNameOptions);\n\n  let gender = species.genders.find((g: Gender) => g.name === genderName);\n\n  const ageCategory = AgeCategories.randomWeighted(config.ageCategoryNames, species.ageCategories);\n\n  let familyNameGenerator = config.familyNameGenerator;\n  let femaleNameGenerator = config.femaleNameGenerator;\n  let maleNameGenerator = config.maleNameGenerator;\n\n  if (config.useAdaptiveNames) {\n    let speciesNameGenerator;\n    try {\n      speciesNameGenerator = MUN.getSetByName(species.name, MUN.allSets());\n    } catch (e) {\n      speciesNameGenerator = new MUN.FantasySet();\n    }\n\n    familyNameGenerator = speciesNameGenerator.family;\n    femaleNameGenerator = speciesNameGenerator.female;\n    maleNameGenerator = speciesNameGenerator.male;\n  }\n\n  let firstNames = [];\n  const lastNames = familyNameGenerator.generate(30);\n\n  if (gender.name === \"female\") {\n    firstNames = femaleNameGenerator.generate(30);\n  } else {\n    firstNames = maleNameGenerator.generate(30);\n  }\n\n  const age = random.int(ageCategory.minAge, ageCategory.maxAge);\n\n  const sizeGeneratorConfig = SizeMatrix.getSizeConfig(\n    gender.name,\n    ageCategory.name,\n    species.sizeGeneratorConfigMatrix,\n  );\n  const height = random.int(sizeGeneratorConfig.minHeight, sizeGeneratorConfig.maxHeight);\n  const weight = random.int(sizeGeneratorConfig.minWeight, sizeGeneratorConfig.maxWeight);\n\n  const personalityTraits = getRandomPersonality();\n  let physicalTraits = CommonSpecies.randomTraits(species);\n\n  if (config.physicalTraitOverrides.length > 0) {\n    physicalTraits = config.physicalTraitOverrides;\n  }\n\n  const firstName = RND.item(firstNames);\n  const lastName = RND.item(lastNames);\n  const name = `${firstName} ${lastName}`;\n  const titles: Title[] = [];\n  let abilities = species.abilities;\n\n  let threatLevel = species.baseThreatLevel;\n  for (let i = 0; i < abilities.length; i++) {\n    threatLevel += abilities[i].threatLevel;\n  }\n\n  let character: Character = {\n    name,\n    firstName,\n    lastName,\n    heraldry: null,\n    carried: [],\n    threatLevel: threatLevel,\n    abilities: abilities,\n    traits: [],\n    titles,\n    species,\n    age,\n    height,\n    weight,\n    personalityTraits,\n    physicalTraits,\n    description: \"\",\n    summary: \"\",\n    gender,\n    archetype: Archetypes.blank,\n    statBlock: null,\n    ageCategory,\n    status: \"alive\",\n    tags: [],\n  };\n  character.description = describe(character);\n\n  return character;\n}\n\nexport function getDefaultCharacterGeneratorConfig(): CharacterGeneratorConfig {\n  const nameSet = new MUN.FantasySet();\n\n  return {\n    speciesOptions: [],\n    ageCategoryNames: [\"adult\"],\n    familyNameGenerator: nameSet.family,\n    femaleNameGenerator: nameSet.female,\n    maleNameGenerator: nameSet.male,\n    genderNameOptions: [\"female\", \"male\"],\n    useAdaptiveNames: false,\n    physicalTraitOverrides: [],\n  };\n}\n\nexport function getHonorific(character: Character): string {\n  let primaryTitle = getPrimaryTitle(character);\n\n  if (primaryTitle) {\n    return Titles.getHonorific(character.gender.name, primaryTitle);\n  }\n\n  return \"\";\n}\n\nexport function getPrimaryTitle(character: Character): Title | null {\n  let highestPrecedence = 100;\n  let primaryTitle = null;\n\n  for (let i = 0; i < character.titles.length; i++) {\n    if (character.titles[i].precedence < highestPrecedence) {\n      highestPrecedence = character.titles[i].precedence;\n\n      primaryTitle = character.titles[i];\n    }\n  }\n\n  return primaryTitle;\n}\n\nexport function getRandomPersonality(): PersonalityTrait[] {\n  const numberOfPositiveTraits = random.int(1, 2);\n  const numberOfNegativeTraits = random.int(0, 1);\n\n  const genConfig: PersonalityGeneratorConfig = {\n    numberOfNegativeTraits,\n    numberOfPositiveTraits,\n    traits: PersonalityTraits.all(),\n  };\n\n  return Personality.generate(genConfig);\n}\n\nexport function getRandomTrait(character: Character): string {\n  return RND.item(character.traits);\n}\n\nexport function getTitle(character: Character): string {\n  let primaryTitle = getPrimaryTitle(character);\n\n  if (primaryTitle) {\n    return Titles.getTitleForGender(character.gender.name, primaryTitle);\n  }\n\n  return \"\";\n}\n\nexport function getTotalThreatLevel(character: Character): number {\n  let totalThreatLevel = character.species.baseThreatLevel;\n  for (let i = 0; i < character.abilities.length; i++) {\n    totalThreatLevel += character.abilities[i].threatLevel;\n  }\n\n  return totalThreatLevel;\n}\n"],"names":["ElvishSet","GeneratorSet","culture","country","family","female","male","town","gen","GenericNameGenerator","prefixes","suffixes","j","FantasySet","first","second","i","firstNameGenerator","firstNames","patterns","additions","GermanicSet","JapanishSet","all","DragonbornSet","GnomeSet","HalfElfSet","HalfOrcSet","TieflingSet","DwarfSet","ElfSet","HalflingSet","HumanSet","cultures","Cultures.all","races","Races.all","result","getSetByName","name","sets","blank","byName","archetypes","generate","config","category","tags","description","RND.item","ape","Sizes.humanStandard","axe_beak","baboon","badger","bat","bear","blink_dog","boar","camel","cat","cow","crocodile","dog","eagle","elk","goat","horse","lion","rat","snake","wolf","dretch","hell_hound","imp","lemure","quasit","dust_mephit","ice_mephit","magma_mephit","steam_mephit","fire_beetle","giant_ant","giant_bee","giant_beetle","giant_centipede","giant_dragonfly","giant_scorpion","giant_spider","cockatrice","darkmantle","gryfalcon","gryphon","harpy","hippogriff","owlbear","rust_monster","worg","black_pudding","blue_jelly","blue_slime","brown_pudding","gelatinous_cube","green_slime","grey_ooze","ochre_jelly","wingLengths","wingTypes","wingAppearances","aarakocra","AgeCategories.getHumanVariant","Sizes.getHumanVariant","aasimar","bugbear","centaur","dark_elf","deep_gnome","ageCategories","dragonborn","duergar","dwarf","elf","firbolg","gnome","goblin","halfling","hobgoblin","human","AgeCategories.humanStandard","orc","hornLengths","hornTypes","hornAppearances","tiefling","troll","ghoul","shadow","will_o_the_wisp","all$1","modify","species","modifierName","vampiricAbilities","newTags","options","byTag","tag","getSkeletonVariants","skeleton","Skeleton.modify","getVampireVariants","vampire","Vampire.modify","getZombieVariants","zombie","Zombie.modify","randomTraits","traits","newTrait","PhysicalTraits.generate","randomUniqueSet","count","RND.shuffle","item","randomWeighted","RND.weighted","sentient","withCreatureType","creatureType","withoutTag","trait","random","getHonorific","gender","title","describe","character","sbj","ucSbj","Words.capitalize","genderNoun","height","Measurements.inchesToFeetExpression","Measurements.cmToInches","weight","Measurements.kgToPounds","spPhrase","Words.arrayToPhrase","describeTraits","Words.article","describePersonality","genderName","g","ageCategory","AgeCategories.randomWeighted","familyNameGenerator","femaleNameGenerator","maleNameGenerator","speciesNameGenerator","MUN.getSetByName","MUN.allSets","MUN.FantasySet","lastNames","age","sizeGeneratorConfig","SizeMatrix.getSizeConfig","personalityTraits","getRandomPersonality","physicalTraits","CommonSpecies.randomTraits","firstName","lastName","titles","abilities","threatLevel","Archetypes.blank","getDefaultCharacterGeneratorConfig","nameSet","primaryTitle","getPrimaryTitle","Titles.getHonorific","highestPrecedence","numberOfPositiveTraits","genConfig","PersonalityTraits.all","Personality.generate","getTotalThreatLevel","totalThreatLevel"],"mappings":"oXAGe,MAAMA,WAAkBC,CAAa,CAChD,aAAc,CACV,QACA,KAAK,KAAO,SACZ,KAAK,QAAUC,KACf,KAAK,QAAUC,KACf,KAAK,OAASC,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,KACZ,KAAK,KAAOC,IACf,CACL,CACA,SAASL,IAAU,CACf,IAAIM,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,8BACA,+BACA,0BACA,aACA,mBACA,cACA,UACA,UACA,SACA,eACR,EACWA,CACX,CACA,SAASL,IAAU,CACf,IAAIK,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,8BACA,+BACA,0BACA,aACA,mBACA,cACA,UACA,UACA,SACA,eACR,EACWA,CACX,CACA,SAASJ,IAAS,CACd,IAAII,EAAM,IAAIC,EACdD,EAAI,SAAW,CAAC,SAAS,EACzB,IAAIE,EAAW,CACX,QACA,QACA,OACA,OACA,SACA,SACA,OACA,QACA,OACA,OACA,MACA,OACR,EACQC,EAAW,CACX,SACA,SACA,OACA,SACA,QACA,UACA,OACA,UACA,QACA,OACA,OACR,EACI,QAAS,EAAI,EAAG,EAAID,EAAS,OAAQ,IACjC,QAASE,EAAI,EAAGA,EAAID,EAAS,OAAQC,IACjCJ,EAAI,SAAS,KAAKE,EAAS,CAAC,EAAIC,EAASC,CAAC,CAAC,EAGnD,OAAOJ,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,WACA,YACA,aACA,QACA,SACA,SACA,SACA,SACA,SACA,WACA,OACR,EACWA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,kBACA,WACA,oBACA,aACA,WACA,UACA,UACA,cACA,aACA,SACR,EACWA,CACX,CACA,SAASD,IAAO,CACZ,IAAIC,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,UACA,WACA,YACA,SACA,WACA,UACA,UACA,UACA,SACA,SACR,EACWA,CACX,CCjIe,MAAMK,UAAmBZ,CAAa,CACjD,aAAc,CACV,QACA,KAAK,KAAO,UACZ,KAAK,QAAUE,KACf,KAAK,QAAUD,KACf,KAAK,OAASE,KACd,KAAK,OAASC,IACd,KAAK,KAAOC,IACZ,KAAK,KAAOC,IACf,CACL,CACA,SAASL,IAAU,CACf,IAAIM,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,WAAY,UAAW,UAAW,SAAS,EACpDA,CACX,CACA,SAASL,IAAU,CACf,IAAIK,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,UAAW,UAAW,UAAW,QAAS,QAAS,WAAY,QAAQ,EAChFA,CACX,CACA,SAASJ,IAAS,CACd,IAAII,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,UACA,UACA,UACA,QACA,SACA,QACA,WACA,cACA,oBACA,UACA,UACA,UACA,YACA,UACA,SACA,UACA,UACA,SACR,EACWA,CACX,CACA,SAASH,GAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,QAAS,MAAO,SAAU,QAAS,QAAS,UAAW,SAAU,SAAS,EACnFA,CACX,CACA,SAASF,GAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,MACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,QACR,EACWA,CACX,CACA,SAASD,IAAO,CACZ,IAAIC,EAAM,IAAIC,EACd,MAAMK,EAAQ,CACV,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,OACA,SACA,QACA,QACA,OACA,OACA,QACA,SACA,MACA,QACR,EACUC,EAAS,CACX,UACA,SACA,QACA,QACA,UACA,YACA,QACA,SACA,SACA,QACA,UACA,SACA,QACA,UACA,QACR,EACI,QAASC,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAC9B,QAASJ,EAAI,EAAGA,EAAIG,EAAO,OAAQH,IAC/BJ,EAAI,SAAS,KAAKM,EAAME,CAAC,EAAE,cAAgB,IAAMD,EAAOH,CAAC,EAAE,YAAa,CAAA,EAGhF,IAAIK,EAAqBX,IACrBY,EAAaD,EAAmB,SACpCA,EAAqBZ,EAAM,EAC3Ba,EAAaA,EAAW,OAAOD,EAAmB,QAAQ,EAC1D,MAAMN,EAAW,CACb,QACA,OACA,OACA,UACA,SACA,SACA,QACA,MACA,OACA,QACA,SACR,EACI,QAASK,EAAI,EAAGA,EAAIE,EAAW,OAAQF,IACnC,QAASJ,EAAI,EAAGA,EAAID,EAAS,OAAQC,IACjCJ,EAAI,SAAS,KAAKU,EAAWF,CAAC,EAAI,MAAQL,EAASC,CAAC,EAAE,YAAa,CAAA,EAG3E,IAAIO,EAAW,CAAC,QAAS,OAAQ,OAAO,EACpCC,EAAY,CACZ,MACA,OACA,UACA,OACA,MACA,MACA,OACA,QACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,MACA,OACA,OACA,OACR,EACI,QAASJ,EAAI,EAAGA,EAAIG,EAAS,OAAQH,IACjC,QAASJ,EAAI,EAAGA,EAAIQ,EAAU,OAAQR,IAClCJ,EAAI,SAAS,KAAKW,EAASH,CAAC,EAAII,EAAUR,CAAC,EAAE,YAAW,CAAE,EAGlEO,EAAW,CACP,OACA,QACA,OACA,WACA,SACA,OACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,QACA,MACA,SACA,SACA,SACA,OACR,EACIC,EAAY,CACR,QACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,MACR,EACI,QAASJ,EAAI,EAAGA,EAAIG,EAAS,OAAQH,IACjC,QAASJ,EAAI,EAAGA,EAAIQ,EAAU,OAAQR,IAClCJ,EAAI,SAAS,KAAKW,EAASH,CAAC,EAAE,YAAa,EAAGI,EAAUR,CAAC,EAAE,YAAa,CAAA,EAGhF,OAAOJ,CACX,CChNe,MAAMa,WAAoBpB,CAAa,CAClD,aAAc,CACV,QACA,KAAK,KAAO,WACZ,KAAK,QAAUE,KACf,KAAK,QAAUD,KACf,KAAK,OAASE,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,KACZ,KAAK,KAAOC,IACf,CACL,CACA,SAASL,IAAU,CACf,IAAIM,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,WAAY,UAAW,QAAQ,EACxCA,CACX,CACA,SAASL,IAAU,CACf,IAAIK,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,UAAW,WAAY,UAAW,WAAY,SAAS,EAChEA,CACX,CACA,SAASJ,IAAS,CACd,IAAII,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,YACA,aACA,SACA,WACA,QACA,QACA,QACA,SACR,EACWA,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,WACA,SACA,OACA,SACA,QACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,WACA,SACR,EACWA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,OACA,QACA,UACA,OACA,SACA,OACA,OACA,OACA,OACA,SACA,KACR,EACWA,CACX,CACA,SAASD,IAAO,CACZ,IAAIC,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,WACA,WACA,WACA,UACA,aACA,WACA,YACA,WACA,WACA,WACA,WACA,SACR,EACWA,CACX,CC1Fe,MAAMc,WAAoBrB,CAAa,CAClD,aAAc,CACV,QACA,KAAK,KAAO,WACZ,KAAK,QAAUE,KACf,KAAK,QAAUD,KACf,KAAK,OAASE,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,KACZ,KAAK,KAAOC,IACf,CACL,CACA,SAASL,IAAU,CACf,IAAIM,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,0BACA,2BACA,mBACA,wBACR,EACWA,CACX,CACA,SAASL,IAAU,CACf,IAAIK,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,gCAAiC,mCAAmC,EAC7EA,CACX,CACA,SAASJ,IAAS,CACd,IAAII,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,kCACA,uCACA,0BACA,mBACA,mBACR,EACWA,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,WACA,WACA,iBACA,+BACA,iCACR,EACWA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,mCACA,+BACA,SACA,yBACR,EACWA,CACX,CACA,SAASD,IAAO,CACZ,IAAIC,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,wBACA,sBACA,8BACA,4BACR,EACWA,CACX,CClEO,SAASe,IAAM,CAClB,MAAO,CAAC,IAAIF,GAAe,IAAIR,EAAc,IAAIS,GAAe,IAAItB,EAAW,CACnF,CCJe,MAAMwB,WAAsBvB,CAAa,CACpD,aAAc,CACV,QACA,KAAK,KAAO,aACZ,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,IAAIC,EACdD,EAAI,SAAW,CAAC,UAAW,WAAY,aAAc,aAAc,YAAa,UAAU,EAC1F,IAAIE,EAAW,CACX,QACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,MACA,QACA,OACA,QACA,OACA,SACA,MACA,OACA,QACA,KACR,EACQC,EAAW,CAAC,QAAS,OAAQ,QAAS,QAAS,QAAS,SAAU,SAAU,OAAO,EACvF,QAAS,EAAI,EAAG,EAAID,EAAS,OAAQ,IACjC,QAASE,EAAI,EAAGA,EAAID,EAAS,OAAQC,IACjCJ,EAAI,SAAS,KAAKE,EAAS,CAAC,EAAIC,EAASC,CAAC,CAAC,EAGnD,OAAOJ,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,QAAS,OAAQ,OAAQ,QAAS,QAAQ,EACnDA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,UAAW,UAAW,QAAS,QAAQ,EAChDA,CACX,CClDe,MAAMiB,WAAiBxB,CAAa,CAC/C,aAAc,CACV,QACA,KAAK,KAAO,QACZ,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,IAAIC,EACdD,EAAI,SAAW,CAAC,UAAW,UAAW,SAAU,QAAS,QAAQ,EACjE,MAAME,EAAW,CACb,QACA,QACA,SACA,UACA,UACA,OACA,MACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,SACA,OACA,WACA,SACA,MACR,EACUC,EAAW,CACb,QACA,SACA,UACA,UACA,QACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,QACR,EACI,QAAS,EAAI,EAAG,EAAID,EAAS,OAAQ,IACjC,QAASE,EAAI,EAAGA,EAAID,EAAS,OAAQC,IACjCJ,EAAI,SAAS,KAAKE,EAAS,CAAC,EAAIC,EAASC,CAAC,CAAC,EAGnD,OAAOJ,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,QACA,WACA,QACA,QACA,QACA,SACA,OACA,WACA,QACR,EACWA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,UAAW,QAAS,QAAS,OAAQ,SAAU,SAAU,SAAU,OAAO,EACnFA,CACX,CCjFe,MAAMkB,WAAmBzB,CAAa,CACjD,aAAc,CACV,QACA,KAAK,KAAO,WACZ,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,IAAIC,EACdD,EAAI,SAAW,CACX,UACA,UACA,UACA,QACA,SACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,UACA,UACA,UACA,UACA,SACR,EACI,IAAIE,EAAW,CACX,QACA,QACA,OACA,OACA,SACA,SACA,OACA,QACA,OACA,OACA,MACA,OACR,EACQC,EAAW,CACX,SACA,SACA,OACA,SACA,QACA,UACA,OACA,UACA,QACA,OACA,OACR,EACI,QAAS,EAAI,EAAG,EAAID,EAAS,OAAQ,IACjC,QAASE,EAAI,EAAGA,EAAID,EAAS,OAAQC,IACjCJ,EAAI,SAAS,KAAKE,EAAS,CAAC,EAAIC,EAASC,CAAC,CAAC,EAGnD,OAAOJ,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CAAC,QAAS,MAAO,SAAU,QAAS,QAAS,UAAW,SAAU,SAAS,EACnFA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,SACA,SACA,SACA,UACA,UACA,QACA,SACA,SACA,SACA,QACR,EACWA,CACX,CCrFe,MAAMmB,WAAmB1B,CAAa,CACjD,aAAc,CACV,QACA,KAAK,KAAO,WACZ,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,IAAIC,EACdD,EAAI,SAAW,CACX,UACA,UACA,UACA,QACA,SACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,UACA,UACA,UACA,UACA,SACR,EACI,MAAME,EAAW,CACb,QACA,OACA,OACA,QACA,SACA,QACA,QACA,QACA,MACA,SACA,OACA,MACR,EACUC,EAAW,CAAC,OAAQ,QAAS,OAAQ,QAAS,MAAO,UAAW,SAAU,QAAQ,EACxF,QAAS,EAAI,EAAG,EAAID,EAAS,OAAQ,IACjC,QAASE,EAAI,EAAGA,EAAID,EAAS,OAAQC,IACjCJ,EAAI,SAAS,KAAKE,EAAS,CAAC,EAAIC,EAASC,CAAC,CAAC,EAGnD,OAAOJ,CACX,CACA,SAASH,IAAS,CACd,IAAIG,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,QACA,MACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,QACR,EACWA,CACX,CACA,SAASF,IAAO,CACZ,IAAIE,EAAM,IAAIC,EACd,OAAAD,EAAI,SAAW,CACX,SACA,SACA,SACA,UACA,WACA,QACA,SACA,SACA,SACA,SACA,MACA,QACA,SACA,SACA,SACA,OACA,OACA,UACA,QACR,EACWA,CACX,CC7Fe,MAAMoB,WAAoB3B,CAAa,CAClD,aAAc,CACV,QACA,KAAK,KAAO,WACZ,KAAK,OAASG,KACd,KAAK,OAASC,KACd,KAAK,KAAOC,IACf,CACL,CACA,SAASF,IAAS,CACd,IAAII,EAAM,I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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}