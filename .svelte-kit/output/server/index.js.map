{"version":3,"file":"index.js","sources":["../../../node_modules/esm-env/prod-ssr.js","../../../node_modules/@sveltejs/kit/src/constants.js","../../../node_modules/@sveltejs/kit/src/utils/http.js","../../../node_modules/@sveltejs/kit/src/runtime/control.js","../../../node_modules/@sveltejs/kit/src/utils/routing.js","../../../node_modules/@sveltejs/kit/src/exports/index.js","../../../node_modules/@sveltejs/kit/src/utils/error.js","../../../node_modules/@sveltejs/kit/src/runtime/server/utils.js","../../../node_modules/@sveltejs/kit/src/runtime/server/endpoint.js","../../../node_modules/@sveltejs/kit/src/utils/array.js","../../../node_modules/@sveltejs/kit/src/utils/url.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/actions.js","../../../node_modules/@sveltejs/kit/src/utils/promises.js","../../../node_modules/@sveltejs/kit/src/runtime/shared.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/load_data.js","../../../node_modules/@sveltejs/kit/src/runtime/hash.js","../../../node_modules/@sveltejs/kit/src/utils/escape.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/serialize_data.js","../../../node_modules/@sveltejs/kit/src/utils/misc.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/crypto.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/csp.js","../../../node_modules/@sveltejs/kit/src/utils/streaming.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/render.js","../../../node_modules/@sveltejs/kit/src/utils/options.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/respond_with_error.js","../../../node_modules/@sveltejs/kit/src/utils/functions.js","../../../node_modules/@sveltejs/kit/src/runtime/server/data/index.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/index.js","../../../node_modules/@sveltejs/kit/src/runtime/server/cookie.js","../../../node_modules/@sveltejs/kit/src/runtime/server/fetch.js","../../../node_modules/@sveltejs/kit/src/utils/exports.js","../../../node_modules/@sveltejs/kit/src/runtime/server/respond.js","../../../node_modules/@sveltejs/kit/src/utils/env.js","../../../node_modules/@sveltejs/kit/src/runtime/server/index.js"],"sourcesContent":["export const BROWSER = false;\nexport const DEV = false;\n","/**\n * A fake asset path used in `vite dev` and `vite preview`, so that we can\n * serve local assets while verifying that requests are correctly prefixed\n */\nexport const SVELTE_KIT_ASSETS = '/_svelte_kit_assets';\n\nexport const GENERATED_COMMENT = '// this file is generated — do not edit it\\n';\n\nexport const ENDPOINT_METHODS = new Set([\n\t'GET',\n\t'POST',\n\t'PUT',\n\t'PATCH',\n\t'DELETE',\n\t'OPTIONS',\n\t'HEAD'\n]);\n\nexport const PAGE_METHODS = new Set(['GET', 'POST', 'HEAD']);\n","/**\n * Given an Accept header and a list of possible content types, pick\n * the most suitable one to respond with\n * @param {string} accept\n * @param {string[]} types\n */\nexport function negotiate(accept, types) {\n\t/** @type {Array<{ type: string, subtype: string, q: number, i: number }>} */\n\tconst parts = [];\n\n\taccept.split(',').forEach((str, i) => {\n\t\tconst match = /([^/]+)\\/([^;]+)(?:;q=([0-9.]+))?/.exec(str);\n\n\t\t// no match equals invalid header — ignore\n\t\tif (match) {\n\t\t\tconst [, type, subtype, q = '1'] = match;\n\t\t\tparts.push({ type, subtype, q: +q, i });\n\t\t}\n\t});\n\n\tparts.sort((a, b) => {\n\t\tif (a.q !== b.q) {\n\t\t\treturn b.q - a.q;\n\t\t}\n\n\t\tif ((a.subtype === '*') !== (b.subtype === '*')) {\n\t\t\treturn a.subtype === '*' ? 1 : -1;\n\t\t}\n\n\t\tif ((a.type === '*') !== (b.type === '*')) {\n\t\t\treturn a.type === '*' ? 1 : -1;\n\t\t}\n\n\t\treturn a.i - b.i;\n\t});\n\n\tlet accepted;\n\tlet min_priority = Infinity;\n\n\tfor (const mimetype of types) {\n\t\tconst [type, subtype] = mimetype.split('/');\n\t\tconst priority = parts.findIndex(\n\t\t\t(part) =>\n\t\t\t\t(part.type === type || part.type === '*') &&\n\t\t\t\t(part.subtype === subtype || part.subtype === '*')\n\t\t);\n\n\t\tif (priority !== -1 && priority < min_priority) {\n\t\t\taccepted = mimetype;\n\t\t\tmin_priority = priority;\n\t\t}\n\t}\n\n\treturn accepted;\n}\n\n/**\n * Returns `true` if the request contains a `content-type` header with the given type\n * @param {Request} request\n * @param  {...string} types\n */\nfunction is_content_type(request, ...types) {\n\tconst type = request.headers.get('content-type')?.split(';', 1)[0].trim() ?? '';\n\treturn types.includes(type.toLowerCase());\n}\n\n/**\n * @param {Request} request\n */\nexport function is_form_content_type(request) {\n\t// These content types must be protected against CSRF\n\t// https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/enctype\n\treturn is_content_type(\n\t\trequest,\n\t\t'application/x-www-form-urlencoded',\n\t\t'multipart/form-data',\n\t\t'text/plain'\n\t);\n}\n","export class HttpError {\n\t/**\n\t * @param {number} status\n\t * @param {{message: string} extends App.Error ? (App.Error | string | undefined) : App.Error} body\n\t */\n\tconstructor(status, body) {\n\t\tthis.status = status;\n\t\tif (typeof body === 'string') {\n\t\t\tthis.body = { message: body };\n\t\t} else if (body) {\n\t\t\tthis.body = body;\n\t\t} else {\n\t\t\tthis.body = { message: `Error: ${status}` };\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this.body);\n\t}\n}\n\nexport class Redirect {\n\t/**\n\t * @param {300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308} status\n\t * @param {string} location\n\t */\n\tconstructor(status, location) {\n\t\tthis.status = status;\n\t\tthis.location = location;\n\t}\n}\n\n/**\n * @template {Record<string, unknown> | undefined} [T=undefined]\n */\nexport class ActionFailure {\n\t/**\n\t * @param {number} status\n\t * @param {T} [data]\n\t */\n\tconstructor(status, data) {\n\t\tthis.status = status;\n\t\tthis.data = data;\n\t}\n}\n\n/**\n * This is a grotesque hack that, in dev, allows us to replace the implementations\n * of these classes that you'd get by importing them from `@sveltejs/kit` with the\n * ones that are imported via Vite and loaded internally, so that instanceof\n * checks work even though SvelteKit imports this module via Vite and consumers\n * import it via Node\n * @param {{\n *   ActionFailure: typeof ActionFailure;\n *   HttpError: typeof HttpError;\n *   Redirect: typeof Redirect;\n * }} implementations\n */\nexport function replace_implementations(implementations) {\n\t// @ts-expect-error\n\tActionFailure = implementations.ActionFailure; // eslint-disable-line no-class-assign\n\t// @ts-expect-error\n\tHttpError = implementations.HttpError; // eslint-disable-line no-class-assign\n\t// @ts-expect-error\n\tRedirect = implementations.Redirect; // eslint-disable-line no-class-assign\n}\n","const param_pattern = /^(\\[)?(\\.\\.\\.)?(\\w+)(?:=(\\w+))?(\\])?$/;\n\n/**\n * Creates the regex pattern, extracts parameter names, and generates types for a route\n * @param {string} id\n */\nexport function parse_route_id(id) {\n\t/** @type {import('types').RouteParam[]} */\n\tconst params = [];\n\n\tconst pattern =\n\t\tid === '/'\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${get_route_segments(id)\n\t\t\t\t\t\t.map((segment) => {\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst rest_match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (rest_match) {\n\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\tname: rest_match[1],\n\t\t\t\t\t\t\t\t\tmatcher: rest_match[2],\n\t\t\t\t\t\t\t\t\toptional: false,\n\t\t\t\t\t\t\t\t\trest: true,\n\t\t\t\t\t\t\t\t\tchained: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn '(?:/(.*))?';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// special case — /[[optional]]/ could contain zero segments\n\t\t\t\t\t\t\tconst optional_match = /^\\[\\[(\\w+)(?:=(\\w+))?\\]\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (optional_match) {\n\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\tname: optional_match[1],\n\t\t\t\t\t\t\t\t\tmatcher: optional_match[2],\n\t\t\t\t\t\t\t\t\toptional: true,\n\t\t\t\t\t\t\t\t\trest: false,\n\t\t\t\t\t\t\t\t\tchained: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn '(?:/([^/]+))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!segment) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst parts = segment.split(/\\[(.+?)\\](?!\\])/);\n\t\t\t\t\t\t\tconst result = parts\n\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\tif (content.startsWith('x+')) {\n\t\t\t\t\t\t\t\t\t\t\treturn escape(String.fromCharCode(parseInt(content.slice(2), 16)));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (content.startsWith('u+')) {\n\t\t\t\t\t\t\t\t\t\t\treturn escape(\n\t\t\t\t\t\t\t\t\t\t\t\tString.fromCharCode(\n\t\t\t\t\t\t\t\t\t\t\t\t\t...content\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.slice(2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.split('-')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map((code) => parseInt(code, 16))\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tconst match = param_pattern.exec(content);\n\t\t\t\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\t\t\t`Invalid param: ${content}. Params and matcher names can only have underscores and alphanumeric characters.`\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tconst [, is_optional, is_rest, name, matcher] = match;\n\t\t\t\t\t\t\t\t\t\t// It's assumed that the following invalid route id cases are already checked\n\t\t\t\t\t\t\t\t\t\t// - unbalanced brackets\n\t\t\t\t\t\t\t\t\t\t// - optional param following rest param\n\n\t\t\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\tmatcher,\n\t\t\t\t\t\t\t\t\t\t\toptional: !!is_optional,\n\t\t\t\t\t\t\t\t\t\t\trest: !!is_rest,\n\t\t\t\t\t\t\t\t\t\t\tchained: is_rest ? i === 1 && parts[0] === '' : false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn is_rest ? '(.*?)' : is_optional ? '([^/]*)?' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn escape(content);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.join('');\n\n\t\t\t\t\t\t\treturn '/' + result;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}/?$`\n\t\t\t  );\n\n\treturn { pattern, params };\n}\n\nconst optional_param_regex = /\\/\\[\\[\\w+?(?:=\\w+)?\\]\\]/;\n\n/**\n * Removes optional params from a route ID.\n * @param {string} id\n * @returns The route id with optional params removed\n */\nexport function remove_optional_params(id) {\n\treturn id.replace(optional_param_regex, '');\n}\n\n/**\n * Returns `false` for `(group)` segments\n * @param {string} segment\n */\nfunction affects_path(segment) {\n\treturn !/^\\([^)]+\\)$/.test(segment);\n}\n\n/**\n * Splits a route id into its segments, removing segments that\n * don't affect the path (i.e. groups). The root route is represented by `/`\n * and will be returned as `['']`.\n * @param {string} route\n * @returns string[]\n */\nexport function get_route_segments(route) {\n\treturn route.slice(1).split('/').filter(affects_path);\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {import('types').RouteParam[]} params\n * @param {Record<string, import('@sveltejs/kit').ParamMatcher>} matchers\n */\nexport function exec(match, params, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst result = {};\n\n\tconst values = match.slice(1);\n\n\tlet buffered = 0;\n\n\tfor (let i = 0; i < params.length; i += 1) {\n\t\tconst param = params[i];\n\t\tlet value = values[i - buffered];\n\n\t\t// in the `[[a=b]]/.../[...rest]` case, if one or more optional parameters\n\t\t// weren't matched, roll the skipped values into the rest\n\t\tif (param.chained && param.rest && buffered) {\n\t\t\tvalue = values\n\t\t\t\t.slice(i - buffered, i + 1)\n\t\t\t\t.filter((s) => s)\n\t\t\t\t.join('/');\n\n\t\t\tbuffered = 0;\n\t\t}\n\n\t\t// if `value` is undefined, it means this is an optional or rest parameter\n\t\tif (value === undefined) {\n\t\t\tif (param.rest) result[param.name] = '';\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!param.matcher || matchers[param.matcher](value)) {\n\t\t\tresult[param.name] = value;\n\n\t\t\t// Now that the params match, reset the buffer if the next param isn't the [...rest]\n\t\t\t// and the next value is defined, otherwise the buffer will cause us to skip values\n\t\t\tconst next_param = params[i + 1];\n\t\t\tconst next_value = values[i + 1];\n\t\t\tif (next_param && !next_param.rest && next_param.optional && next_value && param.chained) {\n\t\t\t\tbuffered = 0;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// in the `/[[a=b]]/...` case, if the value didn't satisfy the matcher,\n\t\t// keep track of the number of skipped optional parameters and continue\n\t\tif (param.optional && param.chained) {\n\t\t\tbuffered++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// otherwise, if the matcher returns `false`, the route did not match\n\t\treturn;\n\t}\n\n\tif (buffered) return;\n\treturn result;\n}\n\n/** @param {string} str */\nfunction escape(str) {\n\treturn (\n\t\tstr\n\t\t\t.normalize()\n\t\t\t// escape [ and ] before escaping other characters, since they are used in the replacements\n\t\t\t.replace(/[[\\]]/g, '\\\\$&')\n\t\t\t// replace %, /, ? and # with their encoded versions because decode_pathname leaves them untouched\n\t\t\t.replace(/%/g, '%25')\n\t\t\t.replace(/\\//g, '%2[Ff]')\n\t\t\t.replace(/\\?/g, '%3[Ff]')\n\t\t\t.replace(/#/g, '%23')\n\t\t\t// escape characters that have special meaning in regex\n\t\t\t.replace(/[.*+?^${}()|\\\\]/g, '\\\\$&')\n\t);\n}\n","import { HttpError, Redirect, ActionFailure } from '../runtime/control.js';\nimport { BROWSER, DEV } from 'esm-env';\nimport { get_route_segments } from '../utils/routing.js';\n\nexport { VERSION } from '../version.js';\n\n/**\n * @overload\n * @param {number} status\n * @param {App.Error} body\n * @return {HttpError}\n */\n\n/**\n * @overload\n * @param {number} status\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} [body]\n * @return {HttpError}\n */\n\n/**\n * Creates an `HttpError` object with an HTTP status code and an optional message.\n * This object, if thrown during request handling, will cause SvelteKit to\n * return an error response without invoking `handleError`.\n * Make sure you're not catching the thrown error, which would prevent SvelteKit from handling it.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} body An object that conforms to the App.Error type. If a string is passed, it will be used as the message property.\n */\nexport function error(status, body) {\n\tif ((!BROWSER || DEV) && (isNaN(status) || status < 400 || status > 599)) {\n\t\tthrow new Error(`HTTP error status codes must be between 400 and 599 — ${status} is invalid`);\n\t}\n\n\treturn new HttpError(status, body);\n}\n\n/**\n * Create a `Redirect` object. If thrown during request handling, SvelteKit will return a redirect response.\n * Make sure you're not catching the thrown redirect, which would prevent SvelteKit from handling it.\n * @param {300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#redirection_messages). Must be in the range 300-308.\n * @param {string} location The location to redirect to.\n */\nexport function redirect(status, location) {\n\tif ((!BROWSER || DEV) && (isNaN(status) || status < 300 || status > 308)) {\n\t\tthrow new Error('Invalid status code');\n\t}\n\n\treturn new Redirect(status, location);\n}\n\n/**\n * Create a JSON `Response` object from the supplied data.\n * @param {any} data The value that will be serialized as JSON.\n * @param {ResponseInit} [init] Options such as `status` and `headers` that will be added to the response. `Content-Type: application/json` and `Content-Length` headers will be added automatically.\n */\nexport function json(data, init) {\n\t// TODO deprecate this in favour of `Response.json` when it's\n\t// more widely supported\n\tconst body = JSON.stringify(data);\n\n\t// we can't just do `text(JSON.stringify(data), init)` because\n\t// it will set a default `content-type` header. duplicated code\n\t// means less duplicated work\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-length')) {\n\t\theaders.set('content-length', encoder.encode(body).byteLength.toString());\n\t}\n\n\tif (!headers.has('content-type')) {\n\t\theaders.set('content-type', 'application/json');\n\t}\n\n\treturn new Response(body, {\n\t\t...init,\n\t\theaders\n\t});\n}\n\nconst encoder = new TextEncoder();\n\n/**\n * Create a `Response` object from the supplied body.\n * @param {string} body The value that will be used as-is.\n * @param {ResponseInit} [init] Options such as `status` and `headers` that will be added to the response. A `Content-Length` header will be added automatically.\n */\nexport function text(body, init) {\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-length')) {\n\t\tconst encoded = encoder.encode(body);\n\t\theaders.set('content-length', encoded.byteLength.toString());\n\t\treturn new Response(encoded, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\treturn new Response(body, {\n\t\t...init,\n\t\theaders\n\t});\n}\n\n/**\n * Create an `ActionFailure` object.\n * @template {Record<string, unknown> | undefined} [T=undefined]\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {T} [data] Data associated with the failure (e.g. validation errors)\n * @returns {ActionFailure<T>}\n */\nexport function fail(status, data) {\n\treturn new ActionFailure(status, data);\n}\n\nconst basic_param_pattern = /\\[(\\[)?(\\.\\.\\.)?(\\w+?)(?:=(\\w+))?\\]\\]?/g;\n\n/**\n * Populate a route ID with params to resolve a pathname.\n * @example\n * ```js\n * resolvePath(\n *   `/blog/[slug]/[...somethingElse]`,\n *   {\n *     slug: 'hello-world',\n *     somethingElse: 'something/else'\n *   }\n * ); // `/blog/hello-world/something/else`\n * ```\n * @param {string} id\n * @param {Record<string, string | undefined>} params\n * @returns {string}\n */\nexport function resolvePath(id, params) {\n\tconst segments = get_route_segments(id);\n\treturn (\n\t\t'/' +\n\t\tsegments\n\t\t\t.map((segment) =>\n\t\t\t\tsegment.replace(basic_param_pattern, (_, optional, rest, name) => {\n\t\t\t\t\tconst param_value = params[name];\n\n\t\t\t\t\t// This is nested so TS correctly narrows the type\n\t\t\t\t\tif (!param_value) {\n\t\t\t\t\t\tif (optional) return '';\n\t\t\t\t\t\tif (rest && param_value !== undefined) return '';\n\t\t\t\t\t\tthrow new Error(`Missing parameter '${name}' in route ${id}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (param_value.startsWith('/') || param_value.endsWith('/'))\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Parameter '${name}' in route ${id} cannot start or end with a slash -- this would cause an invalid route like foo//bar`\n\t\t\t\t\t\t);\n\t\t\t\t\treturn param_value;\n\t\t\t\t})\n\t\t\t)\n\t\t\t.filter(Boolean)\n\t\t\t.join('/')\n\t);\n}\n","/**\n * @param {unknown} err\n * @return {Error}\n */\nexport function coalesce_to_error(err) {\n\treturn err instanceof Error ||\n\t\t(err && /** @type {any} */ (err).name && /** @type {any} */ (err).message)\n\t\t? /** @type {Error} */ (err)\n\t\t: new Error(JSON.stringify(err));\n}\n\n/**\n * This is an identity function that exists to make TypeScript less\n * paranoid about people throwing things that aren't errors, which\n * frankly is not something we should care about\n * @param {unknown} error\n */\nexport function normalize_error(error) {\n\treturn /** @type {import('../runtime/control.js').Redirect | import('../runtime/control.js').HttpError | Error} */ (\n\t\terror\n\t);\n}\n","import { DEV } from 'esm-env';\nimport { json, text } from '../../exports/index.js';\nimport { coalesce_to_error } from '../../utils/error.js';\nimport { negotiate } from '../../utils/http.js';\nimport { HttpError } from '../control.js';\nimport { fix_stack_trace } from '../shared-server.js';\nimport { ENDPOINT_METHODS } from '../../constants.js';\n\n/** @param {any} body */\nexport function is_pojo(body) {\n\tif (typeof body !== 'object') return false;\n\n\tif (body) {\n\t\tif (body instanceof Uint8Array) return false;\n\t\tif (body instanceof ReadableStream) return false;\n\t}\n\n\treturn true;\n}\n\n/**\n * @param {Partial<Record<import('types').HttpMethod, any>>} mod\n * @param {import('types').HttpMethod} method\n */\nexport function method_not_allowed(mod, method) {\n\treturn text(`${method} method not allowed`, {\n\t\tstatus: 405,\n\t\theaders: {\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n\t\t\t// \"The server must generate an Allow header field in a 405 status code response\"\n\t\t\tallow: allowed_methods(mod).join(', ')\n\t\t}\n\t});\n}\n\n/** @param {Partial<Record<import('types').HttpMethod, any>>} mod */\nexport function allowed_methods(mod) {\n\tconst allowed = Array.from(ENDPOINT_METHODS).filter((method) => method in mod);\n\n\tif ('GET' in mod || 'HEAD' in mod) allowed.push('HEAD');\n\n\treturn allowed;\n}\n\n/**\n * Return as a response that renders the error.html\n *\n * @param {import('types').SSROptions} options\n * @param {number} status\n * @param {string} message\n */\nexport function static_error_page(options, status, message) {\n\tlet page = options.templates.error({ status, message });\n\n\tif (DEV) {\n\t\t// inject Vite HMR client, for easier debugging\n\t\tpage = page.replace('</head>', '<script type=\"module\" src=\"/@vite/client\"></script></head>');\n\t}\n\n\treturn text(page, {\n\t\theaders: { 'content-type': 'text/html; charset=utf-8' },\n\t\tstatus\n\t});\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSROptions} options\n * @param {unknown} error\n */\nexport async function handle_fatal_error(event, options, error) {\n\terror = error instanceof HttpError ? error : coalesce_to_error(error);\n\tconst status = error instanceof HttpError ? error.status : 500;\n\tconst body = await handle_error_and_jsonify(event, options, error);\n\n\t// ideally we'd use sec-fetch-dest instead, but Safari — quelle surprise — doesn't support it\n\tconst type = negotiate(event.request.headers.get('accept') || 'text/html', [\n\t\t'application/json',\n\t\t'text/html'\n\t]);\n\n\tif (event.isDataRequest || type === 'application/json') {\n\t\treturn json(body, {\n\t\t\tstatus\n\t\t});\n\t}\n\n\treturn static_error_page(options, status, body.message);\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSROptions} options\n * @param {any} error\n * @returns {Promise<App.Error>}\n */\nexport async function handle_error_and_jsonify(event, options, error) {\n\tif (error instanceof HttpError) {\n\t\treturn error.body;\n\t} else {\n\t\tif (__SVELTEKIT_DEV__ && typeof error == 'object') {\n\t\t\terror = new Proxy(error, {\n\t\t\t\tget: (target, property) => {\n\t\t\t\t\tif (property === 'stack') {\n\t\t\t\t\t\treturn fix_stack_trace(target.stack);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Reflect.get(target, property, target);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\t(await options.hooks.handleError({ error, event })) ?? {\n\t\t\t\tmessage: event.route.id != null ? 'Internal Error' : 'Not Found'\n\t\t\t}\n\t\t);\n\t}\n}\n\n/**\n * @param {number} status\n * @param {string} location\n */\nexport function redirect_response(status, location) {\n\tconst response = new Response(undefined, {\n\t\tstatus,\n\t\theaders: { location }\n\t});\n\treturn response;\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {Error & { path: string }} error\n */\nexport function clarify_devalue_error(event, error) {\n\tif (error.path) {\n\t\treturn `Data returned from \\`load\\` while rendering ${event.route.id} is not serializable: ${error.message} (data${error.path})`;\n\t}\n\n\tif (error.path === '') {\n\t\treturn `Data returned from \\`load\\` while rendering ${event.route.id} is not a plain object`;\n\t}\n\n\t// belt and braces — this should never happen\n\treturn error.message;\n}\n\n/**\n * @param {import('types').ServerDataNode} node\n */\nexport function stringify_uses(node) {\n\tconst uses = [];\n\n\tif (node.uses && node.uses.dependencies.size > 0) {\n\t\tuses.push(`\"dependencies\":${JSON.stringify(Array.from(node.uses.dependencies))}`);\n\t}\n\n\tif (node.uses && node.uses.params.size > 0) {\n\t\tuses.push(`\"params\":${JSON.stringify(Array.from(node.uses.params))}`);\n\t}\n\n\tif (node.uses?.parent) uses.push('\"parent\":1');\n\tif (node.uses?.route) uses.push('\"route\":1');\n\tif (node.uses?.url) uses.push('\"url\":1');\n\n\treturn `\"uses\":{${uses.join(',')}}`;\n}\n","import { ENDPOINT_METHODS, PAGE_METHODS } from '../../constants.js';\nimport { negotiate } from '../../utils/http.js';\nimport { Redirect } from '../control.js';\nimport { method_not_allowed } from './utils.js';\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSREndpoint} mod\n * @param {import('types').SSRState} state\n * @returns {Promise<Response>}\n */\nexport async function render_endpoint(event, mod, state) {\n\tconst method = /** @type {import('types').HttpMethod} */ (event.request.method);\n\n\tlet handler = mod[method];\n\n\tif (!handler && method === 'HEAD') {\n\t\thandler = mod.GET;\n\t}\n\n\tif (!handler) {\n\t\treturn method_not_allowed(mod, method);\n\t}\n\n\tconst prerender = mod.prerender ?? state.prerender_default;\n\n\tif (prerender && (mod.POST || mod.PATCH || mod.PUT || mod.DELETE)) {\n\t\tthrow new Error('Cannot prerender endpoints that have mutative methods');\n\t}\n\n\tif (state.prerendering && !prerender) {\n\t\tif (state.depth > 0) {\n\t\t\t// if request came from a prerendered page, bail\n\t\t\tthrow new Error(`${event.route.id} is not prerenderable`);\n\t\t} else {\n\t\t\t// if request came direct from the crawler, signal that\n\t\t\t// this route cannot be prerendered, but don't bail\n\t\t\treturn new Response(undefined, { status: 204 });\n\t\t}\n\t}\n\n\ttry {\n\t\tlet response = await handler(\n\t\t\t/** @type {import('@sveltejs/kit').RequestEvent<Record<string, any>>} */ (event)\n\t\t);\n\n\t\tif (!(response instanceof Response)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Invalid response from route ${event.url.pathname}: handler should return a Response object`\n\t\t\t);\n\t\t}\n\n\t\tif (state.prerendering) {\n\t\t\t// the returned Response might have immutable Headers\n\t\t\t// so we should clone them before trying to mutate them\n\t\t\tresponse = new Response(response.body, {\n\t\t\t\tstatus: response.status,\n\t\t\t\tstatusText: response.statusText,\n\t\t\t\theaders: new Headers(response.headers)\n\t\t\t});\n\t\t\tresponse.headers.set('x-sveltekit-prerender', String(prerender));\n\t\t}\n\n\t\treturn response;\n\t} catch (e) {\n\t\tif (e instanceof Redirect) {\n\t\t\treturn new Response(undefined, {\n\t\t\t\tstatus: e.status,\n\t\t\t\theaders: { location: e.location }\n\t\t\t});\n\t\t}\n\n\t\tthrow e;\n\t}\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n */\nexport function is_endpoint_request(event) {\n\tconst { method, headers } = event.request;\n\n\t// These methods exist exclusively for endpoints\n\tif (ENDPOINT_METHODS.has(method) && !PAGE_METHODS.has(method)) {\n\t\treturn true;\n\t}\n\n\t// use:enhance uses a custom header to disambiguate\n\tif (method === 'POST' && headers.get('x-sveltekit-action') === 'true') return false;\n\n\t// GET/POST requests may be for endpoints or pages. We prefer endpoints if this isn't a text/html request\n\tconst accept = event.request.headers.get('accept') ?? '*/*';\n\treturn negotiate(accept, ['*', 'text/html']) !== 'text/html';\n}\n","/**\n * Removes nullish values from an array.\n *\n * @template T\n * @param {Array<T>} arr\n */\nexport function compact(arr) {\n\treturn arr.filter(/** @returns {val is NonNullable<T>} */ (val) => val != null);\n}\n","import { BROWSER } from 'esm-env';\n\nconst absolute = /^([a-z]+:)?\\/?\\//;\nconst scheme = /^[a-z]+:/;\n\n/**\n * @param {string} base\n * @param {string} path\n */\nexport function resolve(base, path) {\n\tif (scheme.test(path)) return path;\n\tif (path[0] === '#') return base + path;\n\n\tconst base_match = absolute.exec(base);\n\tconst path_match = absolute.exec(path);\n\n\tif (!base_match) {\n\t\tthrow new Error(`bad base path: \"${base}\"`);\n\t}\n\n\tconst baseparts = path_match ? [] : base.slice(base_match[0].length).split('/');\n\tconst pathparts = path_match ? path.slice(path_match[0].length).split('/') : path.split('/');\n\n\tbaseparts.pop();\n\n\tfor (let i = 0; i < pathparts.length; i += 1) {\n\t\tconst part = pathparts[i];\n\t\tif (part === '.') continue;\n\t\telse if (part === '..') baseparts.pop();\n\t\telse baseparts.push(part);\n\t}\n\n\tconst prefix = (path_match && path_match[0]) || (base_match && base_match[0]) || '';\n\n\treturn `${prefix}${baseparts.join('/')}`;\n}\n\n/** @param {string} path */\nexport function is_root_relative(path) {\n\treturn path[0] === '/' && path[1] !== '/';\n}\n\n/**\n * @param {string} path\n * @param {import('types').TrailingSlash} trailing_slash\n */\nexport function normalize_path(path, trailing_slash) {\n\tif (path === '/' || trailing_slash === 'ignore') return path;\n\n\tif (trailing_slash === 'never') {\n\t\treturn path.endsWith('/') ? path.slice(0, -1) : path;\n\t} else if (trailing_slash === 'always' && !path.endsWith('/')) {\n\t\treturn path + '/';\n\t}\n\n\treturn path;\n}\n\n/**\n * Decode pathname excluding %25 to prevent further double decoding of params\n * @param {string} pathname\n */\nexport function decode_pathname(pathname) {\n\treturn pathname.split('%25').map(decodeURI).join('%25');\n}\n\n/** @param {Record<string, string>} params */\nexport function decode_params(params) {\n\tfor (const key in params) {\n\t\t// input has already been decoded by decodeURI\n\t\t// now handle the rest\n\t\tparams[key] = decodeURIComponent(params[key]);\n\t}\n\n\treturn params;\n}\n\n/**\n * The error when a URL is malformed is not very helpful, so we augment it with the URI\n * @param {string} uri\n */\nexport function decode_uri(uri) {\n\ttry {\n\t\treturn decodeURI(uri);\n\t} catch (e) {\n\t\tif (e instanceof Error) {\n\t\t\te.message = `Failed to decode URI: ${uri}\\n` + e.message;\n\t\t}\n\t\tthrow e;\n\t}\n}\n\n/**\n * URL properties that could change during the lifetime of the page,\n * which excludes things like `origin`\n */\nconst tracked_url_properties = /** @type {const} */ ([\n\t'href',\n\t'pathname',\n\t'search',\n\t'searchParams',\n\t'toString',\n\t'toJSON'\n]);\n\n/**\n * @param {URL} url\n * @param {() => void} callback\n */\nexport function make_trackable(url, callback) {\n\tconst tracked = new URL(url);\n\n\tfor (const property of tracked_url_properties) {\n\t\tObject.defineProperty(tracked, property, {\n\t\t\tget() {\n\t\t\t\tcallback();\n\t\t\t\treturn url[property];\n\t\t\t},\n\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true\n\t\t});\n\t}\n\n\tif (!BROWSER) {\n\t\t// @ts-ignore\n\t\ttracked[Symbol.for('nodejs.util.inspect.custom')] = (depth, opts, inspect) => {\n\t\t\treturn inspect(url, opts);\n\t\t};\n\t}\n\n\tdisable_hash(tracked);\n\n\treturn tracked;\n}\n\n/**\n * Disallow access to `url.hash` on the server and in `load`\n * @param {URL} url\n */\nexport function disable_hash(url) {\n\tObject.defineProperty(url, 'hash', {\n\t\tget() {\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot access event.url.hash. Consider using `$page.url.hash` inside a component instead'\n\t\t\t);\n\t\t}\n\t});\n}\n\n/**\n * Disallow access to `url.search` and `url.searchParams` during prerendering\n * @param {URL} url\n */\nexport function disable_search(url) {\n\tfor (const property of ['search', 'searchParams']) {\n\t\tObject.defineProperty(url, property, {\n\t\t\tget() {\n\t\t\t\tthrow new Error(`Cannot access url.${property} on a page with prerendering enabled`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst DATA_SUFFIX = '/__data.json';\n\n/** @param {string} pathname */\nexport function has_data_suffix(pathname) {\n\treturn pathname.endsWith(DATA_SUFFIX);\n}\n\n/** @param {string} pathname */\nexport function add_data_suffix(pathname) {\n\treturn pathname.replace(/\\/$/, '') + DATA_SUFFIX;\n}\n\n/** @param {string} pathname */\nexport function strip_data_suffix(pathname) {\n\treturn pathname.slice(0, -DATA_SUFFIX.length);\n}\n","import * as devalue from 'devalue';\nimport { error, json } from '../../../exports/index.js';\nimport { normalize_error } from '../../../utils/error.js';\nimport { is_form_content_type, negotiate } from '../../../utils/http.js';\nimport { HttpError, Redirect, ActionFailure } from '../../control.js';\nimport { handle_error_and_jsonify } from '../utils.js';\n\n/** @param {import('@sveltejs/kit').RequestEvent} event */\nexport function is_action_json_request(event) {\n\tconst accept = negotiate(event.request.headers.get('accept') ?? '*/*', [\n\t\t'application/json',\n\t\t'text/html'\n\t]);\n\n\treturn accept === 'application/json' && event.request.method === 'POST';\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSROptions} options\n * @param {import('types').SSRNode['server'] | undefined} server\n */\nexport async function handle_action_json_request(event, options, server) {\n\tconst actions = server?.actions;\n\n\tif (!actions) {\n\t\t// TODO should this be a different error altogether?\n\t\tconst no_actions_error = error(405, 'POST method not allowed. No actions exist for this page');\n\t\treturn action_json(\n\t\t\t{\n\t\t\t\ttype: 'error',\n\t\t\t\terror: await handle_error_and_jsonify(event, options, no_actions_error)\n\t\t\t},\n\t\t\t{\n\t\t\t\tstatus: no_actions_error.status,\n\t\t\t\theaders: {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n\t\t\t\t\t// \"The server must generate an Allow header field in a 405 status code response\"\n\t\t\t\t\tallow: 'GET'\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tcheck_named_default_separate(actions);\n\n\ttry {\n\t\tconst data = await call_action(event, actions);\n\n\t\tif (__SVELTEKIT_DEV__) {\n\t\t\tvalidate_action_return(data);\n\t\t}\n\n\t\tif (data instanceof ActionFailure) {\n\t\t\treturn action_json({\n\t\t\t\ttype: 'failure',\n\t\t\t\tstatus: data.status,\n\t\t\t\t// @ts-expect-error we assign a string to what is supposed to be an object. That's ok\n\t\t\t\t// because we don't use the object outside, and this way we have better code navigation\n\t\t\t\t// through knowing where the related interface is used.\n\t\t\t\tdata: stringify_action_response(data.data, /** @type {string} */ (event.route.id))\n\t\t\t});\n\t\t} else {\n\t\t\treturn action_json({\n\t\t\t\ttype: 'success',\n\t\t\t\tstatus: data ? 200 : 204,\n\t\t\t\t// @ts-expect-error see comment above\n\t\t\t\tdata: stringify_action_response(data, /** @type {string} */ (event.route.id))\n\t\t\t});\n\t\t}\n\t} catch (e) {\n\t\tconst err = normalize_error(e);\n\n\t\tif (err instanceof Redirect) {\n\t\t\treturn action_json_redirect(err);\n\t\t}\n\n\t\treturn action_json(\n\t\t\t{\n\t\t\t\ttype: 'error',\n\t\t\t\terror: await handle_error_and_jsonify(event, options, check_incorrect_fail_use(err))\n\t\t\t},\n\t\t\t{\n\t\t\t\tstatus: err instanceof HttpError ? err.status : 500\n\t\t\t}\n\t\t);\n\t}\n}\n\n/**\n * @param {HttpError | Error} error\n */\nfunction check_incorrect_fail_use(error) {\n\treturn error instanceof ActionFailure\n\t\t? new Error('Cannot \"throw fail()\". Use \"return fail()\"')\n\t\t: error;\n}\n\n/**\n * @param {import('@sveltejs/kit').Redirect} redirect\n */\nexport function action_json_redirect(redirect) {\n\treturn action_json({\n\t\ttype: 'redirect',\n\t\tstatus: redirect.status,\n\t\tlocation: redirect.location\n\t});\n}\n\n/**\n * @param {import('@sveltejs/kit').ActionResult} data\n * @param {ResponseInit} [init]\n */\nfunction action_json(data, init) {\n\treturn json(data, init);\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n */\nexport function is_action_request(event) {\n\treturn event.request.method === 'POST';\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSRNode['server'] | undefined} server\n * @returns {Promise<import('@sveltejs/kit').ActionResult>}\n */\nexport async function handle_action_request(event, server) {\n\tconst actions = server?.actions;\n\n\tif (!actions) {\n\t\t// TODO should this be a different error altogether?\n\t\tevent.setHeaders({\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n\t\t\t// \"The server must generate an Allow header field in a 405 status code response\"\n\t\t\tallow: 'GET'\n\t\t});\n\t\treturn {\n\t\t\ttype: 'error',\n\t\t\terror: error(405, 'POST method not allowed. No actions exist for this page')\n\t\t};\n\t}\n\n\tcheck_named_default_separate(actions);\n\n\ttry {\n\t\tconst data = await call_action(event, actions);\n\n\t\tif (__SVELTEKIT_DEV__) {\n\t\t\tvalidate_action_return(data);\n\t\t}\n\n\t\tif (data instanceof ActionFailure) {\n\t\t\treturn {\n\t\t\t\ttype: 'failure',\n\t\t\t\tstatus: data.status,\n\t\t\t\tdata: data.data\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\ttype: 'success',\n\t\t\t\tstatus: 200,\n\t\t\t\t// @ts-expect-error this will be removed upon serialization, so `undefined` is the same as omission\n\t\t\t\tdata\n\t\t\t};\n\t\t}\n\t} catch (e) {\n\t\tconst err = normalize_error(e);\n\n\t\tif (err instanceof Redirect) {\n\t\t\treturn {\n\t\t\t\ttype: 'redirect',\n\t\t\t\tstatus: err.status,\n\t\t\t\tlocation: err.location\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttype: 'error',\n\t\t\terror: check_incorrect_fail_use(err)\n\t\t};\n\t}\n}\n\n/**\n * @param {import('@sveltejs/kit').Actions} actions\n */\nfunction check_named_default_separate(actions) {\n\tif (actions.default && Object.keys(actions).length > 1) {\n\t\tthrow new Error(\n\t\t\t'When using named actions, the default action cannot be used. See the docs for more info: https://kit.svelte.dev/docs/form-actions#named-actions'\n\t\t);\n\t}\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {NonNullable<import('types').SSRNode['server']['actions']>} actions\n * @throws {Redirect | ActionFailure | HttpError | Error}\n */\nasync function call_action(event, actions) {\n\tconst url = new URL(event.request.url);\n\n\tlet name = 'default';\n\tfor (const param of url.searchParams) {\n\t\tif (param[0].startsWith('/')) {\n\t\t\tname = param[0].slice(1);\n\t\t\tif (name === 'default') {\n\t\t\t\tthrow new Error('Cannot use reserved action name \"default\"');\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst action = actions[name];\n\tif (!action) {\n\t\tthrow new Error(`No action with name '${name}' found`);\n\t}\n\n\tif (!is_form_content_type(event.request)) {\n\t\tthrow new Error(\n\t\t\t`Actions expect form-encoded data (received ${event.request.headers.get('content-type')})`\n\t\t);\n\t}\n\n\treturn action(event);\n}\n\n/** @param {any} data */\nfunction validate_action_return(data) {\n\tif (data instanceof Redirect) {\n\t\tthrow new Error('Cannot `return redirect(...)` — use `throw redirect(...)` instead');\n\t}\n\n\tif (data instanceof HttpError) {\n\t\tthrow new Error(\n\t\t\t'Cannot `return error(...)` — use `throw error(...)` or `return fail(...)` instead'\n\t\t);\n\t}\n}\n\n/**\n * Try to `devalue.uneval` the data object, and if it fails, return a proper Error with context\n * @param {any} data\n * @param {string} route_id\n */\nexport function uneval_action_response(data, route_id) {\n\treturn try_deserialize(data, devalue.uneval, route_id);\n}\n\n/**\n * Try to `devalue.stringify` the data object, and if it fails, return a proper Error with context\n * @param {any} data\n * @param {string} route_id\n */\nfunction stringify_action_response(data, route_id) {\n\treturn try_deserialize(data, devalue.stringify, route_id);\n}\n\n/**\n * @param {any} data\n * @param {(data: any) => string} fn\n * @param {string} route_id\n */\nfunction try_deserialize(data, fn, route_id) {\n\ttry {\n\t\treturn fn(data);\n\t} catch (e) {\n\t\t// If we're here, the data could not be serialized with devalue\n\t\tconst error = /** @type {any} */ (e);\n\n\t\tif ('path' in error) {\n\t\t\tlet message = `Data returned from action inside ${route_id} is not serializable: ${error.message}`;\n\t\t\tif (error.path !== '') message += ` (data.${error.path})`;\n\t\t\tthrow new Error(message);\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n","/**\n * Given an object, return a new object where all top level values are awaited\n *\n * @param {Record<string, any>} object\n * @returns {Promise<Record<string, any>>}\n */\nexport async function unwrap_promises(object) {\n\tfor (const key in object) {\n\t\tif (typeof object[key]?.then === 'function') {\n\t\t\treturn Object.fromEntries(\n\t\t\t\tawait Promise.all(Object.entries(object).map(async ([key, value]) => [key, await value]))\n\t\t\t);\n\t\t}\n\t}\n\n\treturn object;\n}\n","/**\n * @param {string} route_id\n * @param {string} dep\n */\nexport function validate_depends(route_id, dep) {\n\tconst match = /^(moz-icon|view-source|jar):/.exec(dep);\n\tif (match) {\n\t\tconsole.warn(\n\t\t\t`${route_id}: Calling \\`depends('${dep}')\\` will throw an error in Firefox because \\`${match[1]}\\` is a special URI scheme`\n\t\t);\n\t}\n}\n\nexport const INVALIDATED_PARAM = 'x-sveltekit-invalidated';\n","import { disable_search, make_trackable } from '../../../utils/url.js';\nimport { unwrap_promises } from '../../../utils/promises.js';\nimport { DEV } from 'esm-env';\nimport { validate_depends } from '../../shared.js';\n\n/**\n * Calls the user's server `load` function.\n * @param {{\n *   event: import('@sveltejs/kit').RequestEvent;\n *   state: import('types').SSRState;\n *   node: import('types').SSRNode | undefined;\n *   parent: () => Promise<Record<string, any>>;\n *   track_server_fetches: boolean;\n * }} opts\n * @returns {Promise<import('types').ServerDataNode | null>}\n */\nexport async function load_server_data({\n\tevent,\n\tstate,\n\tnode,\n\tparent,\n\t// TODO 2.0: Remove this\n\ttrack_server_fetches\n}) {\n\tif (!node?.server) return null;\n\n\tlet done = false;\n\n\tconst uses = {\n\t\tdependencies: new Set(),\n\t\tparams: new Set(),\n\t\tparent: false,\n\t\troute: false,\n\t\turl: false\n\t};\n\n\tconst url = make_trackable(event.url, () => {\n\t\tif (DEV && done && !uses.url) {\n\t\t\tconsole.warn(\n\t\t\t\t`${node.server_id}: Accessing URL properties in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the URL changes`\n\t\t\t);\n\t\t}\n\n\t\tuses.url = true;\n\t});\n\n\tif (state.prerendering) {\n\t\tdisable_search(url);\n\t}\n\n\tconst result = await node.server.load?.call(null, {\n\t\t...event,\n\t\tfetch: (info, init) => {\n\t\t\tconst url = new URL(info instanceof Request ? info.url : info, event.url);\n\n\t\t\tif (DEV && done && !uses.dependencies.has(url.href)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`${node.server_id}: Calling \\`event.fetch(...)\\` in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the dependency is invalidated`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// TODO 2.0: Remove this\n\t\t\tif (track_server_fetches) {\n\t\t\t\tuses.dependencies.add(url.href);\n\t\t\t}\n\n\t\t\treturn event.fetch(info, init);\n\t\t},\n\t\t/** @param {string[]} deps */\n\t\tdepends: (...deps) => {\n\t\t\tfor (const dep of deps) {\n\t\t\t\tconst { href } = new URL(dep, event.url);\n\n\t\t\t\tif (DEV) {\n\t\t\t\t\tvalidate_depends(node.server_id, dep);\n\n\t\t\t\t\tif (done && !uses.dependencies.has(href)) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t`${node.server_id}: Calling \\`depends(...)\\` in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the dependency is invalidated`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tuses.dependencies.add(href);\n\t\t\t}\n\t\t},\n\t\tparams: new Proxy(event.params, {\n\t\t\tget: (target, key) => {\n\t\t\t\tif (DEV && done && typeof key === 'string' && !uses.params.has(key)) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`${node.server_id}: Accessing \\`params.${String(\n\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t)}\\` in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the param changes`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tuses.params.add(key);\n\t\t\t\treturn target[/** @type {string} */ (key)];\n\t\t\t}\n\t\t}),\n\t\tparent: async () => {\n\t\t\tif (DEV && done && !uses.parent) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`${node.server_id}: Calling \\`parent(...)\\` in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when parent data changes`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tuses.parent = true;\n\t\t\treturn parent();\n\t\t},\n\t\troute: new Proxy(event.route, {\n\t\t\tget: (target, key) => {\n\t\t\t\tif (DEV && done && typeof key === 'string' && !uses.route) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`${node.server_id}: Accessing \\`route.${String(\n\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t)}\\` in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the route changes`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tuses.route = true;\n\t\t\t\treturn target[/** @type {'id'} */ (key)];\n\t\t\t}\n\t\t}),\n\t\turl\n\t});\n\n\tconst data = result ? await unwrap_promises(result) : null;\n\tif (__SVELTEKIT_DEV__) {\n\t\tvalidate_load_response(data, /** @type {string} */ (event.route.id));\n\t}\n\n\tdone = true;\n\n\treturn {\n\t\ttype: 'data',\n\t\tdata,\n\t\tuses,\n\t\tslash: node.server.trailingSlash\n\t};\n}\n\n/**\n * Calls the user's `load` function.\n * @param {{\n *   event: import('@sveltejs/kit').RequestEvent;\n *   fetched: import('./types').Fetched[];\n *   node: import('types').SSRNode | undefined;\n *   parent: () => Promise<Record<string, any>>;\n *   resolve_opts: import('types').RequiredResolveOptions;\n *   server_data_promise: Promise<import('types').ServerDataNode | null>;\n *   state: import('types').SSRState;\n *   csr: boolean;\n * }} opts\n * @returns {Promise<Record<string, any | Promise<any>> | null>}\n */\nexport async function load_data({\n\tevent,\n\tfetched,\n\tnode,\n\tparent,\n\tserver_data_promise,\n\tstate,\n\tresolve_opts,\n\tcsr\n}) {\n\tconst server_data_node = await server_data_promise;\n\n\tif (!node?.universal?.load) {\n\t\treturn server_data_node?.data ?? null;\n\t}\n\n\tconst result = await node.universal.load.call(null, {\n\t\turl: event.url,\n\t\tparams: event.params,\n\t\tdata: server_data_node?.data ?? null,\n\t\troute: event.route,\n\t\tfetch: create_universal_fetch(event, state, fetched, csr, resolve_opts),\n\t\tsetHeaders: event.setHeaders,\n\t\tdepends: () => {},\n\t\tparent\n\t});\n\n\tconst data = result ? await unwrap_promises(result) : null;\n\tif (__SVELTEKIT_DEV__) {\n\t\tvalidate_load_response(data, /** @type {string} */ (event.route.id));\n\t}\n\n\treturn data;\n}\n\n/**\n * @param {Pick<import('@sveltejs/kit').RequestEvent, 'fetch' | 'url' | 'request' | 'route'>} event\n * @param {import('types').SSRState} state\n * @param {import('./types').Fetched[]} fetched\n * @param {boolean} csr\n * @param {Pick<Required<import('@sveltejs/kit').ResolveOptions>, 'filterSerializedResponseHeaders'>} resolve_opts\n */\nexport function create_universal_fetch(event, state, fetched, csr, resolve_opts) {\n\t/**\n\t * @param {URL | RequestInfo} input\n\t * @param {RequestInit} [init]\n\t */\n\treturn async (input, init) => {\n\t\tconst cloned_body = input instanceof Request && input.body ? input.clone().body : null;\n\n\t\tconst cloned_headers =\n\t\t\tinput instanceof Request && [...input.headers].length\n\t\t\t\t? new Headers(input.headers)\n\t\t\t\t: init?.headers;\n\n\t\tlet response = await event.fetch(input, init);\n\n\t\tconst url = new URL(input instanceof Request ? input.url : input, event.url);\n\t\tconst same_origin = url.origin === event.url.origin;\n\n\t\t/** @type {import('types').PrerenderDependency} */\n\t\tlet dependency;\n\n\t\tif (same_origin) {\n\t\t\tif (state.prerendering) {\n\t\t\t\tdependency = { response, body: null };\n\t\t\t\tstate.prerendering.dependencies.set(url.pathname, dependency);\n\t\t\t}\n\t\t} else {\n\t\t\t// simulate CORS errors and \"no access to body in no-cors mode\" server-side for consistency with client-side behaviour\n\t\t\tconst mode = input instanceof Request ? input.mode : init?.mode ?? 'cors';\n\t\t\tif (mode === 'no-cors') {\n\t\t\t\tresponse = new Response('', {\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\theaders: response.headers\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst acao = response.headers.get('access-control-allow-origin');\n\t\t\t\tif (!acao || (acao !== event.url.origin && acao !== '*')) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`CORS error: ${\n\t\t\t\t\t\t\tacao ? 'Incorrect' : 'No'\n\t\t\t\t\t\t} 'Access-Control-Allow-Origin' header is present on the requested resource`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst proxy = new Proxy(response, {\n\t\t\tget(response, key, _receiver) {\n\t\t\t\tasync function text() {\n\t\t\t\t\tconst body = await response.text();\n\n\t\t\t\t\tif (!body || typeof body === 'string') {\n\t\t\t\t\t\tconst status_number = Number(response.status);\n\t\t\t\t\t\tif (isNaN(status_number)) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`response.status is not a number. value: \"${\n\t\t\t\t\t\t\t\t\tresponse.status\n\t\t\t\t\t\t\t\t}\" type: ${typeof response.status}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfetched.push({\n\t\t\t\t\t\t\turl: same_origin ? url.href.slice(event.url.origin.length) : url.href,\n\t\t\t\t\t\t\tmethod: event.request.method,\n\t\t\t\t\t\t\trequest_body: /** @type {string | ArrayBufferView | undefined} */ (\n\t\t\t\t\t\t\t\tinput instanceof Request && cloned_body\n\t\t\t\t\t\t\t\t\t? await stream_to_string(cloned_body)\n\t\t\t\t\t\t\t\t\t: init?.body\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trequest_headers: cloned_headers,\n\t\t\t\t\t\t\tresponse_body: body,\n\t\t\t\t\t\t\tresponse\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dependency) {\n\t\t\t\t\t\tdependency.body = body;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn body;\n\t\t\t\t}\n\n\t\t\t\tif (key === 'arrayBuffer') {\n\t\t\t\t\treturn async () => {\n\t\t\t\t\t\tconst buffer = await response.arrayBuffer();\n\n\t\t\t\t\t\tif (dependency) {\n\t\t\t\t\t\t\tdependency.body = new Uint8Array(buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// TODO should buffer be inlined into the page (albeit base64'd)?\n\t\t\t\t\t\t// any conditions in which it shouldn't be?\n\n\t\t\t\t\t\treturn buffer;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (key === 'text') {\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\n\t\t\t\tif (key === 'json') {\n\t\t\t\t\treturn async () => {\n\t\t\t\t\t\treturn JSON.parse(await text());\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn Reflect.get(response, key, response);\n\t\t\t}\n\t\t});\n\n\t\tif (csr) {\n\t\t\t// ensure that excluded headers can't be read\n\t\t\tconst get = response.headers.get;\n\t\t\tresponse.headers.get = (key) => {\n\t\t\t\tconst lower = key.toLowerCase();\n\t\t\t\tconst value = get.call(response.headers, lower);\n\t\t\t\tif (value && !lower.startsWith('x-sveltekit-')) {\n\t\t\t\t\tconst included = resolve_opts.filterSerializedResponseHeaders(lower, value);\n\t\t\t\t\tif (!included) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Failed to get response header \"${lower}\" — it must be included by the \\`filterSerializedResponseHeaders\\` option: https://kit.svelte.dev/docs/hooks#server-hooks-handle (at ${event.route.id})`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t};\n\t\t}\n\n\t\treturn proxy;\n\t};\n}\n\n/**\n * @param {ReadableStream<Uint8Array>} stream\n */\nasync function stream_to_string(stream) {\n\tlet result = '';\n\tconst reader = stream.getReader();\n\tconst decoder = new TextDecoder();\n\twhile (true) {\n\t\tconst { done, value } = await reader.read();\n\t\tif (done) {\n\t\t\tbreak;\n\t\t}\n\t\tresult += decoder.decode(value);\n\t}\n\treturn result;\n}\n\n/**\n * @param {any} data\n * @param {string} [routeId]\n */\nfunction validate_load_response(data, routeId) {\n\tif (data != null && Object.getPrototypeOf(data) !== Object.prototype) {\n\t\tthrow new Error(\n\t\t\t`a load function related to route '${routeId}' returned ${\n\t\t\t\ttypeof data !== 'object'\n\t\t\t\t\t? `a ${typeof data}`\n\t\t\t\t\t: data instanceof Response\n\t\t\t\t\t? 'a Response object'\n\t\t\t\t\t: Array.isArray(data)\n\t\t\t\t\t? 'an array'\n\t\t\t\t\t: 'a non-plain object'\n\t\t\t}, but must return a plain object at the top level (i.e. \\`return {...}\\`)`\n\t\t);\n\t}\n}\n","/**\n * Hash using djb2\n * @param {import('types').StrictBody[]} values\n */\nexport function hash(...values) {\n\tlet hash = 5381;\n\n\tfor (const value of values) {\n\t\tif (typeof value === 'string') {\n\t\t\tlet i = value.length;\n\t\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t\t} else if (ArrayBuffer.isView(value)) {\n\t\t\tconst buffer = new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n\t\t\tlet i = buffer.length;\n\t\t\twhile (i) hash = (hash * 33) ^ buffer[--i];\n\t\t} else {\n\t\t\tthrow new TypeError('value must be a string or TypedArray');\n\t\t}\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n","/**\n * When inside a double-quoted attribute value, only `&` and `\"` hold special meaning.\n * @see https://html.spec.whatwg.org/multipage/parsing.html#attribute-value-(double-quoted)-state\n * @type {Record<string, string>}\n */\nconst escape_html_attr_dict = {\n\t'&': '&amp;',\n\t'\"': '&quot;'\n};\n\nconst escape_html_attr_regex = new RegExp(\n\t// special characters\n\t`[${Object.keys(escape_html_attr_dict).join('')}]|` +\n\t\t// high surrogate without paired low surrogate\n\t\t'[\\\\ud800-\\\\udbff](?![\\\\udc00-\\\\udfff])|' +\n\t\t// a valid surrogate pair, the only match with 2 code units\n\t\t// we match it so that we can match unpaired low surrogates in the same pass\n\t\t// TODO: use lookbehind assertions once they are widely supported: (?<![\\ud800-udbff])[\\udc00-\\udfff]\n\t\t'[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|' +\n\t\t// unpaired low surrogate (see previous match)\n\t\t'[\\\\udc00-\\\\udfff]',\n\t'g'\n);\n\n/**\n * Formats a string to be used as an attribute's value in raw HTML.\n *\n * It escapes unpaired surrogates (which are allowed in js strings but invalid in HTML), escapes\n * characters that are special in attributes, and surrounds the whole string in double-quotes.\n *\n * @param {string} str\n * @returns {string} Escaped string surrounded by double-quotes.\n * @example const html = `<tag data-value=${escape_html_attr('value')}>...</tag>`;\n */\nexport function escape_html_attr(str) {\n\tconst escaped_str = str.replace(escape_html_attr_regex, (match) => {\n\t\tif (match.length === 2) {\n\t\t\t// valid surrogate pair\n\t\t\treturn match;\n\t\t}\n\n\t\treturn escape_html_attr_dict[match] ?? `&#${match.charCodeAt(0)};`;\n\t});\n\n\treturn `\"${escaped_str}\"`;\n}\n","import { escape_html_attr } from '../../../utils/escape.js';\nimport { hash } from '../../hash.js';\n\n/**\n * Inside a script element, only `</script` and `<!--` hold special meaning to the HTML parser.\n *\n * The first closes the script element, so everything after is treated as raw HTML.\n * The second disables further parsing until `-->`, so the script element might be unexpectedly\n * kept open until until an unrelated HTML comment in the page.\n *\n * U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR are escaped for the sake of pre-2018\n * browsers.\n *\n * @see tests for unsafe parsing examples.\n * @see https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements\n * @see https://html.spec.whatwg.org/multipage/syntax.html#cdata-rcdata-restrictions\n * @see https://html.spec.whatwg.org/multipage/parsing.html#script-data-state\n * @see https://html.spec.whatwg.org/multipage/parsing.html#script-data-double-escaped-state\n * @see https://github.com/tc39/proposal-json-superset\n * @type {Record<string, string>}\n */\nconst replacements = {\n\t'<': '\\\\u003C',\n\t'\\u2028': '\\\\u2028',\n\t'\\u2029': '\\\\u2029'\n};\n\nconst pattern = new RegExp(`[${Object.keys(replacements).join('')}]`, 'g');\n\n/**\n * Generates a raw HTML string containing a safe script element carrying data and associated attributes.\n *\n * It escapes all the special characters needed to guarantee the element is unbroken, but care must\n * be taken to ensure it is inserted in the document at an acceptable position for a script element,\n * and that the resulting string isn't further modified.\n *\n * @param {import('./types.js').Fetched} fetched\n * @param {(name: string, value: string) => boolean} filter\n * @param {boolean} [prerendering]\n * @returns {string} The raw HTML of a script element carrying the JSON payload.\n * @example const html = serialize_data('/data.json', null, { foo: 'bar' });\n */\nexport function serialize_data(fetched, filter, prerendering = false) {\n\t/** @type {Record<string, string>} */\n\tconst headers = {};\n\n\tlet cache_control = null;\n\tlet age = null;\n\tlet varyAny = false;\n\n\tfor (const [key, value] of fetched.response.headers) {\n\t\tif (filter(key, value)) {\n\t\t\theaders[key] = value;\n\t\t}\n\n\t\tif (key === 'cache-control') cache_control = value;\n\t\telse if (key === 'age') age = value;\n\t\telse if (key === 'vary' && value.trim() === '*') varyAny = true;\n\t}\n\n\tconst payload = {\n\t\tstatus: fetched.response.status,\n\t\tstatusText: fetched.response.statusText,\n\t\theaders,\n\t\tbody: fetched.response_body\n\t};\n\n\tconst safe_payload = JSON.stringify(payload).replace(pattern, (match) => replacements[match]);\n\n\tconst attrs = [\n\t\t'type=\"application/json\"',\n\t\t'data-sveltekit-fetched',\n\t\t`data-url=${escape_html_attr(fetched.url)}`\n\t];\n\n\tif (fetched.request_headers || fetched.request_body) {\n\t\t/** @type {import('types').StrictBody[]} */\n\t\tconst values = [];\n\n\t\tif (fetched.request_headers) {\n\t\t\tvalues.push([...new Headers(fetched.request_headers)].join(','));\n\t\t}\n\n\t\tif (fetched.request_body) {\n\t\t\tvalues.push(fetched.request_body);\n\t\t}\n\n\t\tattrs.push(`data-hash=\"${hash(...values)}\"`);\n\t}\n\n\t// Compute the time the response should be cached, taking into account max-age and age.\n\t// Do not cache at all if a `Vary: *` header is present, as this indicates that the\n\t// cache is likely to get busted.\n\tif (!prerendering && fetched.method === 'GET' && cache_control && !varyAny) {\n\t\tconst match = /s-maxage=(\\d+)/g.exec(cache_control) ?? /max-age=(\\d+)/g.exec(cache_control);\n\t\tif (match) {\n\t\t\tconst ttl = +match[1] - +(age ?? '0');\n\t\t\tattrs.push(`data-ttl=\"${ttl}\"`);\n\t\t}\n\t}\n\n\treturn `<script ${attrs.join(' ')}>${safe_payload}</script>`;\n}\n","export const s = JSON.stringify;\n","const encoder = new TextEncoder();\n\n/**\n * SHA-256 hashing function adapted from https://bitwiseshiftleft.github.io/sjcl\n * modified and redistributed under BSD license\n * @param {string} data\n */\nexport function sha256(data) {\n\tif (!key[0]) precompute();\n\n\tconst out = init.slice(0);\n\tconst array = encode(data);\n\n\tfor (let i = 0; i < array.length; i += 16) {\n\t\tconst w = array.subarray(i, i + 16);\n\n\t\tlet tmp;\n\t\tlet a;\n\t\tlet b;\n\n\t\tlet out0 = out[0];\n\t\tlet out1 = out[1];\n\t\tlet out2 = out[2];\n\t\tlet out3 = out[3];\n\t\tlet out4 = out[4];\n\t\tlet out5 = out[5];\n\t\tlet out6 = out[6];\n\t\tlet out7 = out[7];\n\n\t\t/* Rationale for placement of |0 :\n\t\t * If a value can overflow is original 32 bits by a factor of more than a few\n\t\t * million (2^23 ish), there is a possibility that it might overflow the\n\t\t * 53-bit mantissa and lose precision.\n\t\t *\n\t\t * To avoid this, we clamp back to 32 bits by |'ing with 0 on any value that\n\t\t * propagates around the loop, and on the hash state out[]. I don't believe\n\t\t * that the clamps on out4 and on out0 are strictly necessary, but it's close\n\t\t * (for out4 anyway), and better safe than sorry.\n\t\t *\n\t\t * The clamps on out[] are necessary for the output to be correct even in the\n\t\t * common case and for short inputs.\n\t\t */\n\n\t\tfor (let i = 0; i < 64; i++) {\n\t\t\t// load up the input word for this round\n\n\t\t\tif (i < 16) {\n\t\t\t\ttmp = w[i];\n\t\t\t} else {\n\t\t\t\ta = w[(i + 1) & 15];\n\n\t\t\t\tb = w[(i + 14) & 15];\n\n\t\t\t\ttmp = w[i & 15] =\n\t\t\t\t\t(((a >>> 7) ^ (a >>> 18) ^ (a >>> 3) ^ (a << 25) ^ (a << 14)) +\n\t\t\t\t\t\t((b >>> 17) ^ (b >>> 19) ^ (b >>> 10) ^ (b << 15) ^ (b << 13)) +\n\t\t\t\t\t\tw[i & 15] +\n\t\t\t\t\t\tw[(i + 9) & 15]) |\n\t\t\t\t\t0;\n\t\t\t}\n\n\t\t\ttmp =\n\t\t\t\ttmp +\n\t\t\t\tout7 +\n\t\t\t\t((out4 >>> 6) ^ (out4 >>> 11) ^ (out4 >>> 25) ^ (out4 << 26) ^ (out4 << 21) ^ (out4 << 7)) +\n\t\t\t\t(out6 ^ (out4 & (out5 ^ out6))) +\n\t\t\t\tkey[i]; // | 0;\n\n\t\t\t// shift register\n\t\t\tout7 = out6;\n\t\t\tout6 = out5;\n\t\t\tout5 = out4;\n\n\t\t\tout4 = (out3 + tmp) | 0;\n\n\t\t\tout3 = out2;\n\t\t\tout2 = out1;\n\t\t\tout1 = out0;\n\n\t\t\tout0 =\n\t\t\t\t(tmp +\n\t\t\t\t\t((out1 & out2) ^ (out3 & (out1 ^ out2))) +\n\t\t\t\t\t((out1 >>> 2) ^\n\t\t\t\t\t\t(out1 >>> 13) ^\n\t\t\t\t\t\t(out1 >>> 22) ^\n\t\t\t\t\t\t(out1 << 30) ^\n\t\t\t\t\t\t(out1 << 19) ^\n\t\t\t\t\t\t(out1 << 10))) |\n\t\t\t\t0;\n\t\t}\n\n\t\tout[0] = (out[0] + out0) | 0;\n\t\tout[1] = (out[1] + out1) | 0;\n\t\tout[2] = (out[2] + out2) | 0;\n\t\tout[3] = (out[3] + out3) | 0;\n\t\tout[4] = (out[4] + out4) | 0;\n\t\tout[5] = (out[5] + out5) | 0;\n\t\tout[6] = (out[6] + out6) | 0;\n\t\tout[7] = (out[7] + out7) | 0;\n\t}\n\n\tconst bytes = new Uint8Array(out.buffer);\n\treverse_endianness(bytes);\n\n\treturn base64(bytes);\n}\n\n/** The SHA-256 initialization vector */\nconst init = new Uint32Array(8);\n\n/** The SHA-256 hash key */\nconst key = new Uint32Array(64);\n\n/** Function to precompute init and key. */\nfunction precompute() {\n\t/** @param {number} x */\n\tfunction frac(x) {\n\t\treturn (x - Math.floor(x)) * 0x100000000;\n\t}\n\n\tlet prime = 2;\n\n\tfor (let i = 0; i < 64; prime++) {\n\t\tlet is_prime = true;\n\n\t\tfor (let factor = 2; factor * factor <= prime; factor++) {\n\t\t\tif (prime % factor === 0) {\n\t\t\t\tis_prime = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (is_prime) {\n\t\t\tif (i < 8) {\n\t\t\t\tinit[i] = frac(prime ** (1 / 2));\n\t\t\t}\n\n\t\t\tkey[i] = frac(prime ** (1 / 3));\n\n\t\t\ti++;\n\t\t}\n\t}\n}\n\n/** @param {Uint8Array} bytes */\nfunction reverse_endianness(bytes) {\n\tfor (let i = 0; i < bytes.length; i += 4) {\n\t\tconst a = bytes[i + 0];\n\t\tconst b = bytes[i + 1];\n\t\tconst c = bytes[i + 2];\n\t\tconst d = bytes[i + 3];\n\n\t\tbytes[i + 0] = d;\n\t\tbytes[i + 1] = c;\n\t\tbytes[i + 2] = b;\n\t\tbytes[i + 3] = a;\n\t}\n}\n\n/** @param {string} str */\nfunction encode(str) {\n\tconst encoded = encoder.encode(str);\n\tconst length = encoded.length * 8;\n\n\t// result should be a multiple of 512 bits in length,\n\t// with room for a 1 (after the data) and two 32-bit\n\t// words containing the original input bit length\n\tconst size = 512 * Math.ceil((length + 65) / 512);\n\tconst bytes = new Uint8Array(size / 8);\n\tbytes.set(encoded);\n\n\t// append a 1\n\tbytes[encoded.length] = 0b10000000;\n\n\treverse_endianness(bytes);\n\n\t// add the input bit length\n\tconst words = new Uint32Array(bytes.buffer);\n\twords[words.length - 2] = Math.floor(length / 0x100000000); // this will always be zero for us\n\twords[words.length - 1] = length;\n\n\treturn words;\n}\n\n/*\n\tBased on https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727\n\n\tMIT License\n\tCopyright (c) 2020 Egor Nepomnyaschih\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\tThe above copyright notice and this permission notice shall be included in all\n\tcopies or substantial portions of the Software.\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\tSOFTWARE.\n*/\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/** @param {Uint8Array} bytes */\nexport function base64(bytes) {\n\tconst l = bytes.length;\n\n\tlet result = '';\n\tlet i;\n\n\tfor (i = 2; i < l; i += 3) {\n\t\tresult += chars[bytes[i - 2] >> 2];\n\t\tresult += chars[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n\t\tresult += chars[((bytes[i - 1] & 0x0f) << 2) | (bytes[i] >> 6)];\n\t\tresult += chars[bytes[i] & 0x3f];\n\t}\n\n\tif (i === l + 1) {\n\t\t// 1 octet yet to write\n\t\tresult += chars[bytes[i - 2] >> 2];\n\t\tresult += chars[(bytes[i - 2] & 0x03) << 4];\n\t\tresult += '==';\n\t}\n\n\tif (i === l) {\n\t\t// 2 octets yet to write\n\t\tresult += chars[bytes[i - 2] >> 2];\n\t\tresult += chars[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n\t\tresult += chars[(bytes[i - 1] & 0x0f) << 2];\n\t\tresult += '=';\n\t}\n\n\treturn result;\n}\n","import { escape_html_attr } from '../../../utils/escape.js';\nimport { base64, sha256 } from './crypto.js';\n\nconst array = new Uint8Array(16);\n\nfunction generate_nonce() {\n\tcrypto.getRandomValues(array);\n\treturn base64(array);\n}\n\nconst quoted = new Set([\n\t'self',\n\t'unsafe-eval',\n\t'unsafe-hashes',\n\t'unsafe-inline',\n\t'none',\n\t'strict-dynamic',\n\t'report-sample',\n\t'wasm-unsafe-eval',\n\t'script'\n]);\n\nconst crypto_pattern = /^(nonce|sha\\d\\d\\d)-/;\n\n// CSP and CSP Report Only are extremely similar with a few caveats\n// the easiest/DRYest way to express this is with some private encapsulation\nclass BaseProvider {\n\t/** @type {boolean} */\n\t#use_hashes;\n\n\t/** @type {boolean} */\n\t#script_needs_csp;\n\n\t/** @type {boolean} */\n\t#style_needs_csp;\n\n\t/** @type {import('types').CspDirectives} */\n\t#directives;\n\n\t/** @type {import('types').Csp.Source[]} */\n\t#script_src;\n\n\t/** @type {import('types').Csp.Source[]} */\n\t#style_src;\n\n\t/** @type {string} */\n\t#nonce;\n\n\t/**\n\t * @param {boolean} use_hashes\n\t * @param {import('types').CspDirectives} directives\n\t * @param {string} nonce\n\t */\n\tconstructor(use_hashes, directives, nonce) {\n\t\tthis.#use_hashes = use_hashes;\n\t\tthis.#directives = __SVELTEKIT_DEV__ ? { ...directives } : directives; // clone in dev so we can safely mutate\n\n\t\tconst d = this.#directives;\n\n\t\tif (__SVELTEKIT_DEV__) {\n\t\t\t// remove strict-dynamic in dev...\n\t\t\t// TODO reinstate this if we can figure out how to make strict-dynamic work\n\t\t\t// if (d['default-src']) {\n\t\t\t// \td['default-src'] = d['default-src'].filter((name) => name !== 'strict-dynamic');\n\t\t\t// \tif (d['default-src'].length === 0) delete d['default-src'];\n\t\t\t// }\n\n\t\t\t// if (d['script-src']) {\n\t\t\t// \td['script-src'] = d['script-src'].filter((name) => name !== 'strict-dynamic');\n\t\t\t// \tif (d['script-src'].length === 0) delete d['script-src'];\n\t\t\t// }\n\n\t\t\tconst effective_style_src = d['style-src'] || d['default-src'];\n\n\t\t\t// ...and add unsafe-inline so we can inject <style> elements\n\t\t\tif (effective_style_src && !effective_style_src.includes('unsafe-inline')) {\n\t\t\t\td['style-src'] = [...effective_style_src, 'unsafe-inline'];\n\t\t\t}\n\t\t}\n\n\t\tthis.#script_src = [];\n\t\tthis.#style_src = [];\n\n\t\tconst effective_script_src = d['script-src'] || d['default-src'];\n\t\tconst effective_style_src = d['style-src'] || d['default-src'];\n\n\t\tthis.#script_needs_csp =\n\t\t\t!!effective_script_src &&\n\t\t\teffective_script_src.filter((value) => value !== 'unsafe-inline').length > 0;\n\n\t\tthis.#style_needs_csp =\n\t\t\t!__SVELTEKIT_DEV__ &&\n\t\t\t!!effective_style_src &&\n\t\t\teffective_style_src.filter((value) => value !== 'unsafe-inline').length > 0;\n\n\t\tthis.script_needs_nonce = this.#script_needs_csp && !this.#use_hashes;\n\t\tthis.style_needs_nonce = this.#style_needs_csp && !this.#use_hashes;\n\t\tthis.#nonce = nonce;\n\t}\n\n\t/** @param {string} content */\n\tadd_script(content) {\n\t\tif (this.#script_needs_csp) {\n\t\t\tif (this.#use_hashes) {\n\t\t\t\tthis.#script_src.push(`sha256-${sha256(content)}`);\n\t\t\t} else if (this.#script_src.length === 0) {\n\t\t\t\tthis.#script_src.push(`nonce-${this.#nonce}`);\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @param {string} content */\n\tadd_style(content) {\n\t\tif (this.#style_needs_csp) {\n\t\t\tif (this.#use_hashes) {\n\t\t\t\tthis.#style_src.push(`sha256-${sha256(content)}`);\n\t\t\t} else if (this.#style_src.length === 0) {\n\t\t\t\tthis.#style_src.push(`nonce-${this.#nonce}`);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {boolean} [is_meta]\n\t */\n\tget_header(is_meta = false) {\n\t\tconst header = [];\n\n\t\t// due to browser inconsistencies, we can't append sources to default-src\n\t\t// (specifically, Firefox appears to not ignore nonce-{nonce} directives\n\t\t// on default-src), so we ensure that script-src and style-src exist\n\n\t\tconst directives = { ...this.#directives };\n\n\t\tif (this.#style_src.length > 0) {\n\t\t\tdirectives['style-src'] = [\n\t\t\t\t...(directives['style-src'] || directives['default-src'] || []),\n\t\t\t\t...this.#style_src\n\t\t\t];\n\t\t}\n\n\t\tif (this.#script_src.length > 0) {\n\t\t\tdirectives['script-src'] = [\n\t\t\t\t...(directives['script-src'] || directives['default-src'] || []),\n\t\t\t\t...this.#script_src\n\t\t\t];\n\t\t}\n\n\t\tfor (const key in directives) {\n\t\t\tif (is_meta && (key === 'frame-ancestors' || key === 'report-uri' || key === 'sandbox')) {\n\t\t\t\t// these values cannot be used with a <meta> tag\n\t\t\t\t// TODO warn?\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// @ts-expect-error gimme a break typescript, `key` is obviously a member of internal_directives\n\t\t\tconst value = /** @type {string[] | true} */ (directives[key]);\n\n\t\t\tif (!value) continue;\n\n\t\t\tconst directive = [key];\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalue.forEach((value) => {\n\t\t\t\t\tif (quoted.has(value) || crypto_pattern.test(value)) {\n\t\t\t\t\t\tdirective.push(`'${value}'`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdirective.push(value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\theader.push(directive.join(' '));\n\t\t}\n\n\t\treturn header.join('; ');\n\t}\n}\n\nclass CspProvider extends BaseProvider {\n\tget_meta() {\n\t\tconst content = this.get_header(true);\n\n\t\tif (!content) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn `<meta http-equiv=\"content-security-policy\" content=${escape_html_attr(content)}>`;\n\t}\n}\n\nclass CspReportOnlyProvider extends BaseProvider {\n\t/**\n\t * @param {boolean} use_hashes\n\t * @param {import('types').CspDirectives} directives\n\t * @param {string} nonce\n\t */\n\tconstructor(use_hashes, directives, nonce) {\n\t\tsuper(use_hashes, directives, nonce);\n\n\t\tif (Object.values(directives).filter((v) => !!v).length > 0) {\n\t\t\t// If we're generating content-security-policy-report-only,\n\t\t\t// if there are any directives, we need a report-uri or report-to (or both)\n\t\t\t// else it's just an expensive noop.\n\t\t\tconst has_report_to = directives['report-to']?.length ?? 0 > 0;\n\t\t\tconst has_report_uri = directives['report-uri']?.length ?? 0 > 0;\n\t\t\tif (!has_report_to && !has_report_uri) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'`content-security-policy-report-only` must be specified with either the `report-to` or `report-uri` directives, or both'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class Csp {\n\t/** @readonly */\n\tnonce = generate_nonce();\n\n\t/** @type {CspProvider} */\n\tcsp_provider;\n\n\t/** @type {CspReportOnlyProvider} */\n\treport_only_provider;\n\n\t/**\n\t * @param {import('./types').CspConfig} config\n\t * @param {import('./types').CspOpts} opts\n\t */\n\tconstructor({ mode, directives, reportOnly }, { prerender }) {\n\t\tconst use_hashes = mode === 'hash' || (mode === 'auto' && prerender);\n\t\tthis.csp_provider = new CspProvider(use_hashes, directives, this.nonce);\n\t\tthis.report_only_provider = new CspReportOnlyProvider(use_hashes, reportOnly, this.nonce);\n\t}\n\n\tget script_needs_nonce() {\n\t\treturn this.csp_provider.script_needs_nonce || this.report_only_provider.script_needs_nonce;\n\t}\n\n\tget style_needs_nonce() {\n\t\treturn this.csp_provider.style_needs_nonce || this.report_only_provider.style_needs_nonce;\n\t}\n\n\t/** @param {string} content */\n\tadd_script(content) {\n\t\tthis.csp_provider.add_script(content);\n\t\tthis.report_only_provider.add_script(content);\n\t}\n\n\t/** @param {string} content */\n\tadd_style(content) {\n\t\tthis.csp_provider.add_style(content);\n\t\tthis.report_only_provider.add_style(content);\n\t}\n}\n","/**\n * @returns {import('types').Deferred & { promise: Promise<any> }}}\n */\nfunction defer() {\n\tlet fulfil;\n\tlet reject;\n\n\tconst promise = new Promise((f, r) => {\n\t\tfulfil = f;\n\t\treject = r;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, fulfil, reject };\n}\n\n/**\n * Create an async iterator and a function to push values into it\n * @returns {{\n *   iterator: AsyncIterable<any>;\n *   push: (value: any) => void;\n *   done: () => void;\n * }}\n */\nexport function create_async_iterator() {\n\tconst deferred = [defer()];\n\n\treturn {\n\t\titerator: {\n\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\treturn {\n\t\t\t\t\tnext: async () => {\n\t\t\t\t\t\tconst next = await deferred[0].promise;\n\t\t\t\t\t\tif (!next.done) deferred.shift();\n\t\t\t\t\t\treturn next;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tpush: (value) => {\n\t\t\tdeferred[deferred.length - 1].fulfil({\n\t\t\t\tvalue,\n\t\t\t\tdone: false\n\t\t\t});\n\t\t\tdeferred.push(defer());\n\t\t},\n\t\tdone: () => {\n\t\t\tdeferred[deferred.length - 1].fulfil({ done: true });\n\t\t}\n\t};\n}\n","import * as devalue from 'devalue';\nimport { readable, writable } from 'svelte/store';\nimport { DEV } from 'esm-env';\nimport * as paths from '__sveltekit/paths';\nimport { hash } from '../../hash.js';\nimport { serialize_data } from './serialize_data.js';\nimport { s } from '../../../utils/misc.js';\nimport { Csp } from './csp.js';\nimport { uneval_action_response } from './actions.js';\nimport { clarify_devalue_error, stringify_uses, handle_error_and_jsonify } from '../utils.js';\nimport { public_env } from '../../shared-server.js';\nimport { text } from '../../../exports/index.js';\nimport { create_async_iterator } from '../../../utils/streaming.js';\nimport { SVELTE_KIT_ASSETS } from '../../../constants.js';\n\n// TODO rename this function/module\n\nconst updated = {\n\t...readable(false),\n\tcheck: () => false\n};\n\nconst encoder = new TextEncoder();\n\n/**\n * Creates the HTML response.\n * @param {{\n *   branch: Array<import('./types').Loaded>;\n *   fetched: Array<import('./types').Fetched>;\n *   options: import('types').SSROptions;\n *   manifest: import('@sveltejs/kit').SSRManifest;\n *   state: import('types').SSRState;\n *   page_config: { ssr: boolean; csr: boolean };\n *   status: number;\n *   error: App.Error | null;\n *   event: import('@sveltejs/kit').RequestEvent;\n *   resolve_opts: import('types').RequiredResolveOptions;\n *   action_result?: import('@sveltejs/kit').ActionResult;\n * }} opts\n */\nexport async function render_response({\n\tbranch,\n\tfetched,\n\toptions,\n\tmanifest,\n\tstate,\n\tpage_config,\n\tstatus,\n\terror = null,\n\tevent,\n\tresolve_opts,\n\taction_result\n}) {\n\tif (state.prerendering) {\n\t\tif (options.csp.mode === 'nonce') {\n\t\t\tthrow new Error('Cannot use prerendering if config.kit.csp.mode === \"nonce\"');\n\t\t}\n\n\t\tif (options.app_template_contains_nonce) {\n\t\t\tthrow new Error('Cannot use prerendering if page template contains %sveltekit.nonce%');\n\t\t}\n\t}\n\n\tconst { client } = manifest._;\n\n\tconst modulepreloads = new Set(client.imports);\n\tconst stylesheets = new Set(client.stylesheets);\n\tconst fonts = new Set(client.fonts);\n\n\t/** @type {Set<string>} */\n\tconst link_header_preloads = new Set();\n\n\t/** @type {Map<string, string>} */\n\t// TODO if we add a client entry point one day, we will need to include inline_styles with the entry, otherwise stylesheets will be linked even if they are below inlineStyleThreshold\n\tconst inline_styles = new Map();\n\n\tlet rendered;\n\n\tconst form_value =\n\t\taction_result?.type === 'success' || action_result?.type === 'failure'\n\t\t\t? action_result.data ?? null\n\t\t\t: null;\n\n\t/** @type {string} */\n\tlet base = paths.base;\n\n\t/** @type {string} */\n\tlet assets = paths.assets;\n\n\t/**\n\t * An expression that will evaluate in the client to determine the resolved base path.\n\t * We use a relative path when possible to support IPFS, the internet archive, etc.\n\t */\n\tlet base_expression = s(paths.base);\n\n\t// if appropriate, use relative paths for greater portability\n\tif (paths.relative !== false && !state.prerendering?.fallback) {\n\t\tconst segments = event.url.pathname.slice(paths.base.length).split('/').slice(2);\n\n\t\tbase = segments.map(() => '..').join('/') || '.';\n\n\t\t// resolve e.g. '../..' against current location, then remove trailing slash\n\t\tbase_expression = `new URL(${s(base)}, location).pathname.slice(0, -1)`;\n\n\t\tif (!paths.assets || (paths.assets[0] === '/' && paths.assets !== SVELTE_KIT_ASSETS)) {\n\t\t\tassets = base;\n\t\t}\n\t}\n\n\tif (page_config.ssr) {\n\t\tif (__SVELTEKIT_DEV__ && !branch.at(-1)?.node.component) {\n\t\t\t// Can only be the leaf, layouts have a fallback component generated\n\t\t\tthrow new Error(`Missing +page.svelte component for route ${event.route.id}`);\n\t\t}\n\n\t\t/** @type {Record<string, any>} */\n\t\tconst props = {\n\t\t\tstores: {\n\t\t\t\tpage: writable(null),\n\t\t\t\tnavigating: writable(null),\n\t\t\t\tupdated\n\t\t\t},\n\t\t\tconstructors: await Promise.all(branch.map(({ node }) => node.component())),\n\t\t\tform: form_value\n\t\t};\n\n\t\tlet data = {};\n\n\t\t// props_n (instead of props[n]) makes it easy to avoid\n\t\t// unnecessary updates for layout components\n\t\tfor (let i = 0; i < branch.length; i += 1) {\n\t\t\tdata = { ...data, ...branch[i].data };\n\t\t\tprops[`data_${i}`] = data;\n\t\t}\n\n\t\tprops.page = {\n\t\t\terror,\n\t\t\tparams: /** @type {Record<string, any>} */ (event.params),\n\t\t\troute: event.route,\n\t\t\tstatus,\n\t\t\turl: event.url,\n\t\t\tdata,\n\t\t\tform: form_value\n\t\t};\n\n\t\t// use relative paths during rendering, so that the resulting HTML is as\n\t\t// portable as possible, but reset afterwards\n\t\tif (paths.relative) paths.override({ base, assets });\n\n\t\tif (__SVELTEKIT_DEV__) {\n\t\t\tconst fetch = globalThis.fetch;\n\t\t\tlet warned = false;\n\t\t\tglobalThis.fetch = (info, init) => {\n\t\t\t\tif (typeof info === 'string' && !/^\\w+:\\/\\//.test(info)) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Cannot call \\`fetch\\` eagerly during server side rendering with relative URL (${info}) — put your \\`fetch\\` calls inside \\`onMount\\` or a \\`load\\` function instead`\n\t\t\t\t\t);\n\t\t\t\t} else if (!warned) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'Avoid calling `fetch` eagerly during server side rendering — put your `fetch` calls inside `onMount` or a `load` function instead'\n\t\t\t\t\t);\n\t\t\t\t\twarned = true;\n\t\t\t\t}\n\n\t\t\t\treturn fetch(info, init);\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\trendered = options.root.render(props);\n\t\t\t} finally {\n\t\t\t\tglobalThis.fetch = fetch;\n\t\t\t\tpaths.reset();\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\trendered = options.root.render(props);\n\t\t\t} finally {\n\t\t\t\tpaths.reset();\n\t\t\t}\n\t\t}\n\n\t\tfor (const { node } of branch) {\n\t\t\tfor (const url of node.imports) modulepreloads.add(url);\n\t\t\tfor (const url of node.stylesheets) stylesheets.add(url);\n\t\t\tfor (const url of node.fonts) fonts.add(url);\n\n\t\t\tif (node.inline_styles) {\n\t\t\t\tObject.entries(await node.inline_styles()).forEach(([k, v]) => inline_styles.set(k, v));\n\t\t\t}\n\t\t}\n\t} else {\n\t\trendered = { head: '', html: '', css: { code: '', map: null } };\n\t}\n\n\tlet head = '';\n\tlet body = rendered.html;\n\n\tconst csp = new Csp(options.csp, {\n\t\tprerender: !!state.prerendering\n\t});\n\n\t/** @param {string} path */\n\tconst prefixed = (path) => {\n\t\tif (path.startsWith('/')) {\n\t\t\t// Vite makes the start script available through the base path and without it.\n\t\t\t// We load it via the base path in order to support remote IDE environments which proxy\n\t\t\t// all URLs under the base path during development.\n\t\t\treturn paths.base + path;\n\t\t}\n\t\treturn `${assets}/${path}`;\n\t};\n\n\tif (inline_styles.size > 0) {\n\t\tconst content = Array.from(inline_styles.values()).join('\\n');\n\n\t\tconst attributes = __SVELTEKIT_DEV__ ? [' data-sveltekit'] : [];\n\t\tif (csp.style_needs_nonce) attributes.push(` nonce=\"${csp.nonce}\"`);\n\n\t\tcsp.add_style(content);\n\n\t\thead += `\\n\\t<style${attributes.join('')}>${content}</style>`;\n\t}\n\n\tfor (const dep of stylesheets) {\n\t\tconst path = prefixed(dep);\n\n\t\tconst attributes = ['rel=\"stylesheet\"'];\n\n\t\tif (inline_styles.has(dep)) {\n\t\t\t// don't load stylesheets that are already inlined\n\t\t\t// include them in disabled state so that Vite can detect them and doesn't try to add them\n\t\t\tattributes.push('disabled', 'media=\"(max-width: 0)\"');\n\t\t} else {\n\t\t\tif (resolve_opts.preload({ type: 'css', path })) {\n\t\t\t\tconst preload_atts = ['rel=\"preload\"', 'as=\"style\"'];\n\t\t\t\tlink_header_preloads.add(`<${encodeURI(path)}>; ${preload_atts.join(';')}; nopush`);\n\t\t\t}\n\t\t}\n\n\t\thead += `\\n\\t\\t<link href=\"${path}\" ${attributes.join(' ')}>`;\n\t}\n\n\tfor (const dep of fonts) {\n\t\tconst path = prefixed(dep);\n\n\t\tif (resolve_opts.preload({ type: 'font', path })) {\n\t\t\tconst ext = dep.slice(dep.lastIndexOf('.') + 1);\n\t\t\tconst attributes = [\n\t\t\t\t'rel=\"preload\"',\n\t\t\t\t'as=\"font\"',\n\t\t\t\t`type=\"font/${ext}\"`,\n\t\t\t\t`href=\"${path}\"`,\n\t\t\t\t'crossorigin'\n\t\t\t];\n\n\t\t\thead += `\\n\\t\\t<link ${attributes.join(' ')}>`;\n\t\t}\n\t}\n\n\tconst global = __SVELTEKIT_DEV__ ? '__sveltekit_dev' : `__sveltekit_${options.version_hash}`;\n\n\tconst { data, chunks } = get_data(\n\t\tevent,\n\t\toptions,\n\t\tbranch.map((b) => b.server_data),\n\t\tglobal\n\t);\n\n\tif (page_config.ssr && page_config.csr) {\n\t\tbody += `\\n\\t\\t\\t${fetched\n\t\t\t.map((item) =>\n\t\t\t\tserialize_data(item, resolve_opts.filterSerializedResponseHeaders, !!state.prerendering)\n\t\t\t)\n\t\t\t.join('\\n\\t\\t\\t')}`;\n\t}\n\n\tif (page_config.csr) {\n\t\tconst included_modulepreloads = Array.from(modulepreloads, (dep) => prefixed(dep)).filter(\n\t\t\t(path) => resolve_opts.preload({ type: 'js', path })\n\t\t);\n\n\t\tfor (const path of included_modulepreloads) {\n\t\t\t// see the kit.output.preloadStrategy option for details on why we have multiple options here\n\t\t\tlink_header_preloads.add(`<${encodeURI(path)}>; rel=\"modulepreload\"; nopush`);\n\t\t\tif (options.preload_strategy !== 'modulepreload') {\n\t\t\t\thead += `\\n\\t\\t<link rel=\"preload\" as=\"script\" crossorigin=\"anonymous\" href=\"${path}\">`;\n\t\t\t} else if (state.prerendering) {\n\t\t\t\thead += `\\n\\t\\t<link rel=\"modulepreload\" href=\"${path}\">`;\n\t\t\t}\n\t\t}\n\n\t\tconst blocks = [];\n\n\t\tconst properties = [\n\t\t\tpaths.assets && `assets: ${s(paths.assets)}`,\n\t\t\t`base: ${base_expression}`,\n\t\t\t`env: ${s(public_env)}`\n\t\t].filter(Boolean);\n\n\t\tif (chunks) {\n\t\t\tblocks.push('const deferred = new Map();');\n\n\t\t\tproperties.push(`defer: (id) => new Promise((fulfil, reject) => {\n\t\t\t\t\t\t\tdeferred.set(id, { fulfil, reject });\n\t\t\t\t\t\t})`);\n\n\t\t\tproperties.push(`resolve: ({ id, data, error }) => {\n\t\t\t\t\t\t\tconst { fulfil, reject } = deferred.get(id);\n\t\t\t\t\t\t\tdeferred.delete(id);\n\n\t\t\t\t\t\t\tif (error) reject(error);\n\t\t\t\t\t\t\telse fulfil(data);\n\t\t\t\t\t\t}`);\n\t\t}\n\n\t\tblocks.push(`${global} = {\n\t\t\t\t\t\t${properties.join(',\\n\\t\\t\\t\\t\\t\\t')}\n\t\t\t\t\t};`);\n\n\t\tconst args = ['app', 'element'];\n\n\t\tblocks.push('const element = document.currentScript.parentElement;');\n\n\t\tif (page_config.ssr) {\n\t\t\tconst serialized = { form: 'null', error: 'null' };\n\n\t\t\tblocks.push(`const data = ${data};`);\n\n\t\t\tif (form_value) {\n\t\t\t\tserialized.form = uneval_action_response(\n\t\t\t\t\tform_value,\n\t\t\t\t\t/** @type {string} */ (event.route.id)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\tserialized.error = devalue.uneval(error);\n\t\t\t}\n\n\t\t\tconst hydrate = [\n\t\t\t\t`node_ids: [${branch.map(({ node }) => node.index).join(', ')}]`,\n\t\t\t\t'data',\n\t\t\t\t`form: ${serialized.form}`,\n\t\t\t\t`error: ${serialized.error}`\n\t\t\t];\n\n\t\t\tif (status !== 200) {\n\t\t\t\thydrate.push(`status: ${status}`);\n\t\t\t}\n\n\t\t\tif (options.embedded) {\n\t\t\t\thydrate.push(`params: ${devalue.uneval(event.params)}`, `route: ${s(event.route)}`);\n\t\t\t}\n\n\t\t\targs.push(`{\\n\\t\\t\\t\\t\\t\\t\\t${hydrate.join(',\\n\\t\\t\\t\\t\\t\\t\\t')}\\n\\t\\t\\t\\t\\t\\t}`);\n\t\t}\n\n\t\tblocks.push(`Promise.all([\n\t\t\t\t\t\timport(${s(prefixed(client.start))}),\n\t\t\t\t\t\timport(${s(prefixed(client.app))})\n\t\t\t\t\t]).then(([kit, app]) => {\n\t\t\t\t\t\tkit.start(${args.join(', ')});\n\t\t\t\t\t});`);\n\n\t\tif (options.service_worker) {\n\t\t\tconst opts = __SVELTEKIT_DEV__ ? \", { type: 'module' }\" : '';\n\n\t\t\t// we use an anonymous function instead of an arrow function to support\n\t\t\t// older browsers (https://github.com/sveltejs/kit/pull/5417)\n\t\t\tblocks.push(`if ('serviceWorker' in navigator) {\n\t\t\t\t\t\taddEventListener('load', function () {\n\t\t\t\t\t\t\tnavigator.serviceWorker.register('${prefixed('service-worker.js')}'${opts});\n\t\t\t\t\t\t});\n\t\t\t\t\t}`);\n\t\t}\n\n\t\tconst init_app = `\n\t\t\t\t{\n\t\t\t\t\t${blocks.join('\\n\\n\\t\\t\\t\\t\\t')}\n\t\t\t\t}\n\t\t\t`;\n\t\tcsp.add_script(init_app);\n\n\t\tbody += `\\n\\t\\t\\t<script${\n\t\t\tcsp.script_needs_nonce ? ` nonce=\"${csp.nonce}\"` : ''\n\t\t}>${init_app}</script>\\n\\t\\t`;\n\t}\n\n\tconst headers = new Headers({\n\t\t'x-sveltekit-page': 'true',\n\t\t'content-type': 'text/html'\n\t});\n\n\tif (state.prerendering) {\n\t\t// TODO read headers set with setHeaders and convert into http-equiv where possible\n\t\tconst http_equiv = [];\n\n\t\tconst csp_headers = csp.csp_provider.get_meta();\n\t\tif (csp_headers) {\n\t\t\thttp_equiv.push(csp_headers);\n\t\t}\n\n\t\tif (state.prerendering.cache) {\n\t\t\thttp_equiv.push(`<meta http-equiv=\"cache-control\" content=\"${state.prerendering.cache}\">`);\n\t\t}\n\n\t\tif (http_equiv.length > 0) {\n\t\t\thead = http_equiv.join('\\n') + head;\n\t\t}\n\t} else {\n\t\tconst csp_header = csp.csp_provider.get_header();\n\t\tif (csp_header) {\n\t\t\theaders.set('content-security-policy', csp_header);\n\t\t}\n\t\tconst report_only_header = csp.report_only_provider.get_header();\n\t\tif (report_only_header) {\n\t\t\theaders.set('content-security-policy-report-only', report_only_header);\n\t\t}\n\n\t\tif (link_header_preloads.size) {\n\t\t\theaders.set('link', Array.from(link_header_preloads).join(', '));\n\t\t}\n\t}\n\n\t// add the content after the script/css links so the link elements are parsed first\n\thead += rendered.head;\n\n\tconst html = options.templates.app({\n\t\thead,\n\t\tbody,\n\t\tassets,\n\t\tnonce: /** @type {string} */ (csp.nonce),\n\t\tenv: public_env\n\t});\n\n\t// TODO flush chunks as early as we can\n\tconst transformed =\n\t\t(await resolve_opts.transformPageChunk({\n\t\t\thtml,\n\t\t\tdone: true\n\t\t})) || '';\n\n\tif (!chunks) {\n\t\theaders.set('etag', `\"${hash(transformed)}\"`);\n\t}\n\n\tif (DEV) {\n\t\tif (page_config.csr) {\n\t\t\tif (transformed.split('<!--').length < html.split('<!--').length) {\n\t\t\t\t// the \\u001B stuff is ANSI codes, so that we don't need to add a library to the runtime\n\t\t\t\t// https://svelte.dev/repl/1b3f49696f0c44c881c34587f2537aa2\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"\\u001B[1m\\u001B[31mRemoving comments in transformPageChunk can break Svelte's hydration\\u001B[39m\\u001B[22m\"\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (chunks) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'\\u001B[1m\\u001B[31mReturning promises from server `load` functions will only work if `csr === true`\\u001B[39m\\u001B[22m'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn !chunks\n\t\t? text(transformed, {\n\t\t\t\tstatus,\n\t\t\t\theaders\n\t\t  })\n\t\t: new Response(\n\t\t\t\tnew ReadableStream({\n\t\t\t\t\tasync start(controller) {\n\t\t\t\t\t\tcontroller.enqueue(encoder.encode(transformed + '\\n'));\n\t\t\t\t\t\tfor await (const chunk of chunks) {\n\t\t\t\t\t\t\tcontroller.enqueue(encoder.encode(chunk));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t},\n\n\t\t\t\t\ttype: 'bytes'\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'content-type': 'text/html'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t  );\n}\n\n/**\n * If the serialized data contains promises, `chunks` will be an\n * async iterable containing their resolutions\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSROptions} options\n * @param {Array<import('types').ServerDataNode | null>} nodes\n * @param {string} global\n * @returns {{ data: string, chunks: AsyncIterable<string> | null }}\n */\nfunction get_data(event, options, nodes, global) {\n\tlet promise_id = 1;\n\tlet count = 0;\n\n\tconst { iterator, push, done } = create_async_iterator();\n\n\t/** @param {any} thing */\n\tfunction replacer(thing) {\n\t\tif (typeof thing?.then === 'function') {\n\t\t\tconst id = promise_id++;\n\t\t\tcount += 1;\n\n\t\t\tthing\n\t\t\t\t.then(/** @param {any} data */ (data) => ({ data }))\n\t\t\t\t.catch(\n\t\t\t\t\t/** @param {any} error */ async (error) => ({\n\t\t\t\t\t\terror: await handle_error_and_jsonify(event, options, error)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.then(\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {{data: any; error: any}} result\n\t\t\t\t\t */\n\t\t\t\t\tasync ({ data, error }) => {\n\t\t\t\t\t\tcount -= 1;\n\n\t\t\t\t\t\tlet str;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstr = devalue.uneval({ id, data, error }, replacer);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\terror = await handle_error_and_jsonify(\n\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\tnew Error(`Failed to serialize promise while rendering ${event.route.id}`)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdata = undefined;\n\t\t\t\t\t\t\tstr = devalue.uneval({ id, data, error }, replacer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpush(`<script>${global}.resolve(${str})</script>\\n`);\n\t\t\t\t\t\tif (count === 0) done();\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\treturn `${global}.defer(${id})`;\n\t\t}\n\t}\n\n\ttry {\n\t\tconst strings = nodes.map((node) => {\n\t\t\tif (!node) return 'null';\n\n\t\t\treturn `{\"type\":\"data\",\"data\":${devalue.uneval(node.data, replacer)},${stringify_uses(node)}${\n\t\t\t\tnode.slash ? `,\"slash\":${JSON.stringify(node.slash)}` : ''\n\t\t\t}}`;\n\t\t});\n\n\t\treturn {\n\t\t\tdata: `[${strings.join(',')}]`,\n\t\t\tchunks: count > 0 ? iterator : null\n\t\t};\n\t} catch (e) {\n\t\tthrow new Error(clarify_devalue_error(event, /** @type {any} */ (e)));\n\t}\n}\n","/**\n * @template {'prerender' | 'ssr' | 'csr' | 'trailingSlash' | 'entries'} Option\n * @template {(import('types').SSRNode['universal'] | import('types').SSRNode['server'])[Option]} Value\n *\n * @param {Array<import('types').SSRNode | undefined>} nodes\n * @param {Option} option\n *\n * @returns {Value | undefined}\n */\nexport function get_option(nodes, option) {\n\treturn nodes.reduce((value, node) => {\n\t\treturn /** @type {Value} TypeScript's too dumb to understand this */ (\n\t\t\tnode?.universal?.[option] ?? node?.server?.[option] ?? value\n\t\t);\n\t}, /** @type {Value | undefined} */ (undefined));\n}\n","import { render_response } from './render.js';\nimport { load_data, load_server_data } from './load_data.js';\nimport { handle_error_and_jsonify, static_error_page, redirect_response } from '../utils.js';\nimport { get_option } from '../../../utils/options.js';\nimport { HttpError, Redirect } from '../../control.js';\n\n/**\n * @typedef {import('./types.js').Loaded} Loaded\n */\n\n/**\n * @param {{\n *   event: import('@sveltejs/kit').RequestEvent;\n *   options: import('types').SSROptions;\n *   manifest: import('@sveltejs/kit').SSRManifest;\n *   state: import('types').SSRState;\n *   status: number;\n *   error: unknown;\n *   resolve_opts: import('types').RequiredResolveOptions;\n * }} opts\n */\nexport async function respond_with_error({\n\tevent,\n\toptions,\n\tmanifest,\n\tstate,\n\tstatus,\n\terror,\n\tresolve_opts\n}) {\n\t/** @type {import('./types').Fetched[]} */\n\tconst fetched = [];\n\n\ttry {\n\t\tconst branch = [];\n\t\tconst default_layout = await manifest._.nodes[0](); // 0 is always the root layout\n\t\tconst ssr = get_option([default_layout], 'ssr') ?? true;\n\t\tconst csr = get_option([default_layout], 'csr') ?? true;\n\n\t\tif (ssr) {\n\t\t\tstate.error = true;\n\n\t\t\tconst server_data_promise = load_server_data({\n\t\t\t\tevent,\n\t\t\t\tstate,\n\t\t\t\tnode: default_layout,\n\t\t\t\tparent: async () => ({}),\n\t\t\t\ttrack_server_fetches: options.track_server_fetches\n\t\t\t});\n\n\t\t\tconst server_data = await server_data_promise;\n\n\t\t\tconst data = await load_data({\n\t\t\t\tevent,\n\t\t\t\tfetched,\n\t\t\t\tnode: default_layout,\n\t\t\t\tparent: async () => ({}),\n\t\t\t\tresolve_opts,\n\t\t\t\tserver_data_promise,\n\t\t\t\tstate,\n\t\t\t\tcsr\n\t\t\t});\n\n\t\t\tbranch.push(\n\t\t\t\t{\n\t\t\t\t\tnode: default_layout,\n\t\t\t\t\tserver_data,\n\t\t\t\t\tdata\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnode: await manifest._.nodes[1](), // 1 is always the root error\n\t\t\t\t\tdata: null,\n\t\t\t\t\tserver_data: null\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn await render_response({\n\t\t\toptions,\n\t\t\tmanifest,\n\t\t\tstate,\n\t\t\tpage_config: {\n\t\t\t\tssr,\n\t\t\t\tcsr: get_option([default_layout], 'csr') ?? true\n\t\t\t},\n\t\t\tstatus,\n\t\t\terror: await handle_error_and_jsonify(event, options, error),\n\t\t\tbranch,\n\t\t\tfetched,\n\t\t\tevent,\n\t\t\tresolve_opts\n\t\t});\n\t} catch (e) {\n\t\t// Edge case: If route is a 404 and the user redirects to somewhere from the root layout,\n\t\t// we end up here.\n\t\tif (e instanceof Redirect) {\n\t\t\treturn redirect_response(e.status, e.location);\n\t\t}\n\n\t\treturn static_error_page(\n\t\t\toptions,\n\t\t\te instanceof HttpError ? e.status : 500,\n\t\t\t(await handle_error_and_jsonify(event, options, e)).message\n\t\t);\n\t}\n}\n","/**\n * @template T\n * @param {() => T} fn\n */\nexport function once(fn) {\n\tlet done = false;\n\n\t/** @type T */\n\tlet result;\n\n\treturn () => {\n\t\tif (done) return result;\n\t\tdone = true;\n\t\treturn (result = fn());\n\t};\n}\n","import { HttpError, Redirect } from '../../control.js';\nimport { normalize_error } from '../../../utils/error.js';\nimport { once } from '../../../utils/functions.js';\nimport { load_server_data } from '../page/load_data.js';\nimport { clarify_devalue_error, handle_error_and_jsonify, stringify_uses } from '../utils.js';\nimport { normalize_path } from '../../../utils/url.js';\nimport { text } from '../../../exports/index.js';\nimport * as devalue from 'devalue';\nimport { create_async_iterator } from '../../../utils/streaming.js';\n\nconst encoder = new TextEncoder();\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSRRoute} route\n * @param {import('types').SSROptions} options\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @param {import('types').SSRState} state\n * @param {boolean[] | undefined} invalidated_data_nodes\n * @param {import('types').TrailingSlash} trailing_slash\n * @returns {Promise<Response>}\n */\nexport async function render_data(\n\tevent,\n\troute,\n\toptions,\n\tmanifest,\n\tstate,\n\tinvalidated_data_nodes,\n\ttrailing_slash\n) {\n\tif (!route.page) {\n\t\t// requesting /__data.json should fail for a +server.js\n\t\treturn new Response(undefined, {\n\t\t\tstatus: 404\n\t\t});\n\t}\n\n\ttry {\n\t\tconst node_ids = [...route.page.layouts, route.page.leaf];\n\t\tconst invalidated = invalidated_data_nodes ?? node_ids.map(() => true);\n\n\t\tlet aborted = false;\n\n\t\tconst url = new URL(event.url);\n\t\turl.pathname = normalize_path(url.pathname, trailing_slash);\n\n\t\tconst new_event = { ...event, url };\n\n\t\tconst functions = node_ids.map((n, i) => {\n\t\t\treturn once(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tif (aborted) {\n\t\t\t\t\t\treturn /** @type {import('types').ServerDataSkippedNode} */ ({\n\t\t\t\t\t\t\ttype: 'skip'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// == because it could be undefined (in dev) or null (in build, because of JSON.stringify)\n\t\t\t\t\tconst node = n == undefined ? n : await manifest._.nodes[n]();\n\t\t\t\t\t// load this. for the child, return as is. for the final result, stream things\n\t\t\t\t\treturn load_server_data({\n\t\t\t\t\t\tevent: new_event,\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tparent: async () => {\n\t\t\t\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\t\t\t\tconst data = {};\n\t\t\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\t\t\tconst parent = /** @type {import('types').ServerDataNode | null} */ (\n\t\t\t\t\t\t\t\t\tawait functions[j]()\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\tObject.assign(data, parent.data);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrack_server_fetches: options.track_server_fetches\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\taborted = true;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst promises = functions.map(async (fn, i) => {\n\t\t\tif (!invalidated[i]) {\n\t\t\t\treturn /** @type {import('types').ServerDataSkippedNode} */ ({\n\t\t\t\t\ttype: 'skip'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn fn();\n\t\t});\n\n\t\tlet length = promises.length;\n\t\tconst nodes = await Promise.all(\n\t\t\tpromises.map((p, i) =>\n\t\t\t\tp.catch(async (error) => {\n\t\t\t\t\tif (error instanceof Redirect) {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Math.min because array isn't guaranteed to resolve in order\n\t\t\t\t\tlength = Math.min(length, i + 1);\n\n\t\t\t\t\treturn /** @type {import('types').ServerErrorNode} */ ({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\terror: await handle_error_and_jsonify(event, options, error),\n\t\t\t\t\t\tstatus: error instanceof HttpError ? error.status : undefined\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\n\t\tconst { data, chunks } = get_data_json(event, options, nodes);\n\n\t\tif (!chunks) {\n\t\t\t// use a normal JSON response where possible, so we get `content-length`\n\t\t\t// and can use browser JSON devtools for easier inspecting\n\t\t\treturn json_response(data);\n\t\t}\n\n\t\treturn new Response(\n\t\t\tnew ReadableStream({\n\t\t\t\tasync start(controller) {\n\t\t\t\t\tcontroller.enqueue(encoder.encode(data));\n\t\t\t\t\tfor await (const chunk of chunks) {\n\t\t\t\t\t\tcontroller.enqueue(encoder.encode(chunk));\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.close();\n\t\t\t\t},\n\n\t\t\t\ttype: 'bytes'\n\t\t\t}),\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t// we use a proprietary content type to prevent buffering.\n\t\t\t\t\t// the `text` prefix makes it inspectable\n\t\t\t\t\t'content-type': 'text/sveltekit-data',\n\t\t\t\t\t'cache-control': 'private, no-store'\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t} catch (e) {\n\t\tconst error = normalize_error(e);\n\n\t\tif (error instanceof Redirect) {\n\t\t\treturn redirect_json_response(error);\n\t\t} else {\n\t\t\treturn json_response(await handle_error_and_jsonify(event, options, error), 500);\n\t\t}\n\t}\n}\n\n/**\n * @param {Record<string, any> | string} json\n * @param {number} [status]\n */\nfunction json_response(json, status = 200) {\n\treturn text(typeof json === 'string' ? json : JSON.stringify(json), {\n\t\tstatus,\n\t\theaders: {\n\t\t\t'content-type': 'application/json',\n\t\t\t'cache-control': 'private, no-store'\n\t\t}\n\t});\n}\n\n/**\n * @param {Redirect} redirect\n */\nexport function redirect_json_response(redirect) {\n\treturn json_response({\n\t\ttype: 'redirect',\n\t\tlocation: redirect.location\n\t});\n}\n\n/**\n * If the serialized data contains promises, `chunks` will be an\n * async iterable containing their resolutions\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSROptions} options\n * @param {Array<import('types').ServerDataSkippedNode | import('types').ServerDataNode | import('types').ServerErrorNode | null | undefined>} nodes\n *  @returns {{ data: string, chunks: AsyncIterable<string> | null }}\n */\nexport function get_data_json(event, options, nodes) {\n\tlet promise_id = 1;\n\tlet count = 0;\n\n\tconst { iterator, push, done } = create_async_iterator();\n\n\tconst reducers = {\n\t\t/** @param {any} thing */\n\t\tPromise: (thing) => {\n\t\t\tif (typeof thing?.then === 'function') {\n\t\t\t\tconst id = promise_id++;\n\t\t\t\tcount += 1;\n\n\t\t\t\t/** @type {'data' | 'error'} */\n\t\t\t\tlet key = 'data';\n\n\t\t\t\tthing\n\t\t\t\t\t.catch(\n\t\t\t\t\t\t/** @param {any} e */ async (e) => {\n\t\t\t\t\t\t\tkey = 'error';\n\t\t\t\t\t\t\treturn handle_error_and_jsonify(event, options, /** @type {any} */ (e));\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t/** @param {any} value */\n\t\t\t\t\t\tasync (value) => {\n\t\t\t\t\t\t\tlet str;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tstr = devalue.stringify(value, reducers);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tconst error = await handle_error_and_jsonify(\n\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t\tnew Error(`Failed to serialize promise while rendering ${event.route.id}`)\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tkey = 'error';\n\t\t\t\t\t\t\t\tstr = devalue.stringify(error, reducers);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcount -= 1;\n\n\t\t\t\t\t\t\tpush(`{\"type\":\"chunk\",\"id\":${id},\"${key}\":${str}}\\n`);\n\t\t\t\t\t\t\tif (count === 0) done();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\t};\n\n\ttry {\n\t\tconst strings = nodes.map((node) => {\n\t\t\tif (!node) return 'null';\n\n\t\t\tif (node.type === 'error' || node.type === 'skip') {\n\t\t\t\treturn JSON.stringify(node);\n\t\t\t}\n\n\t\t\treturn `{\"type\":\"data\",\"data\":${devalue.stringify(node.data, reducers)},${stringify_uses(\n\t\t\t\tnode\n\t\t\t)}${node.slash ? `,\"slash\":${JSON.stringify(node.slash)}` : ''}}`;\n\t\t});\n\n\t\treturn {\n\t\t\tdata: `{\"type\":\"data\",\"nodes\":[${strings.join(',')}]}\\n`,\n\t\t\tchunks: count > 0 ? iterator : null\n\t\t};\n\t} catch (e) {\n\t\tthrow new Error(clarify_devalue_error(event, /** @type {any} */ (e)));\n\t}\n}\n","import { text } from '../../../exports/index.js';\nimport { compact } from '../../../utils/array.js';\nimport { normalize_error } from '../../../utils/error.js';\nimport { add_data_suffix } from '../../../utils/url.js';\nimport { HttpError, Redirect } from '../../control.js';\nimport { redirect_response, static_error_page, handle_error_and_jsonify } from '../utils.js';\nimport {\n\thandle_action_json_request,\n\thandle_action_request,\n\tis_action_json_request,\n\tis_action_request\n} from './actions.js';\nimport { load_data, load_server_data } from './load_data.js';\nimport { render_response } from './render.js';\nimport { respond_with_error } from './respond_with_error.js';\nimport { get_option } from '../../../utils/options.js';\nimport { get_data_json } from '../data/index.js';\n\n/**\n * The maximum request depth permitted before assuming we're stuck in an infinite loop\n */\nconst MAX_DEPTH = 10;\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').PageNodeIndexes} page\n * @param {import('types').SSROptions} options\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @param {import('types').SSRState} state\n * @param {import('types').RequiredResolveOptions} resolve_opts\n * @returns {Promise<Response>}\n */\nexport async function render_page(event, page, options, manifest, state, resolve_opts) {\n\tif (state.depth > MAX_DEPTH) {\n\t\t// infinite request cycle detected\n\t\treturn text(`Not found: ${event.url.pathname}`, {\n\t\t\tstatus: 404 // TODO in some cases this should be 500. not sure how to differentiate\n\t\t});\n\t}\n\n\tif (is_action_json_request(event)) {\n\t\tconst node = await manifest._.nodes[page.leaf]();\n\t\treturn handle_action_json_request(event, options, node?.server);\n\t}\n\n\ttry {\n\t\tconst nodes = await Promise.all([\n\t\t\t// we use == here rather than === because [undefined] serializes as \"[null]\"\n\t\t\t...page.layouts.map((n) => (n == undefined ? n : manifest._.nodes[n]())),\n\t\t\tmanifest._.nodes[page.leaf]()\n\t\t]);\n\n\t\tconst leaf_node = /** @type {import('types').SSRNode} */ (nodes.at(-1));\n\n\t\tlet status = 200;\n\n\t\t/** @type {import('@sveltejs/kit').ActionResult | undefined} */\n\t\tlet action_result = undefined;\n\n\t\tif (is_action_request(event)) {\n\t\t\t// for action requests, first call handler in +page.server.js\n\t\t\t// (this also determines status code)\n\t\t\taction_result = await handle_action_request(event, leaf_node.server);\n\t\t\tif (action_result?.type === 'redirect') {\n\t\t\t\treturn redirect_response(action_result.status, action_result.location);\n\t\t\t}\n\t\t\tif (action_result?.type === 'error') {\n\t\t\t\tconst error = action_result.error;\n\t\t\t\tstatus = error instanceof HttpError ? error.status : 500;\n\t\t\t}\n\t\t\tif (action_result?.type === 'failure') {\n\t\t\t\tstatus = action_result.status;\n\t\t\t}\n\t\t}\n\n\t\tconst should_prerender_data = nodes.some((node) => node?.server);\n\t\tconst data_pathname = add_data_suffix(event.url.pathname);\n\n\t\t// it's crucial that we do this before returning the non-SSR response, otherwise\n\t\t// SvelteKit will erroneously believe that the path has been prerendered,\n\t\t// causing functions to be omitted from the manifesst generated later\n\t\tconst should_prerender = get_option(nodes, 'prerender') ?? false;\n\t\tif (should_prerender) {\n\t\t\tconst mod = leaf_node.server;\n\t\t\tif (mod?.actions) {\n\t\t\t\tthrow new Error('Cannot prerender pages with actions');\n\t\t\t}\n\t\t} else if (state.prerendering) {\n\t\t\t// if the page isn't marked as prerenderable, then bail out at this point\n\t\t\treturn new Response(undefined, {\n\t\t\t\tstatus: 204\n\t\t\t});\n\t\t}\n\n\t\t// if we fetch any endpoints while loading data for this page, they should\n\t\t// inherit the prerender option of the page\n\t\tstate.prerender_default = should_prerender;\n\n\t\t/** @type {import('./types').Fetched[]} */\n\t\tconst fetched = [];\n\n\t\tif (get_option(nodes, 'ssr') === false) {\n\t\t\treturn await render_response({\n\t\t\t\tbranch: [],\n\t\t\t\tfetched,\n\t\t\t\tpage_config: {\n\t\t\t\t\tssr: false,\n\t\t\t\t\tcsr: get_option(nodes, 'csr') ?? true\n\t\t\t\t},\n\t\t\t\tstatus,\n\t\t\t\terror: null,\n\t\t\t\tevent,\n\t\t\t\toptions,\n\t\t\t\tmanifest,\n\t\t\t\tstate,\n\t\t\t\tresolve_opts\n\t\t\t});\n\t\t}\n\n\t\t/** @type {Array<import('./types.js').Loaded | null>} */\n\t\tconst branch = [];\n\n\t\t/** @type {Error | null} */\n\t\tlet load_error = null;\n\n\t\t/** @type {Array<Promise<import('types').ServerDataNode | null>>} */\n\t\tconst server_promises = nodes.map((node, i) => {\n\t\t\tif (load_error) {\n\t\t\t\t// if an error happens immediately, don't bother with the rest of the nodes\n\t\t\t\tthrow load_error;\n\t\t\t}\n\n\t\t\treturn Promise.resolve().then(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tif (node === leaf_node && action_result?.type === 'error') {\n\t\t\t\t\t\t// we wait until here to throw the error so that we can use\n\t\t\t\t\t\t// any nested +error.svelte components that were defined\n\t\t\t\t\t\tthrow action_result.error;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn await load_server_data({\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tparent: async () => {\n\t\t\t\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\t\t\t\tconst data = {};\n\t\t\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\t\t\tconst parent = await server_promises[j];\n\t\t\t\t\t\t\t\tif (parent) Object.assign(data, await parent.data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrack_server_fetches: options.track_server_fetches\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tload_error = /** @type {Error} */ (e);\n\t\t\t\t\tthrow load_error;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst csr = get_option(nodes, 'csr') ?? true;\n\n\t\t/** @type {Array<Promise<Record<string, any> | null>>} */\n\t\tconst load_promises = nodes.map((node, i) => {\n\t\t\tif (load_error) throw load_error;\n\t\t\treturn Promise.resolve().then(async () => {\n\t\t\t\ttry {\n\t\t\t\t\treturn await load_data({\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\tfetched,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tparent: async () => {\n\t\t\t\t\t\t\tconst data = {};\n\t\t\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\t\t\tObject.assign(data, await load_promises[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve_opts,\n\t\t\t\t\t\tserver_data_promise: server_promises[i],\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tcsr\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tload_error = /** @type {Error} */ (e);\n\t\t\t\t\tthrow load_error;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// if we don't do this, rejections will be unhandled\n\t\tfor (const p of server_promises) p.catch(() => {});\n\t\tfor (const p of load_promises) p.catch(() => {});\n\n\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\tconst node = nodes[i];\n\n\t\t\tif (node) {\n\t\t\t\ttry {\n\t\t\t\t\tconst server_data = await server_promises[i];\n\t\t\t\t\tconst data = await load_promises[i];\n\n\t\t\t\t\tbranch.push({ node, server_data, data });\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconst err = normalize_error(e);\n\n\t\t\t\t\tif (err instanceof Redirect) {\n\t\t\t\t\t\tif (state.prerendering && should_prerender_data) {\n\t\t\t\t\t\t\tconst body = JSON.stringify({\n\t\t\t\t\t\t\t\ttype: 'redirect',\n\t\t\t\t\t\t\t\tlocation: err.location\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tstate.prerendering.dependencies.set(data_pathname, {\n\t\t\t\t\t\t\t\tresponse: text(body),\n\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn redirect_response(err.status, err.location);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst status = err instanceof HttpError ? err.status : 500;\n\t\t\t\t\tconst error = await handle_error_and_jsonify(event, options, err);\n\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (page.errors[i]) {\n\t\t\t\t\t\t\tconst index = /** @type {number} */ (page.errors[i]);\n\t\t\t\t\t\t\tconst node = await manifest._.nodes[index]();\n\n\t\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\t\twhile (!branch[j]) j -= 1;\n\n\t\t\t\t\t\t\treturn await render_response({\n\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\tmanifest,\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\tresolve_opts,\n\t\t\t\t\t\t\t\tpage_config: { ssr: true, csr: true },\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tbranch: compact(branch.slice(0, j + 1)).concat({\n\t\t\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\t\t\t\tserver_data: null\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tfetched\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if we're still here, it means the error happened in the root layout,\n\t\t\t\t\t// which means we have to fall back to error.html\n\t\t\t\t\treturn static_error_page(options, status, error.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// push an empty slot so we can rewind past gaps to the\n\t\t\t\t// layout that corresponds with an +error.svelte page\n\t\t\t\tbranch.push(null);\n\t\t\t}\n\t\t}\n\n\t\tif (state.prerendering && should_prerender_data) {\n\t\t\t// ndjson format\n\t\t\tlet { data, chunks } = get_data_json(\n\t\t\t\tevent,\n\t\t\t\toptions,\n\t\t\t\tbranch.map((node) => node?.server_data)\n\t\t\t);\n\n\t\t\tif (chunks) {\n\t\t\t\tfor await (const chunk of chunks) {\n\t\t\t\t\tdata += chunk;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.prerendering.dependencies.set(data_pathname, {\n\t\t\t\tresponse: text(data),\n\t\t\t\tbody: data\n\t\t\t});\n\t\t}\n\n\t\treturn await render_response({\n\t\t\tevent,\n\t\t\toptions,\n\t\t\tmanifest,\n\t\t\tstate,\n\t\t\tresolve_opts,\n\t\t\tpage_config: {\n\t\t\t\tcsr: get_option(nodes, 'csr') ?? true,\n\t\t\t\tssr: true\n\t\t\t},\n\t\t\tstatus,\n\t\t\terror: null,\n\t\t\tbranch: compact(branch),\n\t\t\taction_result,\n\t\t\tfetched\n\t\t});\n\t} catch (e) {\n\t\t// if we end up here, it means the data loaded successfully\n\t\t// but the page failed to render, or that a prerendering error occurred\n\t\treturn await respond_with_error({\n\t\t\tevent,\n\t\t\toptions,\n\t\t\tmanifest,\n\t\t\tstate,\n\t\t\tstatus: 500,\n\t\t\terror: e,\n\t\t\tresolve_opts\n\t\t});\n\t}\n}\n","import { parse, serialize } from 'cookie';\nimport { normalize_path } from '../../utils/url.js';\n\n/**\n * Tracks all cookies set during dev mode so we can emit warnings\n * when we detect that there's likely cookie misusage due to wrong paths\n *\n * @type {Record<string, Set<string>>} */\nconst cookie_paths = {};\n\n/**\n * Cookies that are larger than this size (including the name and other\n * attributes) are discarded by browsers\n */\nconst MAX_COOKIE_SIZE = 4129;\n\n/**\n * @param {Request} request\n * @param {URL} url\n * @param {import('types').TrailingSlash} trailing_slash\n */\nexport function get_cookies(request, url, trailing_slash) {\n\tconst header = request.headers.get('cookie') ?? '';\n\tconst initial_cookies = parse(header, { decode: (value) => value });\n\n\tconst normalized_url = normalize_path(url.pathname, trailing_slash);\n\t// Emulate browser-behavior: if the cookie is set at '/foo/bar', its path is '/foo'\n\tconst default_path = normalized_url.split('/').slice(0, -1).join('/') || '/';\n\n\t/** @type {Record<string, import('./page/types').Cookie>} */\n\tconst new_cookies = {};\n\n\t/** @type {import('cookie').CookieSerializeOptions} */\n\tconst defaults = {\n\t\thttpOnly: true,\n\t\tsameSite: 'lax',\n\t\tsecure: url.hostname === 'localhost' && url.protocol === 'http:' ? false : true\n\t};\n\n\t/** @type {import('@sveltejs/kit').Cookies} */\n\tconst cookies = {\n\t\t// The JSDoc param annotations appearing below for get, set and delete\n\t\t// are necessary to expose the `cookie` library types to\n\t\t// typescript users. `@type {import('@sveltejs/kit').Cookies}` above is not\n\t\t// sufficient to do so.\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {import('cookie').CookieParseOptions} opts\n\t\t */\n\t\tget(name, opts) {\n\t\t\tconst c = new_cookies[name];\n\t\t\tif (\n\t\t\t\tc &&\n\t\t\t\tdomain_matches(url.hostname, c.options.domain) &&\n\t\t\t\tpath_matches(url.pathname, c.options.path)\n\t\t\t) {\n\t\t\t\treturn c.value;\n\t\t\t}\n\n\t\t\tconst decoder = opts?.decode || decodeURIComponent;\n\t\t\tconst req_cookies = parse(header, { decode: decoder });\n\t\t\tconst cookie = req_cookies[name]; // the decoded string or undefined\n\n\t\t\t// in development, if the cookie was set during this session with `cookies.set`,\n\t\t\t// but at a different path, warn the user. (ignore cookies from request headers,\n\t\t\t// since we don't know which path they were set at)\n\t\t\tif (__SVELTEKIT_DEV__ && !cookie) {\n\t\t\t\tconst paths = Array.from(cookie_paths[name] ?? []).filter((path) => {\n\t\t\t\t\t// we only care about paths that are _more_ specific than the current path\n\t\t\t\t\treturn path_matches(path, url.pathname) && path !== url.pathname;\n\t\t\t\t});\n\n\t\t\t\tif (paths.length > 0) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t// prettier-ignore\n\t\t\t\t\t\t`'${name}' cookie does not exist for ${url.pathname}, but was previously set at ${conjoin([...paths])}. Did you mean to set its 'path' to '/' instead?`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn cookie;\n\t\t},\n\n\t\t/**\n\t\t * @param {import('cookie').CookieParseOptions} opts\n\t\t */\n\t\tgetAll(opts) {\n\t\t\tconst decoder = opts?.decode || decodeURIComponent;\n\t\t\tconst cookies = parse(header, { decode: decoder });\n\n\t\t\tfor (const c of Object.values(new_cookies)) {\n\t\t\t\tif (\n\t\t\t\t\tdomain_matches(url.hostname, c.options.domain) &&\n\t\t\t\t\tpath_matches(url.pathname, c.options.path)\n\t\t\t\t) {\n\t\t\t\t\tcookies[c.name] = c.value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Object.entries(cookies).map(([name, value]) => ({ name, value }));\n\t\t},\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {string} value\n\t\t * @param {import('cookie').CookieSerializeOptions} opts\n\t\t */\n\t\tset(name, value, opts = {}) {\n\t\t\tset_internal(name, value, { ...defaults, ...opts });\n\t\t},\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {import('cookie').CookieSerializeOptions} opts\n\t\t */\n\t\tdelete(name, opts = {}) {\n\t\t\tcookies.set(name, '', {\n\t\t\t\t...opts,\n\t\t\t\tmaxAge: 0\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {string} value\n\t\t * @param {import('cookie').CookieSerializeOptions} opts\n\t\t */\n\t\tserialize(name, value, opts) {\n\t\t\treturn serialize(name, value, {\n\t\t\t\t...defaults,\n\t\t\t\t...opts\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * @param {URL} destination\n\t * @param {string | null} header\n\t */\n\tfunction get_cookie_header(destination, header) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst combined_cookies = {\n\t\t\t// cookies sent by the user agent have lowest precedence\n\t\t\t...initial_cookies\n\t\t};\n\n\t\t// cookies previous set during this event with cookies.set have higher precedence\n\t\tfor (const key in new_cookies) {\n\t\t\tconst cookie = new_cookies[key];\n\t\t\tif (!domain_matches(destination.hostname, cookie.options.domain)) continue;\n\t\t\tif (!path_matches(destination.pathname, cookie.options.path)) continue;\n\n\t\t\tconst encoder = cookie.options.encode || encodeURIComponent;\n\t\t\tcombined_cookies[cookie.name] = encoder(cookie.value);\n\t\t}\n\n\t\t// explicit header has highest precedence\n\t\tif (header) {\n\t\t\tconst parsed = parse(header, { decode: (value) => value });\n\t\t\tfor (const name in parsed) {\n\t\t\t\tcombined_cookies[name] = parsed[name];\n\t\t\t}\n\t\t}\n\n\t\treturn Object.entries(combined_cookies)\n\t\t\t.map(([name, value]) => `${name}=${value}`)\n\t\t\t.join('; ');\n\t}\n\n\t/**\n\t * @param {string} name\n\t * @param {string} value\n\t * @param {import('cookie').CookieSerializeOptions} opts\n\t */\n\tfunction set_internal(name, value, opts) {\n\t\tconst path = opts.path ?? default_path;\n\n\t\tnew_cookies[name] = {\n\t\t\tname,\n\t\t\tvalue,\n\t\t\toptions: {\n\t\t\t\t...opts,\n\t\t\t\tpath\n\t\t\t}\n\t\t};\n\n\t\tif (__SVELTEKIT_DEV__) {\n\t\t\tconst serialized = serialize(name, value, new_cookies[name].options);\n\t\t\tif (new TextEncoder().encode(serialized).byteLength > MAX_COOKIE_SIZE) {\n\t\t\t\tthrow new Error(`Cookie \"${name}\" is too large, and will be discarded by the browser`);\n\t\t\t}\n\n\t\t\tcookie_paths[name] ??= new Set();\n\n\t\t\tif (!value) {\n\t\t\t\tcookie_paths[name].delete(path);\n\t\t\t} else {\n\t\t\t\tcookie_paths[name].add(path);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { cookies, new_cookies, get_cookie_header, set_internal };\n}\n\n/**\n * @param {string} hostname\n * @param {string} [constraint]\n */\nexport function domain_matches(hostname, constraint) {\n\tif (!constraint) return true;\n\n\tconst normalized = constraint[0] === '.' ? constraint.slice(1) : constraint;\n\n\tif (hostname === normalized) return true;\n\treturn hostname.endsWith('.' + normalized);\n}\n\n/**\n * @param {string} path\n * @param {string} [constraint]\n */\nexport function path_matches(path, constraint) {\n\tif (!constraint) return true;\n\n\tconst normalized = constraint.endsWith('/') ? constraint.slice(0, -1) : constraint;\n\n\tif (path === normalized) return true;\n\treturn path.startsWith(normalized + '/');\n}\n\n/**\n * @param {Headers} headers\n * @param {import('./page/types').Cookie[]} cookies\n */\nexport function add_cookies_to_headers(headers, cookies) {\n\tfor (const new_cookie of cookies) {\n\t\tconst { name, value, options } = new_cookie;\n\t\theaders.append('set-cookie', serialize(name, value, options));\n\t}\n}\n\n/**\n * @param {string[]} array\n */\nfunction conjoin(array) {\n\tif (array.length <= 2) return array.join(' and ');\n\treturn `${array.slice(0, -1).join(', ')} and ${array.at(-1)}`;\n}\n","import * as set_cookie_parser from 'set-cookie-parser';\nimport { respond } from './respond.js';\nimport * as paths from '__sveltekit/paths';\n\n/**\n * @param {{\n *   event: import('@sveltejs/kit').RequestEvent;\n *   options: import('types').SSROptions;\n *   manifest: import('@sveltejs/kit').SSRManifest;\n *   state: import('types').SSRState;\n *   get_cookie_header: (url: URL, header: string | null) => string;\n *   set_internal: (name: string, value: string, opts: import('cookie').CookieSerializeOptions) => void;\n * }} opts\n * @returns {typeof fetch}\n */\nexport function create_fetch({ event, options, manifest, state, get_cookie_header, set_internal }) {\n\treturn async (info, init) => {\n\t\tconst original_request = normalize_fetch_input(info, init, event.url);\n\n\t\t// some runtimes (e.g. Cloudflare) error if you access `request.mode`,\n\t\t// annoyingly, so we need to read the value from the `init` object instead\n\t\tlet mode = (info instanceof Request ? info.mode : init?.mode) ?? 'cors';\n\t\tlet credentials =\n\t\t\t(info instanceof Request ? info.credentials : init?.credentials) ?? 'same-origin';\n\n\t\treturn await options.hooks.handleFetch({\n\t\t\tevent,\n\t\t\trequest: original_request,\n\t\t\tfetch: async (info, init) => {\n\t\t\t\tconst request = normalize_fetch_input(info, init, event.url);\n\n\t\t\t\tconst url = new URL(request.url);\n\n\t\t\t\tif (!request.headers.has('origin')) {\n\t\t\t\t\trequest.headers.set('origin', event.url.origin);\n\t\t\t\t}\n\n\t\t\t\tif (info !== original_request) {\n\t\t\t\t\tmode = (info instanceof Request ? info.mode : init?.mode) ?? 'cors';\n\t\t\t\t\tcredentials =\n\t\t\t\t\t\t(info instanceof Request ? info.credentials : init?.credentials) ?? 'same-origin';\n\t\t\t\t}\n\n\t\t\t\t// Remove Origin, according to https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin#description\n\t\t\t\tif (\n\t\t\t\t\t(request.method === 'GET' || request.method === 'HEAD') &&\n\t\t\t\t\t((mode === 'no-cors' && url.origin !== event.url.origin) ||\n\t\t\t\t\t\turl.origin === event.url.origin)\n\t\t\t\t) {\n\t\t\t\t\trequest.headers.delete('origin');\n\t\t\t\t}\n\n\t\t\t\tif (url.origin !== event.url.origin) {\n\t\t\t\t\t// allow cookie passthrough for \"same-origin\"\n\t\t\t\t\t// if SvelteKit is serving my.domain.com:\n\t\t\t\t\t// -        domain.com WILL NOT receive cookies\n\t\t\t\t\t// -     my.domain.com WILL receive cookies\n\t\t\t\t\t// -    api.domain.dom WILL NOT receive cookies\n\t\t\t\t\t// - sub.my.domain.com WILL receive cookies\n\t\t\t\t\t// ports do not affect the resolution\n\t\t\t\t\t// leading dot prevents mydomain.com matching domain.com\n\t\t\t\t\tif (`.${url.hostname}`.endsWith(`.${event.url.hostname}`) && credentials !== 'omit') {\n\t\t\t\t\t\tconst cookie = get_cookie_header(url, request.headers.get('cookie'));\n\t\t\t\t\t\tif (cookie) request.headers.set('cookie', cookie);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fetch(request);\n\t\t\t\t}\n\n\t\t\t\t// handle fetch requests for static assets. e.g. prebaked data, etc.\n\t\t\t\t// we need to support everything the browser's fetch supports\n\t\t\t\tconst prefix = paths.assets || paths.base;\n\t\t\t\tconst decoded = decodeURIComponent(url.pathname);\n\t\t\t\tconst filename = (\n\t\t\t\t\tdecoded.startsWith(prefix) ? decoded.slice(prefix.length) : decoded\n\t\t\t\t).slice(1);\n\t\t\t\tconst filename_html = `${filename}/index.html`; // path may also match path/index.html\n\n\t\t\t\tconst is_asset = manifest.assets.has(filename);\n\t\t\t\tconst is_asset_html = manifest.assets.has(filename_html);\n\n\t\t\t\tif (is_asset || is_asset_html) {\n\t\t\t\t\tconst file = is_asset ? filename : filename_html;\n\n\t\t\t\t\tif (state.read) {\n\t\t\t\t\t\tconst type = is_asset\n\t\t\t\t\t\t\t? manifest.mimeTypes[filename.slice(filename.lastIndexOf('.'))]\n\t\t\t\t\t\t\t: 'text/html';\n\n\t\t\t\t\t\treturn new Response(state.read(file), {\n\t\t\t\t\t\t\theaders: type ? { 'content-type': type } : {}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn await fetch(request);\n\t\t\t\t}\n\n\t\t\t\tif (credentials !== 'omit') {\n\t\t\t\t\tconst cookie = get_cookie_header(url, request.headers.get('cookie'));\n\t\t\t\t\tif (cookie) {\n\t\t\t\t\t\trequest.headers.set('cookie', cookie);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst authorization = event.request.headers.get('authorization');\n\t\t\t\t\tif (authorization && !request.headers.has('authorization')) {\n\t\t\t\t\t\trequest.headers.set('authorization', authorization);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!request.headers.has('accept')) {\n\t\t\t\t\trequest.headers.set('accept', '*/*');\n\t\t\t\t}\n\n\t\t\t\tif (!request.headers.has('accept-language')) {\n\t\t\t\t\trequest.headers.set(\n\t\t\t\t\t\t'accept-language',\n\t\t\t\t\t\t/** @type {string} */ (event.request.headers.get('accept-language'))\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t/** @type {Response} */\n\t\t\t\tconst response = await respond(request, options, manifest, {\n\t\t\t\t\t...state,\n\t\t\t\t\tdepth: state.depth + 1\n\t\t\t\t});\n\n\t\t\t\tconst set_cookie = response.headers.get('set-cookie');\n\t\t\t\tif (set_cookie) {\n\t\t\t\t\tfor (const str of set_cookie_parser.splitCookiesString(set_cookie)) {\n\t\t\t\t\t\tconst { name, value, ...options } = set_cookie_parser.parseString(str);\n\n\t\t\t\t\t\t// options.sameSite is string, something more specific is required - type cast is safe\n\t\t\t\t\t\tset_internal(\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t/** @type {import('cookie').CookieSerializeOptions} */ (options)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response;\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {RequestInfo | URL} info\n * @param {RequestInit | undefined} init\n * @param {URL} url\n */\nfunction normalize_fetch_input(info, init, url) {\n\tif (info instanceof Request) {\n\t\treturn info;\n\t}\n\n\treturn new Request(typeof info === 'string' ? new URL(info, url) : info, init);\n}\n","/**\n * @param {Set<string>} expected\n */\nfunction validator(expected) {\n\t/**\n\t * @param {any} module\n\t * @param {string} [file]\n\t */\n\tfunction validate(module, file) {\n\t\tif (!module) return;\n\n\t\tfor (const key in module) {\n\t\t\tif (key[0] === '_' || expected.has(key)) continue; // key is valid in this module\n\n\t\t\tconst values = [...expected.values()];\n\n\t\t\tconst hint =\n\t\t\t\thint_for_supported_files(key, file?.slice(file.lastIndexOf('.'))) ??\n\t\t\t\t`valid exports are ${values.join(', ')}, or anything with a '_' prefix`;\n\n\t\t\tthrow new Error(`Invalid export '${key}'${file ? ` in ${file}` : ''} (${hint})`);\n\t\t}\n\t}\n\n\treturn validate;\n}\n\n/**\n * @param {string} key\n * @param {string} ext\n * @returns {string | void}\n */\nfunction hint_for_supported_files(key, ext = '.js') {\n\tconst supported_files = [];\n\n\tif (valid_layout_exports.has(key)) {\n\t\tsupported_files.push(`+layout${ext}`);\n\t}\n\n\tif (valid_page_exports.has(key)) {\n\t\tsupported_files.push(`+page${ext}`);\n\t}\n\n\tif (valid_layout_server_exports.has(key)) {\n\t\tsupported_files.push(`+layout.server${ext}`);\n\t}\n\n\tif (valid_page_server_exports.has(key)) {\n\t\tsupported_files.push(`+page.server${ext}`);\n\t}\n\n\tif (valid_server_exports.has(key)) {\n\t\tsupported_files.push(`+server${ext}`);\n\t}\n\n\tif (supported_files.length > 0) {\n\t\treturn `'${key}' is a valid export in ${supported_files.slice(0, -1).join(', ')}${\n\t\t\tsupported_files.length > 1 ? ' or ' : ''\n\t\t}${supported_files.at(-1)}`;\n\t}\n}\n\nconst valid_layout_exports = new Set([\n\t'load',\n\t'prerender',\n\t'csr',\n\t'ssr',\n\t'trailingSlash',\n\t'config'\n]);\nconst valid_page_exports = new Set([...valid_layout_exports, 'entries']);\nconst valid_layout_server_exports = new Set([...valid_layout_exports]);\nconst valid_page_server_exports = new Set([...valid_layout_server_exports, 'actions', 'entries']);\nconst valid_server_exports = new Set([\n\t'GET',\n\t'POST',\n\t'PATCH',\n\t'PUT',\n\t'DELETE',\n\t'OPTIONS',\n\t'HEAD',\n\t'prerender',\n\t'trailingSlash',\n\t'config',\n\t'entries'\n]);\n\nexport const validate_layout_exports = validator(valid_layout_exports);\nexport const validate_page_exports = validator(valid_page_exports);\nexport const validate_layout_server_exports = validator(valid_layout_server_exports);\nexport const validate_page_server_exports = validator(valid_page_server_exports);\nexport const validate_server_exports = validator(valid_server_exports);\n","import { DEV } from 'esm-env';\nimport { base } from '__sveltekit/paths';\nimport { is_endpoint_request, render_endpoint } from './endpoint.js';\nimport { render_page } from './page/index.js';\nimport { render_response } from './page/render.js';\nimport { respond_with_error } from './page/respond_with_error.js';\nimport { is_form_content_type } from '../../utils/http.js';\nimport { handle_fatal_error, method_not_allowed, redirect_response } from './utils.js';\nimport {\n\tdecode_pathname,\n\tdecode_params,\n\tdisable_search,\n\thas_data_suffix,\n\tnormalize_path,\n\tstrip_data_suffix\n} from '../../utils/url.js';\nimport { exec } from '../../utils/routing.js';\nimport { redirect_json_response, render_data } from './data/index.js';\nimport { add_cookies_to_headers, get_cookies } from './cookie.js';\nimport { create_fetch } from './fetch.js';\nimport { Redirect } from '../control.js';\nimport {\n\tvalidate_layout_exports,\n\tvalidate_layout_server_exports,\n\tvalidate_page_exports,\n\tvalidate_page_server_exports,\n\tvalidate_server_exports\n} from '../../utils/exports.js';\nimport { get_option } from '../../utils/options.js';\nimport { error, json, text } from '../../exports/index.js';\nimport { action_json_redirect, is_action_json_request } from './page/actions.js';\nimport { INVALIDATED_PARAM } from '../shared.js';\n\n/* global __SVELTEKIT_ADAPTER_NAME__ */\n\n/** @type {import('types').RequiredResolveOptions['transformPageChunk']} */\nconst default_transform = ({ html }) => html;\n\n/** @type {import('types').RequiredResolveOptions['filterSerializedResponseHeaders']} */\nconst default_filter = () => false;\n\n/** @type {import('types').RequiredResolveOptions['preload']} */\nconst default_preload = ({ type }) => type === 'js' || type === 'css';\n\nconst page_methods = new Set(['GET', 'HEAD', 'POST']);\n\nconst allowed_page_methods = new Set(['GET', 'HEAD', 'OPTIONS']);\n\n/**\n * @param {Request} request\n * @param {import('types').SSROptions} options\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @param {import('types').SSRState} state\n * @returns {Promise<Response>}\n */\nexport async function respond(request, options, manifest, state) {\n\t/** URL but stripped from the potential `/__data.json` suffix and its search param  */\n\tconst url = new URL(request.url);\n\n\tif (options.csrf_check_origin) {\n\t\tconst forbidden =\n\t\t\tis_form_content_type(request) &&\n\t\t\t(request.method === 'POST' ||\n\t\t\t\trequest.method === 'PUT' ||\n\t\t\t\trequest.method === 'PATCH' ||\n\t\t\t\trequest.method === 'DELETE') &&\n\t\t\trequest.headers.get('origin') !== url.origin;\n\n\t\tif (forbidden) {\n\t\t\tconst csrf_error = error(403, `Cross-site ${request.method} form submissions are forbidden`);\n\t\t\tif (request.headers.get('accept') === 'application/json') {\n\t\t\t\treturn json(csrf_error.body, { status: csrf_error.status });\n\t\t\t}\n\t\t\treturn text(csrf_error.body.message, { status: csrf_error.status });\n\t\t}\n\t}\n\n\tlet decoded;\n\ttry {\n\t\tdecoded = decode_pathname(url.pathname);\n\t} catch {\n\t\treturn text('Malformed URI', { status: 400 });\n\t}\n\n\t/** @type {import('types').SSRRoute | null} */\n\tlet route = null;\n\n\t/** @type {Record<string, string>} */\n\tlet params = {};\n\n\tif (base && !state.prerendering?.fallback) {\n\t\tif (!decoded.startsWith(base)) {\n\t\t\treturn text('Not found', { status: 404 });\n\t\t}\n\t\tdecoded = decoded.slice(base.length) || '/';\n\t}\n\n\tconst is_data_request = has_data_suffix(decoded);\n\t/** @type {boolean[] | undefined} */\n\tlet invalidated_data_nodes;\n\tif (is_data_request) {\n\t\tdecoded = strip_data_suffix(decoded) || '/';\n\t\turl.pathname = strip_data_suffix(url.pathname) || '/';\n\t\tinvalidated_data_nodes = url.searchParams\n\t\t\t.get(INVALIDATED_PARAM)\n\t\t\t?.split('')\n\t\t\t.map((node) => node === '1');\n\t\turl.searchParams.delete(INVALIDATED_PARAM);\n\t}\n\n\tif (!state.prerendering?.fallback) {\n\t\t// TODO this could theoretically break — should probably be inside a try-catch\n\t\tconst matchers = await manifest._.matchers();\n\n\t\tfor (const candidate of manifest._.routes) {\n\t\t\tconst match = candidate.pattern.exec(decoded);\n\t\t\tif (!match) continue;\n\n\t\t\tconst matched = exec(match, candidate.params, matchers);\n\t\t\tif (matched) {\n\t\t\t\troute = candidate;\n\t\t\t\tparams = decode_params(matched);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {import('types').TrailingSlash | void} */\n\tlet trailing_slash = undefined;\n\n\t/** @type {Record<string, string>} */\n\tconst headers = {};\n\n\t/** @type {Record<string, import('./page/types').Cookie>} */\n\tlet cookies_to_add = {};\n\n\t/** @type {import('@sveltejs/kit').RequestEvent} */\n\tconst event = {\n\t\t// @ts-expect-error `cookies` and `fetch` need to be created after the `event` itself\n\t\tcookies: null,\n\t\t// @ts-expect-error\n\t\tfetch: null,\n\t\tgetClientAddress:\n\t\t\tstate.getClientAddress ||\n\t\t\t(() => {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`${__SVELTEKIT_ADAPTER_NAME__} does not specify getClientAddress. Please raise an issue`\n\t\t\t\t);\n\t\t\t}),\n\t\tlocals: {},\n\t\tparams,\n\t\tplatform: state.platform,\n\t\trequest,\n\t\troute: { id: route?.id ?? null },\n\t\tsetHeaders: (new_headers) => {\n\t\t\tfor (const key in new_headers) {\n\t\t\t\tconst lower = key.toLowerCase();\n\t\t\t\tconst value = new_headers[key];\n\n\t\t\t\tif (lower === 'set-cookie') {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Use `event.cookies.set(name, value, options)` instead of `event.setHeaders` to set cookies'\n\t\t\t\t\t);\n\t\t\t\t} else if (lower in headers) {\n\t\t\t\t\tthrow new Error(`\"${key}\" header is already set`);\n\t\t\t\t} else {\n\t\t\t\t\theaders[lower] = value;\n\n\t\t\t\t\tif (state.prerendering && lower === 'cache-control') {\n\t\t\t\t\t\tstate.prerendering.cache = /** @type {string} */ (value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\turl,\n\t\tisDataRequest: is_data_request,\n\t\tisSubRequest: state.depth > 0\n\t};\n\n\t/** @type {import('types').RequiredResolveOptions} */\n\tlet resolve_opts = {\n\t\ttransformPageChunk: default_transform,\n\t\tfilterSerializedResponseHeaders: default_filter,\n\t\tpreload: default_preload\n\t};\n\n\ttry {\n\t\t// determine whether we need to redirect to add/remove a trailing slash\n\t\tif (route) {\n\t\t\t// if `paths.base === '/a/b/c`, then the root route is `/a/b/c/`,\n\t\t\t// regardless of the `trailingSlash` route option\n\t\t\tif (url.pathname === base || url.pathname === base + '/') {\n\t\t\t\ttrailing_slash = 'always';\n\t\t\t} else if (route.page) {\n\t\t\t\tconst nodes = await Promise.all([\n\t\t\t\t\t// we use == here rather than === because [undefined] serializes as \"[null]\"\n\t\t\t\t\t...route.page.layouts.map((n) => (n == undefined ? n : manifest._.nodes[n]())),\n\t\t\t\t\tmanifest._.nodes[route.page.leaf]()\n\t\t\t\t]);\n\n\t\t\t\tif (DEV) {\n\t\t\t\t\tconst layouts = nodes.slice(0, -1);\n\t\t\t\t\tconst page = nodes.at(-1);\n\n\t\t\t\t\tfor (const layout of layouts) {\n\t\t\t\t\t\tif (layout) {\n\t\t\t\t\t\t\tvalidate_layout_server_exports(\n\t\t\t\t\t\t\t\tlayout.server,\n\t\t\t\t\t\t\t\t/** @type {string} */ (layout.server_id)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tvalidate_layout_exports(\n\t\t\t\t\t\t\t\tlayout.universal,\n\t\t\t\t\t\t\t\t/** @type {string} */ (layout.universal_id)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (page) {\n\t\t\t\t\t\tvalidate_page_server_exports(page.server, /** @type {string} */ (page.server_id));\n\t\t\t\t\t\tvalidate_page_exports(page.universal, /** @type {string} */ (page.universal_id));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttrailing_slash = get_option(nodes, 'trailingSlash');\n\t\t\t} else if (route.endpoint) {\n\t\t\t\tconst node = await route.endpoint();\n\t\t\t\ttrailing_slash = node.trailingSlash;\n\n\t\t\t\tif (DEV) {\n\t\t\t\t\tvalidate_server_exports(node, /** @type {string} */ (route.endpoint_id));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!is_data_request) {\n\t\t\t\tconst normalized = normalize_path(url.pathname, trailing_slash ?? 'never');\n\n\t\t\t\tif (normalized !== url.pathname && !state.prerendering?.fallback) {\n\t\t\t\t\treturn new Response(undefined, {\n\t\t\t\t\t\tstatus: 308,\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'x-sveltekit-normalize': '1',\n\t\t\t\t\t\t\tlocation:\n\t\t\t\t\t\t\t\t// ensure paths starting with '//' are not treated as protocol-relative\n\t\t\t\t\t\t\t\t(normalized.startsWith('//') ? url.origin + normalized : normalized) +\n\t\t\t\t\t\t\t\t(url.search === '?' ? '' : url.search)\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst { cookies, new_cookies, get_cookie_header, set_internal } = get_cookies(\n\t\t\trequest,\n\t\t\turl,\n\t\t\ttrailing_slash ?? 'never'\n\t\t);\n\n\t\tcookies_to_add = new_cookies;\n\t\tevent.cookies = cookies;\n\t\tevent.fetch = create_fetch({\n\t\t\tevent,\n\t\t\toptions,\n\t\t\tmanifest,\n\t\t\tstate,\n\t\t\tget_cookie_header,\n\t\t\tset_internal\n\t\t});\n\n\t\tif (state.prerendering && !state.prerendering.fallback) disable_search(url);\n\n\t\tconst response = await options.hooks.handle({\n\t\t\tevent,\n\t\t\tresolve: (event, opts) =>\n\t\t\t\tresolve(event, opts).then((response) => {\n\t\t\t\t\t// add headers/cookies here, rather than inside `resolve`, so that we\n\t\t\t\t\t// can do it once for all responses instead of once per `return`\n\t\t\t\t\tfor (const key in headers) {\n\t\t\t\t\t\tconst value = headers[key];\n\t\t\t\t\t\tresponse.headers.set(key, /** @type {string} */ (value));\n\t\t\t\t\t}\n\n\t\t\t\t\tadd_cookies_to_headers(response.headers, Object.values(cookies_to_add));\n\n\t\t\t\t\tif (state.prerendering && event.route.id !== null) {\n\t\t\t\t\t\tresponse.headers.set('x-sveltekit-routeid', encodeURI(event.route.id));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn response;\n\t\t\t\t})\n\t\t});\n\n\t\t// respond with 304 if etag matches\n\t\tif (response.status === 200 && response.headers.has('etag')) {\n\t\t\tlet if_none_match_value = request.headers.get('if-none-match');\n\n\t\t\t// ignore W/ prefix https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match#directives\n\t\t\tif (if_none_match_value?.startsWith('W/\"')) {\n\t\t\t\tif_none_match_value = if_none_match_value.substring(2);\n\t\t\t}\n\n\t\t\tconst etag = /** @type {string} */ (response.headers.get('etag'));\n\n\t\t\tif (if_none_match_value === etag) {\n\t\t\t\tconst headers = new Headers({ etag });\n\n\t\t\t\t// https://datatracker.ietf.org/doc/html/rfc7232#section-4.1 + set-cookie\n\t\t\t\tfor (const key of [\n\t\t\t\t\t'cache-control',\n\t\t\t\t\t'content-location',\n\t\t\t\t\t'date',\n\t\t\t\t\t'expires',\n\t\t\t\t\t'vary',\n\t\t\t\t\t'set-cookie'\n\t\t\t\t]) {\n\t\t\t\t\tconst value = response.headers.get(key);\n\t\t\t\t\tif (value) headers.set(key, value);\n\t\t\t\t}\n\n\t\t\t\treturn new Response(undefined, {\n\t\t\t\t\tstatus: 304,\n\t\t\t\t\theaders\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Edge case: If user does `return Response(30x)` in handle hook while processing a data request,\n\t\t// we need to transform the redirect response to a corresponding JSON response.\n\t\tif (is_data_request && response.status >= 300 && response.status <= 308) {\n\t\t\tconst location = response.headers.get('location');\n\t\t\tif (location) {\n\t\t\t\treturn redirect_json_response(new Redirect(/** @type {any} */ (response.status), location));\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t} catch (e) {\n\t\tif (e instanceof Redirect) {\n\t\t\tconst response = is_data_request\n\t\t\t\t? redirect_json_response(e)\n\t\t\t\t: route?.page && is_action_json_request(event)\n\t\t\t\t? action_json_redirect(e)\n\t\t\t\t: redirect_response(e.status, e.location);\n\t\t\tadd_cookies_to_headers(response.headers, Object.values(cookies_to_add));\n\t\t\treturn response;\n\t\t}\n\t\treturn await handle_fatal_error(event, options, e);\n\t}\n\n\t/**\n\t * @param {import('@sveltejs/kit').RequestEvent} event\n\t * @param {import('@sveltejs/kit').ResolveOptions} [opts]\n\t */\n\tasync function resolve(event, opts) {\n\t\ttry {\n\t\t\tif (opts) {\n\t\t\t\tif ('ssr' in opts) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'ssr has been removed, set it in the appropriate +layout.js instead. See the PR for more information: https://github.com/sveltejs/kit/pull/6197'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tresolve_opts = {\n\t\t\t\t\ttransformPageChunk: opts.transformPageChunk || default_transform,\n\t\t\t\t\tfilterSerializedResponseHeaders: opts.filterSerializedResponseHeaders || default_filter,\n\t\t\t\t\tpreload: opts.preload || default_preload\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (state.prerendering?.fallback) {\n\t\t\t\treturn await render_response({\n\t\t\t\t\tevent,\n\t\t\t\t\toptions,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tstate,\n\t\t\t\t\tpage_config: { ssr: false, csr: true },\n\t\t\t\t\tstatus: 200,\n\t\t\t\t\terror: null,\n\t\t\t\t\tbranch: [],\n\t\t\t\t\tfetched: [],\n\t\t\t\t\tresolve_opts\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (route) {\n\t\t\t\tconst method = /** @type {import('types').HttpMethod} */ (event.request.method);\n\n\t\t\t\t/** @type {Response} */\n\t\t\t\tlet response;\n\n\t\t\t\tif (is_data_request) {\n\t\t\t\t\tresponse = await render_data(\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\troute,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmanifest,\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tinvalidated_data_nodes,\n\t\t\t\t\t\ttrailing_slash ?? 'never'\n\t\t\t\t\t);\n\t\t\t\t} else if (route.endpoint && (!route.page || is_endpoint_request(event))) {\n\t\t\t\t\tresponse = await render_endpoint(event, await route.endpoint(), state);\n\t\t\t\t} else if (route.page) {\n\t\t\t\t\tif (page_methods.has(method)) {\n\t\t\t\t\t\tresponse = await render_page(event, route.page, options, manifest, state, resolve_opts);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst allowed_methods = new Set(allowed_page_methods);\n\t\t\t\t\t\tconst node = await manifest._.nodes[route.page.leaf]();\n\t\t\t\t\t\tif (node?.server?.actions) {\n\t\t\t\t\t\t\tallowed_methods.add('POST');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (method === 'OPTIONS') {\n\t\t\t\t\t\t\t// This will deny CORS preflight requests implicitly because we don't\n\t\t\t\t\t\t\t// add the required CORS headers to the response.\n\t\t\t\t\t\t\tresponse = new Response(null, {\n\t\t\t\t\t\t\t\tstatus: 204,\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\tallow: Array.from(allowed_methods.values()).join(', ')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst mod = [...allowed_methods].reduce((acc, curr) => {\n\t\t\t\t\t\t\t\tacc[curr] = true;\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t}, /** @type {Record<string, any>} */ ({}));\n\t\t\t\t\t\t\tresponse = method_not_allowed(mod, method);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// a route will always have a page or an endpoint, but TypeScript\n\t\t\t\t\t// doesn't know that\n\t\t\t\t\tthrow new Error('This should never happen');\n\t\t\t\t}\n\n\t\t\t\t// If the route contains a page and an endpoint, we need to add a\n\t\t\t\t// `Vary: Accept` header to the response because of browser caching\n\t\t\t\tif (request.method === 'GET' && route.page && route.endpoint) {\n\t\t\t\t\tconst vary = response.headers\n\t\t\t\t\t\t.get('vary')\n\t\t\t\t\t\t?.split(',')\n\t\t\t\t\t\t?.map((v) => v.trim().toLowerCase());\n\t\t\t\t\tif (!(vary?.includes('accept') || vary?.includes('*'))) {\n\t\t\t\t\t\t// the returned response might have immutable headers,\n\t\t\t\t\t\t// so we have to clone them before trying to mutate them\n\t\t\t\t\t\tresponse = new Response(response.body, {\n\t\t\t\t\t\t\tstatus: response.status,\n\t\t\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\t\t\theaders: new Headers(response.headers)\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponse.headers.append('Vary', 'Accept');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response;\n\t\t\t}\n\n\t\t\tif (state.error) {\n\t\t\t\treturn text('Internal Server Error', {\n\t\t\t\t\tstatus: 500\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// if this request came direct from the user, rather than\n\t\t\t// via our own `fetch`, render a 404 page\n\t\t\tif (state.depth === 0) {\n\t\t\t\treturn await respond_with_error({\n\t\t\t\t\tevent,\n\t\t\t\t\toptions,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tstate,\n\t\t\t\t\tstatus: 404,\n\t\t\t\t\terror: new Error(`Not found: ${event.url.pathname}`),\n\t\t\t\t\tresolve_opts\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (state.prerendering) {\n\t\t\t\treturn text('not found', { status: 404 });\n\t\t\t}\n\n\t\t\t// we can't load the endpoint from our own manifest,\n\t\t\t// so we need to make an actual HTTP request\n\t\t\treturn await fetch(request);\n\t\t} catch (e) {\n\t\t\t// TODO if `e` is instead named `error`, some fucked up Vite transformation happens\n\t\t\t// and I don't even know how to describe it. need to investigate at some point\n\n\t\t\t// HttpError from endpoint can end up here - TODO should it be handled there instead?\n\t\t\treturn await handle_fatal_error(event, options, e);\n\t\t} finally {\n\t\t\tevent.cookies.set = () => {\n\t\t\t\tthrow new Error('Cannot use `cookies.set(...)` after the response has been generated');\n\t\t\t};\n\n\t\t\tevent.setHeaders = () => {\n\t\t\t\tthrow new Error('Cannot use `setHeaders(...)` after the response has been generated');\n\t\t\t};\n\t\t}\n\t}\n}\n","/**\n * @param {Record<string, string>} env\n * @param {{\n * \t\tpublic_prefix: string;\n * \t\tprivate_prefix: string;\n * }} prefixes\n * @returns {Record<string, string>}\n */\nexport function filter_private_env(env, { public_prefix, private_prefix }) {\n\treturn Object.fromEntries(\n\t\tObject.entries(env).filter(\n\t\t\t([k]) =>\n\t\t\t\tk.startsWith(private_prefix) && (public_prefix === '' || !k.startsWith(public_prefix))\n\t\t)\n\t);\n}\n\n/**\n * @param {Record<string, string>} env\n * @param {{\n * \t\tpublic_prefix: string;\n *    private_prefix: string;\n * }} prefixes\n * @returns {Record<string, string>}\n */\nexport function filter_public_env(env, { public_prefix, private_prefix }) {\n\treturn Object.fromEntries(\n\t\tObject.entries(env).filter(\n\t\t\t([k]) =>\n\t\t\t\tk.startsWith(public_prefix) && (private_prefix === '' || !k.startsWith(private_prefix))\n\t\t)\n\t);\n}\n","import { respond } from './respond.js';\nimport { set_private_env, set_public_env } from '../shared-server.js';\nimport { options, get_hooks } from '__SERVER__/internal.js';\nimport { DEV } from 'esm-env';\nimport { filter_private_env, filter_public_env } from '../../utils/env.js';\n\nexport class Server {\n\t/** @type {import('types').SSROptions} */\n\t#options;\n\n\t/** @type {import('@sveltejs/kit').SSRManifest} */\n\t#manifest;\n\n\t/** @param {import('@sveltejs/kit').SSRManifest} manifest */\n\tconstructor(manifest) {\n\t\t/** @type {import('types').SSROptions} */\n\t\tthis.#options = options;\n\t\tthis.#manifest = manifest;\n\t}\n\n\t/**\n\t * @param {{\n\t *   env: Record<string, string>\n\t * }} opts\n\t */\n\tasync init({ env }) {\n\t\t// Take care: Some adapters may have to call `Server.init` per-request to set env vars,\n\t\t// so anything that shouldn't be rerun should be wrapped in an `if` block to make sure it hasn't\n\t\t// been done already.\n\t\t// set env, in case it's used in initialisation\n\t\tset_private_env(\n\t\t\tfilter_private_env(env, {\n\t\t\t\tpublic_prefix: this.#options.env_public_prefix,\n\t\t\t\tprivate_prefix: this.#options.env_private_prefix\n\t\t\t})\n\t\t);\n\t\tset_public_env(\n\t\t\tfilter_public_env(env, {\n\t\t\t\tpublic_prefix: this.#options.env_public_prefix,\n\t\t\t\tprivate_prefix: this.#options.env_private_prefix\n\t\t\t})\n\t\t);\n\n\t\tif (!this.#options.hooks) {\n\t\t\ttry {\n\t\t\t\tconst module = await get_hooks();\n\n\t\t\t\tthis.#options.hooks = {\n\t\t\t\t\thandle: module.handle || (({ event, resolve }) => resolve(event)),\n\t\t\t\t\thandleError: module.handleError || (({ error }) => console.error(error)),\n\t\t\t\t\thandleFetch: module.handleFetch || (({ request, fetch }) => fetch(request))\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tthis.#options.hooks = {\n\t\t\t\t\t\thandle: () => {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t},\n\t\t\t\t\t\thandleError: ({ error }) => console.error(error),\n\t\t\t\t\t\thandleFetch: ({ request, fetch }) => fetch(request)\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Request} request\n\t * @param {import('types').RequestOptions} options\n\t */\n\tasync respond(request, options) {\n\t\t// TODO this should probably have been removed for 1.0 — i think we can get rid of it?\n\t\tif (!(request instanceof Request)) {\n\t\t\tthrow new Error(\n\t\t\t\t'The first argument to server.respond must be a Request object. See https://github.com/sveltejs/kit/pull/3384 for details'\n\t\t\t);\n\t\t}\n\n\t\treturn respond(request, this.#options, this.#manifest, {\n\t\t\t...options,\n\t\t\terror: false,\n\t\t\tdepth: 0\n\t\t});\n\t}\n}\n"],"names":["s","init","encoder","error","options","key","url","response","text","hash","array","i","value","base","paths.base","assets","paths.assets","data","paths.reset","json","status","node","cookies","header","info","event","headers","allowed_methods","fetch"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]}