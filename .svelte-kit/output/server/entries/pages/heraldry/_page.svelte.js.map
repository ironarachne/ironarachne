{"version":3,"file":"_page.svelte.js","sources":["../../../../../../src/routes/heraldry/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import * as Charges from \"$lib/heraldry/charges\";\n  import * as Fields from \"$lib/heraldry/fields\";\n  import * as RND from \"@ironarachne/rng\";\n  import * as Tinctures from \"$lib/heraldry/tinctures\";\n  import * as Variations from \"$lib/heraldry/variations\";\n  import Download from \"$lib/download\";\n  import SaveSVGToPNG from \"$lib/renderers/svg-to-png\";\n  import random from \"random\";\n  import seedrandom from \"seedrandom\";\n  import HeraldryGenerator from \"$lib/heraldry/generator\";\n  import HeraldrySVGRenderer from \"$lib/heraldry/renderers/svg\";\n  import HeraldryGeneratorConfig from \"$lib/heraldry/generatorconfig\";\n\n  let blazon = \"\";\n  let image = \"\";\n  let seed = RND.randomString(13);\n  let charges = Charges.all();\n  let allCharges = Charges.all();\n  let heraldryTag = 'any';\n  let chargeTinctureName = 'any';\n  let chargeTincture = Tinctures.randomChargeTincture();\n  let numberOfChargesOption = 'any';\n  let fieldTinctures1 = Tinctures.all();\n  let fieldTinctures2 = Tinctures.all();\n  let fields = Fields.all();\n  let furCount = 0;\n  let variations = Variations.all();\n  let availableTags = Charges.allChargeTags();\n  const heraldryWidth = 600;\n  const heraldryHeight = 660;\n\n  function changeCharges() {\n    if (heraldryTag == 'any') {\n      charges = allCharges;\n    } else {\n      charges = Charges.matchingTag(heraldryTag, allCharges);\n    }\n  }\n\n  function setChargeTincture() { // TODO: if the field tinctures are 'any', automatically contrast them with the charge tincture here\n    if (chargeTinctureName == 'any') {\n      chargeTincture = Tinctures.randomChargeTincture();\n    } else {\n      let tincture = Tinctures.byName(chargeTinctureName);\n      if (tincture !== undefined) {\n        chargeTincture = tincture;\n      }\n    }\n    setFieldTinctures();\n  }\n\n  function setFieldTinctures() {\n    let types1 = [];\n    let types2 = [];\n    // TODO: when choosing field tinctures is an option, this will need redoing\n    if (chargeTincture.type == 'color' || chargeTincture.type == 'stain') {\n      types1 = ['metal'];\n      types2 = ['metal'];\n    } else {\n      types1 = ['color'];\n      types2 = ['color'];\n\n      if (RND.simple(100) > 70) {\n        types1.push('stain');\n      }\n      if (RND.simple(100) > 80) {\n        types2.push('stain');\n      }\n    }\n    if (furCount === 0) {\n      types1.push('furs');\n    }\n    fieldTinctures1 = Tinctures.ofTypes(types1);\n    fieldTinctures2 = Tinctures.ofTypes(types2);\n  }\n\n  function generate() {\n    random.use(seedrandom(seed));\n    let numberOfCharges = randomNumberOfCharges();\n    if (numberOfChargesOption == 'one') {\n      numberOfCharges = 1;\n    } else if (numberOfChargesOption == 'two') {\n      numberOfCharges = 2;\n    } else if (numberOfChargesOption == 'three') {\n      numberOfCharges = 3;\n    } else if (numberOfChargesOption == 'none') {\n      numberOfCharges = 0;\n    }\n    setChargeTincture();\n\n    let config = new HeraldryGeneratorConfig();\n\n    config.chargeCount = numberOfCharges;\n    config.chargeOptions = charges;\n    config.chargeTinctures = [chargeTincture];\n    config.fieldOptions = fields;\n    config.variationOptions = variations;\n    config.fieldTinctures1 = fieldTinctures1;\n    config.fieldTinctures2 = fieldTinctures2;\n    config.width = heraldryWidth;\n    config.height = heraldryHeight;\n\n    let heraldryGen = new HeraldryGenerator();\n    heraldryGen.config = config;\n    let heraldry = heraldryGen.generate();\n    blazon = heraldry.blazon;\n\n    let renderer = new HeraldrySVGRenderer();\n\n    image = renderer.render(heraldry.device, config.width, config.height);\n  }\n\n  function newSeed() {\n    seed = RND.randomString(13);\n    generate();\n  }\n\n  function randomNumberOfCharges() {\n    const weights = [\n      { item: 0, commonality: 20 },\n      { item: 1, commonality: 55 },\n      { item: 2, commonality: 5 },\n      { item: 3, commonality: 3 },\n    ];\n\n    const result = RND.weighted(weights);\n\n    return result.item;\n  }\n\n  function save() {\n    const blob = new Blob([image], { type: \"image/svg+xml\" });\n    Download(window.URL.createObjectURL(blob), `heraldry-${seed}.svg`);\n  }\n\n  function saveAsPNG() {\n    SaveSVGToPNG(image, heraldryWidth, heraldryHeight, `heraldry-${seed}.png`);\n  }\n\n  newSeed();\n</script>\n\n<style lang=\"scss\">\n  @import \"$lib/styles/reset.scss\";\n  @import \"$lib/styles/main.scss\";\n  @import '$lib/styles/global.scss';\n  @import '$lib/styles/fantasy.scss';\n\n  div.coat-of-arms {\n    width: 600px;\n    height: 660px;\n    margin: 0 auto;\n  }\n\n  p.blazon {\n    text-align: center;\n  }\n</style>\n\n<section class=\"fantasy main\">\n  <h1>Heraldry Generator</h1>\n  <p>\n    Generate fantasy coats-of-arms. Note: if you change the seed, the page URL\n    won't change, but your new seed will be used the next time you hit Generate.\n  </p>\n  <div class=\"input-group\">\n    <label for=\"seed\">Random Seed</label>\n    <input type=\"text\" name=\"seed\" bind:value={seed} id=\"seed\" />\n  </div>\n  <div class=\"input-group\">\n    <label for=\"tag\">Charge Tag</label>\n    <select name=\"tag\" bind:value={heraldryTag} on:change={changeCharges}>\n      <option>any</option>\n      {#each availableTags as tag}\n      <option>{tag}</option>\n      {/each}\n    </select>\n  </div>\n  <div class=\"input-group\">\n    <label for=\"num-charges\">Number of Charges</label>\n    <select name=\"num-charges\" bind:value={numberOfChargesOption}>\n      <option>any</option>\n      <option>none</option>\n      <option>one</option>\n      <option>two</option>\n      <option>three</option>\n    </select>\n  </div>\n  <div class=\"input-group\">\n    <label for=\"charge-tincture\">Charge Tincture</label>\n    <select name=\"charge-tincture\" bind:value={chargeTinctureName} on:change={setChargeTincture}>\n      <option>any</option>\n      <option value=\"gules\">gules (red)</option>\n      <option value=\"argent\">argent (white)</option>\n      <option value=\"vert\">vert (green)</option>\n      <option value=\"purpure\">purpure (purple)</option>\n      <option value=\"sable\">sable (black)</option>\n      <option value=\"Or\">Or (gold)</option>\n      <option value=\"azure\">azure (blue)</option>\n      <option value=\"murrey\">murrey (mulberry)</option>\n      <option value=\"sanguine\">sanguine (blood red)</option>\n      <option value=\"tenné\">tenné (brown)</option>\n    </select>\n  </div>\n  <button on:click={generate}>Generate From Seed</button>\n  <button on:click={newSeed}>Random Seed (and Generate)</button>\n  <button on:click={save} disabled={image === \"\"}>Save</button>\n  <button on:click={saveAsPNG} disabled={image === \"\"}>Save as PNG</button>\n\n  <p class=\"blazon\">{blazon}</p>\n  <div class=\"coat-of-arms\">{@html image}</div>\n</section>\n\n<svelte:head>\n  <title>Heraldry Generator | Iron Arachne</title>\n</svelte:head>\n"],"names":["Charges.all","Tinctures.randomChargeTincture","Tinctures.all","Fields.all","Variations.all","Charges.allChargeTags","Tinctures.ofTypes"],"mappings":";;;;;;;;;;;MA6BQ,gBAAgB;MAChB,iBAAiB;;MAhBnB,SAAS;MACT,QAAQ;MACR,OAAO,IAAI,aAAa,EAAE;AAC1B,MAAA,UAAUA;AAIV,MAAA,iBAAiBC;AAEjB,MAAA,kBAAkBC;AAClB,MAAA,kBAAkBA;AAClB,MAAA,SAASC;AAET,MAAA,aAAaC;AACb,MAAA,gBAAgBC;AAYX,WAAA,oBAAA;AACmB;AACxB,uBAAiBJ,qBAAU;AAAA;AAO7B;;AAGO,WAAA,oBAAA;AACH,QAAA,SAAA,CAAA;AACA,QAAA,SAAA,CAAA;QAEA,eAAe,QAAQ,WAAW,eAAe,QAAQ,SAAA;AAC3D,eAAA,CAAU,OAAO;AACjB,eAAA,CAAU,OAAO;AAAA;AAEjB,eAAA,CAAU,OAAO;AACjB,eAAA,CAAU,OAAO;UAEb,IAAI,OAAO,GAAG,IAAI,IAAA;AACpB,eAAO,KAAK,OAAO;AAAA;UAEjB,IAAI,OAAO,GAAG,IAAI,IAAA;AACpB,eAAO,KAAK,OAAO;AAAA;;AAGN;AACf,aAAO,KAAK,MAAM;AAAA;AAEpB,sBAAkBK,QAAkB,MAAM;AAC1C,sBAAkBA,QAAkB,MAAM;AAAA;AAGnC,WAAA,WAAA;AACP,WAAO,IAAI,WAAW,IAAI,CAAA;QACtB,kBAAkB;AAUtB;QAEI,SAAa,IAAA;AAEjB,WAAO,cAAc;AACrB,WAAO,gBAAgB;AACvB,WAAO,mBAAmB,cAAc;AACxC,WAAO,eAAe;AACtB,WAAO,mBAAmB;AAC1B,WAAO,kBAAkB;AACzB,WAAO,kBAAkB;AACzB,WAAO,QAAQ;AACf,WAAO,SAAS;QAEZ,cAAkB,IAAA;AACtB,gBAAY,SAAS;AACjB,QAAA,WAAW,YAAY;AAC3B,aAAS,SAAS;QAEd,WAAe,IAAA;AAEnB,YAAQ,SAAS,OAAO,SAAS,QAAQ,OAAO,OAAO,OAAO,MAAM;AAAA;AAG7D,WAAA,UAAA;AACP,WAAO,IAAI,aAAa,EAAE;AAC1B;;AAGO,WAAA,wBAAA;AACD,UAAA,UAAA;AAAA,MACF,EAAA,MAAM,GAAG,aAAa,GAAA;AAAA,MACtB,EAAA,MAAM,GAAG,aAAa,GAAA;AAAA,MACtB,EAAA,MAAM,GAAG,aAAa,EAAA;AAAA,MACtB,EAAA,MAAM,GAAG,aAAa,EAAA;AAAA;UAGpB,SAAS,IAAI,SAAS,OAAO;WAE5B,OAAO;AAAA;AAYhB;;;8RA4B6C,cAAA,SAAA,kQAMlC,eAAa,SAAA;AACX,WAAA,UAAA,cAAA,SAAA,kBAAA,GAAG,CAAA;AAAA,yvDAgCkB,UAAU,KACL,aAAA,EAAA,iDAAA,UAAU,KAAE,aAAA,EAAA,iFAAA,OAEhC,MAAM,CAAA,wEACQ,KAAK,yCAAA,SAAA,QAAA,qCAAA,SAAA,QAAA,oDAAA,EAAA,oCAAA,EAAA;;"}