{"version":3,"file":"svg.js","sources":["../../../../src/lib/heraldry/renderers/svg.ts"],"sourcesContent":["import * as RND from \"@ironarachne/rng\";\nimport type Device from \"../device.js\";\n\nexport default class HeraldrySVGRenderer {\n  render(device: Device, width: number, height: number): string {\n    const shieldWidth = 600;\n    const shieldHeight = 660;\n\n    const uid = RND.randomString(4);\n\n    const shieldSVG =\n      `<path fill=\"url(#Division${uid})\" stroke=\"#000000\" stroke-width=\"3\" d=\"M3,3 V260.637C3,369.135,46.339,452.459,99.763,514 C186.238,614.13,300,657,300,657 C300,657,413.762,614.13,500.237,514 C553.661,452.459,597,369.135,597,260.637V3Z\"/>`;\n\n    const svgHeader =\n      `<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${shieldWidth} ${shieldHeight}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">`;\n    let defsSVG = \"\";\n\n    defsSVG += device.field.pattern\n      .replaceAll(\"variation\", `variation${uid}`)\n      .replaceAll(\"Division\", `Division${uid}`);\n\n    for (let i = 0; i < device.field.variations.length; i++) {\n      for (let j = 0; j < device.field.variations[i].tinctures.length; j++) {\n        defsSVG += device.field.variations[i].tinctures[j].pattern;\n      }\n      let pattern = device.field.variations[i].renderSVGPattern();\n      pattern = pattern.replaceAll(\"variation\", `variation${uid}` + (i + 1));\n      defsSVG += pattern;\n    }\n\n    let chargeGroupsSVG = \"\";\n\n    for (let i = 0; i < device.chargeGroups.length; i++) {\n      chargeGroupsSVG += device.chargeGroups[i].renderSVG(shieldWidth, shieldHeight); // TODO: handle different centerPosition and arrangement\n    }\n\n    let svg = svgHeader;\n\n    svg += `<defs>${defsSVG}</defs>`;\n    svg += shieldSVG;\n    svg += chargeGroupsSVG;\n    svg += \"</svg>\";\n\n    return svg.replace(/<\\?xml.*\\?>/g, \"\");\n  }\n}\n"],"names":[],"mappings":";;AAGA,MAAA,oBAAA;AAAA,EAAyC,OAAA,QAAA,OAAA,QAAA;AAErC,UAAA,cAAA;AACA,UAAA,eAAA;AAEA,UAAA,MAAA,IAAA,aAAA,CAAA;AAEA,UAAA,YAAA,4BAAA,GAAA;AAGA,UAAA,YAAA,eAAA,KAAA,aAAA,MAAA,kBAAA,WAAA,IAAA,YAAA;AAEA,QAAA,UAAA;AAEA,eAAA,OAAA,MAAA,QAAA,WAAA,aAAA,YAAA,GAAA,EAAA,EAAA,WAAA,YAAA,WAAA,GAAA,EAAA;AAIA,aAAA,IAAA,GAAA,IAAA,OAAA,MAAA,WAAA,QAAA,KAAA;AACE,eAAA,IAAA,GAAA,IAAA,OAAA,MAAA,WAAA,CAAA,EAAA,UAAA,QAAA,KAAA;AACE,mBAAA,OAAA,MAAA,WAAA,CAAA,EAAA,UAAA,CAAA,EAAA;AAAA,MAAmD;AAErD,UAAA,UAAA,OAAA,MAAA,WAAA,CAAA,EAAA;AACA,gBAAA,QAAA,WAAA,aAAA,YAAA,GAAA,MAAA,IAAA,EAAA;AACA,iBAAA;AAAA,IAAW;AAGb,QAAA,kBAAA;AAEA,aAAA,IAAA,GAAA,IAAA,OAAA,aAAA,QAAA,KAAA;AACE,yBAAA,OAAA,aAAA,CAAA,EAAA,UAAA,aAAA,YAAA;AAAA,IAA6E;AAG/E,QAAA,MAAA;AAEA,WAAA,SAAA,OAAA;AACA,WAAA;AACA,WAAA;AACA,WAAA;AAEA,WAAA,IAAA,QAAA,gBAAA,EAAA;AAAA,EAAqC;AAEzC;"}